<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Java on</title><link>https://ikorihn.github.io/digitalgarden/tags/Java/</link><description>Recent content in Java on</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Fri, 05 May 2023 20:37:00 +0900</lastBuildDate><atom:link href="https://ikorihn.github.io/digitalgarden/tags/Java/index.xml" rel="self" type="application/rss+xml"/><item><title>Junitでメソッド名が長すぎてエラーになる</title><link>https://ikorihn.github.io/digitalgarden/note/Junit%E3%81%A7%E3%83%A1%E3%82%BD%E3%83%83%E3%83%89%E5%90%8D%E3%81%8C%E9%95%B7%E3%81%99%E3%81%8E%E3%81%A6%E3%82%A8%E3%83%A9%E3%83%BC%E3%81%AB%E3%81%AA%E3%82%8B/</link><pubDate>Fri, 05 May 2023 20:37:00 +0900</pubDate><guid>https://ikorihn.github.io/digitalgarden/note/Junit%E3%81%A7%E3%83%A1%E3%82%BD%E3%83%83%E3%83%89%E5%90%8D%E3%81%8C%E9%95%B7%E3%81%99%E3%81%8E%E3%81%A6%E3%82%A8%E3%83%A9%E3%83%BC%E3%81%AB%E3%81%AA%E3%82%8B/</guid><description>1 2 3 4 5 6 7 8 9 10 11 12 13 [ERROR] org.jetbrains.kotlin.backend.common.BackendException: Backend Internal error: Exception during file facade code generation File being compiled: [file:///tmp/workspace/very/long/long/TestClass.java] The root cause java.io.FileNotFoundException was thrown at: java.io.FileOutputStream.open0(Native Method) at org.jetbrains.kotlin.backend.common.CodegenUtil.reportBackendException(CodegenUtil.kt:239) at org.jetbrains.kotlin.codegen.PackageCodegenImpl.generate(PackageCodegenImpl.java:78) at org.jetbrains.kotlin.codegen.DefaultCodegenFactory.generatePackage(CodegenFactory.kt:77) at org.jetbrains.kotlin.codegen.DefaultCodegenFactory.generateModule(CodegenFactory.kt:62) at org.jetbrains.kotlin.codegen.KotlinCodegenFacade.compileCorrectFiles(KotlinCodegenFacade.java:35) ... Caused by: java.io.FileNotFoundException: /tmp/workspace/very</description></item><item><title>mavenでspringのライブラリダウンロード時にエラー</title><link>https://ikorihn.github.io/digitalgarden/note/maven%E3%81%A7spring%E3%81%AE%E3%83%A9%E3%82%A4%E3%83%96%E3%83%A9%E3%83%AA%E3%83%80%E3%82%A6%E3%83%B3%E3%83%AD%E3%83%BC%E3%83%89%E6%99%82%E3%81%AB%E3%82%A8%E3%83%A9%E3%83%BC/</link><pubDate>Fri, 05 May 2023 19:07:00 +0900</pubDate><guid>https://ikorihn.github.io/digitalgarden/note/maven%E3%81%A7spring%E3%81%AE%E3%83%A9%E3%82%A4%E3%83%96%E3%83%A9%E3%83%AA%E3%83%80%E3%82%A6%E3%83%B3%E3%83%AD%E3%83%BC%E3%83%89%E6%99%82%E3%81%AB%E3%82%A8%E3%83%A9%E3%83%BC/</guid><description>spring-libs-release からダウンロードしようとするも、エラーになる https://repo.spring.io/libs-release からダウンロードしなきゃならないところ、 http://repo.springsource.org/libs-release/ から取得しようとしてタイムアウトエラーになっている</description></item><item><title>Java BigDecimalにdoubleを渡したとき誤差がでる</title><link>https://ikorihn.github.io/digitalgarden/note/Java-BigDecimal%E3%81%ABdouble%E3%82%92%E6%B8%A1%E3%81%97%E3%81%9F%E3%81%A8%E3%81%8D%E8%AA%A4%E5%B7%AE%E3%81%8C%E3%81%A7%E3%82%8B/</link><pubDate>Thu, 30 Mar 2023 16:23:00 +0900</pubDate><guid>https://ikorihn.github.io/digitalgarden/note/Java-BigDecimal%E3%81%ABdouble%E3%82%92%E6%B8%A1%E3%81%97%E3%81%9F%E3%81%A8%E3%81%8D%E8%AA%A4%E5%B7%AE%E3%81%8C%E3%81%A7%E3%82%8B/</guid><description>Javaで正確な数値計算を行うため BigDecimal を使っていたが、BigDecimalをdoubleで初期化したあと、小数点以下で四捨五入したところ誤差が</description></item><item><title>Jacksonでdeserializeをカスタマイズする</title><link>https://ikorihn.github.io/digitalgarden/note/Jackson%E3%81%A7deserialize%E3%82%92%E3%82%AB%E3%82%B9%E3%82%BF%E3%83%9E%E3%82%A4%E3%82%BA%E3%81%99%E3%82%8B/</link><pubDate>Mon, 07 Mar 2022 19:30:00 +0900</pubDate><guid>https://ikorihn.github.io/digitalgarden/note/Jackson%E3%81%A7deserialize%E3%82%92%E3%82%AB%E3%82%B9%E3%82%BF%E3%83%9E%E3%82%A4%E3%82%BA%E3%81%99%E3%82%8B/</guid><description>#Kotlin #Java JSONの特定の値に応じてパースする型を変えたい JSONのtypeというパラメータによって、使うフィールドが異なる場合にパッと思いつくや</description></item><item><title>spotlessでコードフォーマットする</title><link>https://ikorihn.github.io/digitalgarden/note/spotless%E3%81%A7%E3%82%B3%E3%83%BC%E3%83%89%E3%83%95%E3%82%A9%E3%83%BC%E3%83%9E%E3%83%83%E3%83%88%E3%81%99%E3%82%8B/</link><pubDate>Thu, 17 Jun 2021 14:49:00 +0900</pubDate><guid>https://ikorihn.github.io/digitalgarden/note/spotless%E3%81%A7%E3%82%B3%E3%83%BC%E3%83%89%E3%83%95%E3%82%A9%E3%83%BC%E3%83%9E%E3%83%83%E3%83%88%E3%81%99%E3%82%8B/</guid><description>https://github.com/diffplug/spotless/tree/main/plugin-maven Java,Kotlinのプロジェクトにフォーマッタとしてspotlessを導入する Java link: JavaのFormatter 以下のフォーマッタが利用</description></item><item><title>JavaのDateとDateAndTimeAPIとの相互変換</title><link>https://ikorihn.github.io/digitalgarden/note/Java%E3%81%AEDate%E3%81%A8DateAndTimeAPI%E3%81%A8%E3%81%AE%E7%9B%B8%E4%BA%92%E5%A4%89%E6%8F%9B/</link><pubDate>Wed, 16 Jun 2021 16:22:00 +0900</pubDate><guid>https://ikorihn.github.io/digitalgarden/note/Java%E3%81%AEDate%E3%81%A8DateAndTimeAPI%E3%81%A8%E3%81%AE%E7%9B%B8%E4%BA%92%E5%A4%89%E6%8F%9B/</guid><description>#Java https://javazuki.com/articles/date-calendar-convert-to-datetime.html Date/Calendar↔Date And Time API系変換のまとめ Date/Calendar↔Date And Time API系の変換は、Instantを介</description></item><item><title>JUnitでresourceのファイルを読み込む</title><link>https://ikorihn.github.io/digitalgarden/note/JUnit%E3%81%A7resource%E3%81%AE%E3%83%95%E3%82%A1%E3%82%A4%E3%83%AB%E3%82%92%E8%AA%AD%E3%81%BF%E8%BE%BC%E3%82%80/</link><pubDate>Tue, 08 Jun 2021 17:50:00 +0900</pubDate><guid>https://ikorihn.github.io/digitalgarden/note/JUnit%E3%81%A7resource%E3%81%AE%E3%83%95%E3%82%A1%E3%82%A4%E3%83%AB%E3%82%92%E8%AA%AD%E3%81%BF%E8%BE%BC%E3%82%80/</guid><description>ユニットテスト時に、 https://www.baeldung.com/junit-src-test-resources-directory-path https://stackoverflow.com/questions/3891375/how-to-read-a-text-file-resource-into-java-unit-test Hoge.class.getResourceを使うとよい 1 2 3 4 5 6 public class FooTest { @Test public void readXMLToString() throws Exception { java.net.URL url = MyClass.class.getResource(&amp;#34;test/resources/abc.xml&amp;#34;); java.nio.file.Path resPath = java.nio.file.Paths.get(url.toURI()); String xml = new String(java.nio.file.Files.readAllBytes(resPath),</description></item><item><title>DBUnitでPotential problem foundのWARNが出る</title><link>https://ikorihn.github.io/digitalgarden/note/DBUnit%E3%81%A7Potential-problem-found%E3%81%AEWARN%E3%81%8C%E5%87%BA%E3%82%8B/</link><pubDate>Fri, 04 Jun 2021 17:36:00 +0900</pubDate><guid>https://ikorihn.github.io/digitalgarden/note/DBUnit%E3%81%A7Potential-problem-found%E3%81%AEWARN%E3%81%8C%E5%87%BA%E3%82%8B/</guid><description>#Java DBUnit を実行すると Potential problem found: The configured data type factory 'class org.dbunit.dataset.datatype.DefaultDataTypeFactory' might cause problems with the current database と怒られるのを解決した 事象 1 [main] WARN org.dbunit.dataset.AbstractTableMetaData - Potential problem found: The configured data type factory &amp;#39;class org.dbunit.dataset.datatype.DefaultDataTypeFactory&amp;#39; might cause problems with the current database &amp;#39;H2&amp;#39; (e.g. some datatypes may not be supported properly). In</description></item><item><title>Tomcatから外部通信時にproxyを通す</title><link>https://ikorihn.github.io/digitalgarden/note/Tomcat%E3%81%8B%E3%82%89%E5%A4%96%E9%83%A8%E9%80%9A%E4%BF%A1%E6%99%82%E3%81%ABproxy%E3%82%92%E9%80%9A%E3%81%99/</link><pubDate>Mon, 31 May 2021 15:37:00 +0900</pubDate><guid>https://ikorihn.github.io/digitalgarden/note/Tomcat%E3%81%8B%E3%82%89%E5%A4%96%E9%83%A8%E9%80%9A%E4%BF%A1%E6%99%82%E3%81%ABproxy%E3%82%92%E9%80%9A%E3%81%99/</guid><description>1 2 3 -Dhttp.proxyHost=&amp;#34;proxy.example.jp&amp;#34; \ -Dhttp.proxyPort=3333 \ -Dhttp.nonProxyHosts=&amp;#34;localhost|127.0.0.1&amp;#34; Intellij IDEAでは Edit Configuration &amp;gt; Tomcat Server &amp;gt; Server &amp;gt; VM options 通信ライブラリを使っている場合、この設定だけでは反映されない 通信クラス 挙動 java.net.URLConnection プロキシが使用</description></item><item><title>JavaのFormatter</title><link>https://ikorihn.github.io/digitalgarden/note/Java%E3%81%AEFormatter/</link><pubDate>Fri, 07 May 2021 21:57:00 +0900</pubDate><guid>https://ikorihn.github.io/digitalgarden/note/Java%E3%81%AEFormatter/</guid><description>Java Check-style and Formatting using Maven | by Arushi Sharma | Medium google-java-format https://github.com/google/google-java-format/ mavenのpluginではなくIDEのpluginだったり、spotlessから使ったりするライブラリ googleformatter-maven-plugin https://github.com/talios/googleformatter-maven-plugin Google Java</description></item><item><title>JUni4のparameterized testをJUnit5に</title><link>https://ikorihn.github.io/digitalgarden/note/JUni4%E3%81%AEparameterized-test%E3%82%92JUnit5%E3%81%AB/</link><pubDate>Fri, 07 May 2021 21:18:00 +0900</pubDate><guid>https://ikorihn.github.io/digitalgarden/note/JUni4%E3%81%AEparameterized-test%E3%82%92JUnit5%E3%81%AB/</guid><description>#Java #Kotlin テスト対象コード 1 2 3 class Calculator() { fun add(x: Int, y: Int) = x + y } JUnit4 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 import org.hamcrest.CoreMatchers import org.hamcrest.MatcherAssert import org.junit.Test import org.junit.runner.RunWith import org.junit.runners.Parameterized @RunWith(Parameterized::class) internal class CalculatorTest(private val x: Int, private</description></item></channel></rss>