<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>git on</title><link>https://ikorihn.github.io/digitalgarden/tags/git/</link><description>Recent content in git on</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Fri, 05 May 2023 20:29:00 +0900</lastBuildDate><atom:link href="https://ikorihn.github.io/digitalgarden/tags/git/index.xml" rel="self" type="application/rss+xml"/><item><title>Git</title><link>https://ikorihn.github.io/digitalgarden/note/Git/</link><pubDate>Fri, 05 May 2023 20:29:00 +0900</pubDate><guid>https://ikorihn.github.io/digitalgarden/note/Git/</guid><description/></item><item><title>Git remoteにブランチが存在するかどうかをチェックする</title><link>https://ikorihn.github.io/digitalgarden/note/Git-remote%E3%81%AB%E3%83%96%E3%83%A9%E3%83%B3%E3%83%81%E3%81%8C%E5%AD%98%E5%9C%A8%E3%81%99%E3%82%8B%E3%81%8B%E3%81%A9%E3%81%86%E3%81%8B%E3%82%92%E3%83%81%E3%82%A7%E3%83%83%E3%82%AF%E3%81%99%E3%82%8B/</link><pubDate>Mon, 01 May 2023 19:42:00 +0900</pubDate><guid>https://ikorihn.github.io/digitalgarden/note/Git-remote%E3%81%AB%E3%83%96%E3%83%A9%E3%83%B3%E3%83%81%E3%81%8C%E5%AD%98%E5%9C%A8%E3%81%99%E3%82%8B%E3%81%8B%E3%81%A9%E3%81%86%E3%81%8B%E3%82%92%E3%83%81%E3%82%A7%E3%83%83%E3%82%AF%E3%81%99%E3%82%8B/</guid><description>Git でremoteにブランチが存在するかをチェックするには git ls-remote を使う 1 2 3 4 5 6 7 8 9 10 11 REMOTE_NAME=origin # URLを直接指定してもいい # REMOTE_NAME=https://github.com/xxx/yyy BRANCH_NAME=master if git ls-remote --exit-code $REMOTE_NAME $BRANCH_NAME &amp;gt;/dev/null 2&amp;gt;&amp;amp;1;</description></item><item><title>Git でpullしようとしたらfatal cannot lock ref のエラーがでる</title><link>https://ikorihn.github.io/digitalgarden/note/Git-%E3%81%A7pull%E3%81%97%E3%82%88%E3%81%86%E3%81%A8%E3%81%97%E3%81%9F%E3%82%89fatal-cannot-lock-ref-%E3%81%AE%E3%82%A8%E3%83%A9%E3%83%BC%E3%81%8C%E3%81%A7%E3%82%8B/</link><pubDate>Mon, 01 May 2023 17:17:00 +0900</pubDate><guid>https://ikorihn.github.io/digitalgarden/note/Git-%E3%81%A7pull%E3%81%97%E3%82%88%E3%81%86%E3%81%A8%E3%81%97%E3%81%9F%E3%82%89fatal-cannot-lock-ref-%E3%81%AE%E3%82%A8%E3%83%A9%E3%83%BC%E3%81%8C%E3%81%A7%E3%82%8B/</guid><description>Jenkinsのgit fetchでCannot lock refエラーが出た時の対応 | by eiryu | Medium Gitでブランチを作ろうとしたら「fatal: cannot lock ref &amp;h</description></item><item><title>Git hunkのサイズを変更する</title><link>https://ikorihn.github.io/digitalgarden/note/Git-hunk%E3%81%AE%E3%82%B5%E3%82%A4%E3%82%BA%E3%82%92%E5%A4%89%E6%9B%B4%E3%81%99%E3%82%8B/</link><pubDate>Tue, 25 Apr 2023 17:39:00 +0900</pubDate><guid>https://ikorihn.github.io/digitalgarden/note/Git-hunk%E3%81%AE%E3%82%B5%E3%82%A4%E3%82%BA%E3%82%92%E5%A4%89%E6%9B%B4%E3%81%99%E3%82%8B/</guid><description>git diff --ignore-matching-lines=&amp;lt;pattern&amp;gt; で特定のdiffを除外しようとしたがうまくいかず調べたところ、hunk単位でパターンが適用されるらしい。 hunkのサイズを小さくできな</description></item><item><title>tig</title><link>https://ikorihn.github.io/digitalgarden/note/tig/</link><pubDate>Fri, 03 Feb 2023 12:45:00 +0900</pubDate><guid>https://ikorihn.github.io/digitalgarden/note/tig/</guid><description>TUIのGitクライアントツール 設定ファイル ~/.tigrc $XDG_CONFIG_HOME/tig/config TIPS blameの操作 blame viewを開く b 親のコミットに遡る 該当行で , 親のコミットからもとのコミッ</description></item><item><title>Docker build時にhostのsshキーを使う</title><link>https://ikorihn.github.io/digitalgarden/note/Docker-build%E6%99%82%E3%81%ABhost%E3%81%AEssh%E3%82%AD%E3%83%BC%E3%82%92%E4%BD%BF%E3%81%86/</link><pubDate>Thu, 29 Dec 2022 12:06:00 +0900</pubDate><guid>https://ikorihn.github.io/digitalgarden/note/Docker-build%E6%99%82%E3%81%ABhost%E3%81%AEssh%E3%82%AD%E3%83%BC%E3%82%92%E4%BD%BF%E3%81%86/</guid><description>#Docker #git 参考 BuildKit でイメージ構築 — Docker-docs-ja 20.10 ドキュメント docker buildする際にhost側のssh keyを使ってbuildする - Qiita Docker の BuildKit を使ってセキュアなビル</description></item><item><title>Go プライベートリポジトリに対してsshを使ってgo getする</title><link>https://ikorihn.github.io/digitalgarden/note/Go-%E3%83%97%E3%83%A9%E3%82%A4%E3%83%99%E3%83%BC%E3%83%88%E3%83%AA%E3%83%9D%E3%82%B8%E3%83%88%E3%83%AA%E3%81%AB%E5%AF%BE%E3%81%97%E3%81%A6ssh%E3%82%92%E4%BD%BF%E3%81%A3%E3%81%A6go-get%E3%81%99%E3%82%8B/</link><pubDate>Wed, 28 Dec 2022 18:05:00 +0900</pubDate><guid>https://ikorihn.github.io/digitalgarden/note/Go-%E3%83%97%E3%83%A9%E3%82%A4%E3%83%99%E3%83%BC%E3%83%88%E3%83%AA%E3%83%9D%E3%82%B8%E3%83%88%E3%83%AA%E3%81%AB%E5%AF%BE%E3%81%97%E3%81%A6ssh%E3%82%92%E4%BD%BF%E3%81%A3%E3%81%A6go-get%E3%81%99%E3%82%8B/</guid><description>#Go #git go get 時にはgit cloneが動いているのでgitの設定でコントロールできる。 tl;dr 環境変数 GOPRIVATE=&amp;lt;private repository&amp;gt; を設定する 例 export GOPRIVATE=github.com/PRIVATE 秘密鍵などsshの設定をしたい</description></item><item><title>Git fatal detected dubious ownership in repositoryエラー</title><link>https://ikorihn.github.io/digitalgarden/note/Git-fatal-detected-dubious-ownership-in-repository%E3%82%A8%E3%83%A9%E3%83%BC/</link><pubDate>Wed, 28 Dec 2022 16:39:00 +0900</pubDate><guid>https://ikorihn.github.io/digitalgarden/note/Git-fatal-detected-dubious-ownership-in-repository%E3%82%A8%E3%83%A9%E3%83%BC/</guid><description>#git 事象 gitの操作時に以下のメッセージが出て困った。 1 2 3 4 5 $ git fetch fatal: detected dubious ownership in repository at &amp;#39;/path/to/repo&amp;#39; To add an exception for this directory, call: git config --global --add safe.directory /path/to/repo 原因 CVE-2022-24765 の脆弱性への対応として</description></item><item><title>git shallow cloneとsparse checkoutを活用</title><link>https://ikorihn.github.io/digitalgarden/note/git-shallow-clone%E3%81%A8sparse-checkout%E3%82%92%E6%B4%BB%E7%94%A8/</link><pubDate>Fri, 09 Dec 2022 15:11:00 +0900</pubDate><guid>https://ikorihn.github.io/digitalgarden/note/git-shallow-clone%E3%81%A8sparse-checkout%E3%82%92%E6%B4%BB%E7%94%A8/</guid><description>#git Shallow clone depth を指定すると、その数のコミットログだけを取得するので、コミット数の多いリポジトリでデータ量を削減できる。 1 2 3 4 $ git clone --depth=1 git@github.com:git/git.git # -b &amp;lt;branch&amp;gt; でブ</description></item><item><title>GitコミットログにJIRAのチケット番号を自動付与する</title><link>https://ikorihn.github.io/digitalgarden/note/Git%E3%82%B3%E3%83%9F%E3%83%83%E3%83%88%E3%83%AD%E3%82%B0%E3%81%ABJIRA%E3%81%AE%E3%83%81%E3%82%B1%E3%83%83%E3%83%88%E7%95%AA%E5%8F%B7%E3%82%92%E8%87%AA%E5%8B%95%E4%BB%98%E4%B8%8E%E3%81%99%E3%82%8B/</link><pubDate>Mon, 21 Feb 2022 16:57:00 +0900</pubDate><guid>https://ikorihn.github.io/digitalgarden/note/Git%E3%82%B3%E3%83%9F%E3%83%83%E3%83%88%E3%83%AD%E3%82%B0%E3%81%ABJIRA%E3%81%AE%E3%83%81%E3%82%B1%E3%83%83%E3%83%88%E7%95%AA%E5%8F%B7%E3%82%92%E8%87%AA%E5%8B%95%E4%BB%98%E4%B8%8E%E3%81%99%E3%82%8B/</guid><description>#git コミットメッセージにチケット番号を入れるのはよくある運用ですが、 手動で毎回入れると漏れがでやすいので、自動でチケット番号を入れたいです。 git</description></item><item><title>gitコミットにissue番号をいれる</title><link>https://ikorihn.github.io/digitalgarden/note/git%E3%82%B3%E3%83%9F%E3%83%83%E3%83%88%E3%81%ABissue%E7%95%AA%E5%8F%B7%E3%82%92%E3%81%84%E3%82%8C%E3%82%8B/</link><pubDate>Wed, 11 Aug 2021 16:42:00 +0900</pubDate><guid>https://ikorihn.github.io/digitalgarden/note/git%E3%82%B3%E3%83%9F%E3%83%83%E3%83%88%E3%81%ABissue%E7%95%AA%E5%8F%B7%E3%82%92%E3%81%84%E3%82%8C%E3%82%8B/</guid><description>#git .git/hooks/prepare-commit-msg 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 #!/bin/bash -u # https://qiita.com/koara-local/items/eae7942131e53cb8031a current_branch=$(git branch | grep &amp;#34;^\*&amp;#34;) if [[ ! &amp;#34;$current_branch&amp;#34; =~ .*/[A-Z]+-[0-9]+.* ]]; then exit 0 fi # e.g. feature/AAA-123-xxx-hogehoge -&amp;gt; AAA-123 issue_id=$(echo &amp;#34;$current_branch&amp;#34; | sed -E &amp;#39;s/^.*\/([A-Z]+-[0-9]+).*$/\1/&amp;#39;) # Insert Issue ID at the beginning of the commit message if it doesn&amp;#39;t exist if [[ ! $(head -n</description></item><item><title>git-sparse-checkout</title><link>https://ikorihn.github.io/digitalgarden/note/git-sparse-checkout/</link><pubDate>Thu, 10 Jun 2021 11:20:00 +0900</pubDate><guid>https://ikorihn.github.io/digitalgarden/note/git-sparse-checkout/</guid><description>#git https://git-scm.com/docs/git-sparse-checkout リポジトリから一部だけを取得する設定 必要なのが巨大なリポジトリのうちの1ファイルだけの場合などに、 全体をcheckoutすると容量を食う</description></item><item><title>git全履歴からgrepする</title><link>https://ikorihn.github.io/digitalgarden/note/git%E5%85%A8%E5%B1%A5%E6%AD%B4%E3%81%8B%E3%82%89grep%E3%81%99%E3%82%8B/</link><pubDate>Thu, 03 Jun 2021 20:46:00 +0900</pubDate><guid>https://ikorihn.github.io/digitalgarden/note/git%E5%85%A8%E5%B1%A5%E6%AD%B4%E3%81%8B%E3%82%89grep%E3%81%99%E3%82%8B/</guid><description>#git https://suzuken.hatenablog.jp/entry/2018/12/05/155040 ファイルの中身を検索 git grep 過去のcommitにあったすべてのコードから正規表現で検索する 1 $ git grep &amp;#39;&amp;lt;regexp&amp;gt;&amp;#39; $(git rev-list --all) pathを指定する場合は以下 1 $ git</description></item><item><title>gitリポジトリの軽量化のためにやったこと</title><link>https://ikorihn.github.io/digitalgarden/note/git%E3%83%AA%E3%83%9D%E3%82%B8%E3%83%88%E3%83%AA%E3%81%AE%E8%BB%BD%E9%87%8F%E5%8C%96%E3%81%AE%E3%81%9F%E3%82%81%E3%81%AB%E3%82%84%E3%81%A3%E3%81%9F%E3%81%93%E3%81%A8/</link><pubDate>Fri, 21 May 2021 12:43:00 +0900</pubDate><guid>https://ikorihn.github.io/digitalgarden/note/git%E3%83%AA%E3%83%9D%E3%82%B8%E3%83%88%E3%83%AA%E3%81%AE%E8%BB%BD%E9%87%8F%E5%8C%96%E3%81%AE%E3%81%9F%E3%82%81%E3%81%AB%E3%82%84%E3%81%A3%E3%81%9F%E3%81%93%E3%81%A8/</guid><description>#git リポジトリの軽量化をしたい。 今あるファイルを消すだけではリポジトリサイズは減らない。 自由にしていいリポジトリであれば、gitの履歴を改変す</description></item><item><title>Windowsのgit設定</title><link>https://ikorihn.github.io/digitalgarden/note/Windows%E3%81%AEgit%E8%A8%AD%E5%AE%9A/</link><pubDate>Mon, 03 May 2021 10:38:00 +0900</pubDate><guid>https://ikorihn.github.io/digitalgarden/note/Windows%E3%81%AEgit%E8%A8%AD%E5%AE%9A/</guid><description>1 2 3 4 5 6 7 8 # ファイルの大文字・小文字を区別して認識する $ git config --global core.ignorecase false # 日本語のファイル名が文字化けしないでちゃんと表示される $ git config --global core.quotepath false</description></item><item><title>Jenkinsジョブでgit-lfsを使用して一部だけpullしたい</title><link>https://ikorihn.github.io/digitalgarden/note/Jenkins%E3%82%B8%E3%83%A7%E3%83%96%E3%81%A7git-lfs%E3%82%92%E4%BD%BF%E7%94%A8%E3%81%97%E3%81%A6%E4%B8%80%E9%83%A8%E3%81%A0%E3%81%91pull%E3%81%97%E3%81%9F%E3%81%84/</link><pubDate>Fri, 19 Feb 2021 18:26:00 +0900</pubDate><guid>https://ikorihn.github.io/digitalgarden/note/Jenkins%E3%82%B8%E3%83%A7%E3%83%96%E3%81%A7git-lfs%E3%82%92%E4%BD%BF%E7%94%A8%E3%81%97%E3%81%A6%E4%B8%80%E9%83%A8%E3%81%A0%E3%81%91pull%E3%81%97%E3%81%9F%E3%81%84/</guid><description>Jenkinsとgitlfs やりたいこと Jenkinsのgit pluginで一部だけgit lfs pullしたい わかっていること git lfs pull -I &amp;quot;$target&amp;quot; で対象の</description></item></channel></rss>