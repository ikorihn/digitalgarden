<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Kotlin on</title><link>https://ikorihn.github.io/digitalgarden/tags/Kotlin/</link><description>Recent content in Kotlin on</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Mon, 07 Mar 2022 19:30:00 +0900</lastBuildDate><atom:link href="https://ikorihn.github.io/digitalgarden/tags/Kotlin/index.xml" rel="self" type="application/rss+xml"/><item><title>Jacksonでdeserializeをカスタマイズする</title><link>https://ikorihn.github.io/digitalgarden/note/Jackson%E3%81%A7deserialize%E3%82%92%E3%82%AB%E3%82%B9%E3%82%BF%E3%83%9E%E3%82%A4%E3%82%BA%E3%81%99%E3%82%8B/</link><pubDate>Mon, 07 Mar 2022 19:30:00 +0900</pubDate><guid>https://ikorihn.github.io/digitalgarden/note/Jackson%E3%81%A7deserialize%E3%82%92%E3%82%AB%E3%82%B9%E3%82%BF%E3%83%9E%E3%82%A4%E3%82%BA%E3%81%99%E3%82%8B/</guid><description>#Kotlin #Java
JSONの特定の値に応じてパースする型を変えたい JSONのtypeというパラメータによって、使うフィールドが異なる場合にパッと思いつくやり方は以下かなと思います。
1 2 3 4 5 6 7 8 9 10 data class User( // ユーザーのタイプを表す &amp;#39;free&amp;#39; or &amp;#39;payed&amp;#39; val type: String, // どちらの型でも共通 val name: String, // freeの場合のみ存在する val trialEndAt: Date, // payedの場合のみ存在する val purchasedAt: Date, ) 1 2 3 4 5 6 7 8 9 10 11 12 13 14 { &amp;#34;users&amp;#34;: [ { &amp;#34;type&amp;#34;: &amp;#34;free&amp;#34;, &amp;#34;name&amp;#34;: &amp;#34;John&amp;#34;, &amp;#34;trialEndAt&amp;#34;: &amp;#39;2022-02-02T19:00:00+09:00&amp;#39; }, { &amp;#34;type&amp;#34;: &amp;#34;payed&amp;#34;, &amp;#34;name&amp;#34;: &amp;#34;Alice&amp;#34;, &amp;#34;purchasedAt&amp;#34;: &amp;#39;2022-01-22T19:00:00+09:00&amp;#39; } ] } @JsonTypeInfo、@JsonSubTypes を使って型を振り分ける 1 2 3 4 5 6 7 8 9 10 11 12 @JsonTypeInfo(use = JsonTypeInfo.</description></item><item><title>spotlessでコードフォーマットする</title><link>https://ikorihn.github.io/digitalgarden/note/spotless%E3%81%A7%E3%82%B3%E3%83%BC%E3%83%89%E3%83%95%E3%82%A9%E3%83%BC%E3%83%9E%E3%83%83%E3%83%88%E3%81%99%E3%82%8B/</link><pubDate>Thu, 17 Jun 2021 14:49:00 +0900</pubDate><guid>https://ikorihn.github.io/digitalgarden/note/spotless%E3%81%A7%E3%82%B3%E3%83%BC%E3%83%89%E3%83%95%E3%82%A9%E3%83%BC%E3%83%9E%E3%83%83%E3%83%88%E3%81%99%E3%82%8B/</guid><description>https://github.com/diffplug/spotless/tree/main/plugin-maven
Java,Kotlinのプロジェクトにフォーマッタとしてspotlessを導入する
Java link: JavaのFormatter
以下のフォーマッタが利用可能
https://github.com/google/google-java-format https://github.com/jhipster/prettier-java https://github.com/diffplug/spotless/blob/main/ECLIPSE_SCREENSHOTS.md
JavaユーザならCode FormatterにはSpotlessがオススメ - 京都行きたい
https://github.com/diffplug/spotless/tree/main/plugin-maven#java
1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 &amp;lt;plugin&amp;gt; &amp;lt;groupId&amp;gt;com.</description></item><item><title>Kotlin_Coroutines</title><link>https://ikorihn.github.io/digitalgarden/note/Kotlin_Coroutines/</link><pubDate>Wed, 02 Jun 2021 17:17:00 +0900</pubDate><guid>https://ikorihn.github.io/digitalgarden/note/Kotlin_Coroutines/</guid><description>#Kotlin</description></item><item><title>Kotlin_Coroutinesの並列数を制御する</title><link>https://ikorihn.github.io/digitalgarden/note/Kotlin_Coroutines%E3%81%AE%E4%B8%A6%E5%88%97%E6%95%B0%E3%82%92%E5%88%B6%E5%BE%A1%E3%81%99%E3%82%8B/</link><pubDate>Wed, 02 Jun 2021 17:16:00 +0900</pubDate><guid>https://ikorihn.github.io/digitalgarden/note/Kotlin_Coroutines%E3%81%AE%E4%B8%A6%E5%88%97%E6%95%B0%E3%82%92%E5%88%B6%E5%BE%A1%E3%81%99%E3%82%8B/</guid><description>#Kotlin
やりたいこと Kotlin_Coroutines を使って並列処理をしたときに、並列数を制御したい デフォルトだと、CPUのコア数？
方法 Semaphore https://stackoverflow.com/questions/58428584/limiting-the-maximum-number-of-coroutines-that-can-run-in-a-scope
1 2 3 4 5 6 7 8 9 10 11 12 13 14 import kotlinx.</description></item><item><title/><link>https://ikorihn.github.io/digitalgarden/note/Kotlin%E3%81%AEFormatter/</link><pubDate>Fri, 07 May 2021 22:05:00 +0900</pubDate><guid>https://ikorihn.github.io/digitalgarden/note/Kotlin%E3%81%AEFormatter/</guid><description>#Kotlin
https://github.com/facebookincubator/ktfmt https://github.com/pinterest/ktlint</description></item><item><title>JUni4のparameterized testをJUnit5に</title><link>https://ikorihn.github.io/digitalgarden/note/JUni4%E3%81%AEparameterized-test%E3%82%92JUnit5%E3%81%AB/</link><pubDate>Fri, 07 May 2021 21:18:00 +0900</pubDate><guid>https://ikorihn.github.io/digitalgarden/note/JUni4%E3%81%AEparameterized-test%E3%82%92JUnit5%E3%81%AB/</guid><description>#Java #Kotlin
テスト対象コード 1 2 3 class Calculator() { fun add(x: Int, y: Int) = x + y } JUnit4 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 import org.</description></item><item><title>Kotlin</title><link>https://ikorihn.github.io/digitalgarden/note/Kotlin/</link><pubDate>Mon, 03 May 2021 15:00:00 +0900</pubDate><guid>https://ikorihn.github.io/digitalgarden/note/Kotlin/</guid><description>概要 JVM言語 JetBrains製 GoogleがAndroidアプリ開発言語として正式採用 特徴 Null Safety</description></item><item><title>ktlint</title><link>https://ikorihn.github.io/digitalgarden/note/ktlint/</link><pubDate>Sun, 27 Dec 2020 21:56:00 +0900</pubDate><guid>https://ikorihn.github.io/digitalgarden/note/ktlint/</guid><description>ktlint Kotlin でlintを設定する
https://github.com/pinterest/ktlint
.editorconfig を置くとそちらの設定が優先される
デフォルト設定に従うことにした
Gradle(kts) プラグインなしで設定する場合
面倒だったのでプラグインを使った
https://github.com/jlleitschuh/ktlint-gradle
build.gradle.kts
1 2 3 plugins { id &amp;#34;org.jlleitschuh.gradle.ktlint&amp;#34; version &amp;#34;&amp;lt;current_version&amp;gt;&amp;#34; } 1 2 3 4 5 $ .</description></item></channel></rss>