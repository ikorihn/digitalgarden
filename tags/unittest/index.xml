<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>unittest on</title><link>https://ikorihn.github.io/digitalgarden/tags/unittest/</link><description>Recent content in unittest on</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Fri, 05 May 2023 20:37:00 +0900</lastBuildDate><atom:link href="https://ikorihn.github.io/digitalgarden/tags/unittest/index.xml" rel="self" type="application/rss+xml"/><item><title>Junitでメソッド名が長すぎてエラーになる</title><link>https://ikorihn.github.io/digitalgarden/note/Junit%E3%81%A7%E3%83%A1%E3%82%BD%E3%83%83%E3%83%89%E5%90%8D%E3%81%8C%E9%95%B7%E3%81%99%E3%81%8E%E3%81%A6%E3%82%A8%E3%83%A9%E3%83%BC%E3%81%AB%E3%81%AA%E3%82%8B/</link><pubDate>Fri, 05 May 2023 20:37:00 +0900</pubDate><guid>https://ikorihn.github.io/digitalgarden/note/Junit%E3%81%A7%E3%83%A1%E3%82%BD%E3%83%83%E3%83%89%E5%90%8D%E3%81%8C%E9%95%B7%E3%81%99%E3%81%8E%E3%81%A6%E3%82%A8%E3%83%A9%E3%83%BC%E3%81%AB%E3%81%AA%E3%82%8B/</guid><description>1 2 3 4 5 6 7 8 9 10 11 12 13 [ERROR] org.jetbrains.kotlin.backend.common.BackendException: Backend Internal error: Exception during file facade code generation File being compiled: [file:///tmp/workspace/very/long/long/TestClass.</description></item><item><title>localstackでS3をmockする</title><link>https://ikorihn.github.io/digitalgarden/note/localstack%E3%81%A7S3%E3%82%92mock%E3%81%99%E3%82%8B/</link><pubDate>Sun, 22 Aug 2021 11:57:00 +0900</pubDate><guid>https://ikorihn.github.io/digitalgarden/note/localstack%E3%81%A7S3%E3%82%92mock%E3%81%99%E3%82%8B/</guid><description>localstack を使って S3 をモックできる
構築 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 version:&amp;#34;3.</description></item><item><title>go_mockery</title><link>https://ikorihn.github.io/digitalgarden/note/go_mockery/</link><pubDate>Wed, 14 Jul 2021 20:41:00 +0900</pubDate><guid>https://ikorihn.github.io/digitalgarden/note/go_mockery/</guid><description>go_testifyを使う でtestify/mockを使ったが、 mockを手で作成するのは骨が折れる
そこでtestifyのmock生成には mockery を使うと便利
インストール dockerやbrewでもインストールできる。go install で入れる場合は以下
1 go install github.com/vektra/mockery/v2@latest gomockとの比較 mockライブラリといえば gomock も有名</description></item><item><title>GASにjestを導入する</title><link>https://ikorihn.github.io/digitalgarden/note/GAS%E3%81%ABjest%E3%82%92%E5%B0%8E%E5%85%A5%E3%81%99%E3%82%8B/</link><pubDate>Sun, 06 Jun 2021 16:23:00 +0900</pubDate><guid>https://ikorihn.github.io/digitalgarden/note/GAS%E3%81%ABjest%E3%82%92%E5%B0%8E%E5%85%A5%E3%81%99%E3%82%8B/</guid><description>clasp + TypeScriptであることが前提
GASをclaspでローカルで書く GASをTSで書けるようにする 1 $ npm install -D @types/jest jest ts-jest jest.</description></item><item><title>buildgradleのjacocoでcoverageを標準出力</title><link>https://ikorihn.github.io/digitalgarden/note/buildgradle%E3%81%AEjacoco%E3%81%A7coverage%E3%82%92%E6%A8%99%E6%BA%96%E5%87%BA%E5%8A%9B/</link><pubDate>Thu, 04 Mar 2021 17:33:00 +0900</pubDate><guid>https://ikorihn.github.io/digitalgarden/note/buildgradle%E3%81%AEjacoco%E3%81%A7coverage%E3%82%92%E6%A8%99%E6%BA%96%E5%87%BA%E5%8A%9B/</guid><description>jacoco_coverageを標準出力 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 tasks.</description></item><item><title>Vue vuex_typescriptでjest</title><link>https://ikorihn.github.io/digitalgarden/note/Vue-vuex_typescript%E3%81%A7jest/</link><pubDate>Wed, 03 Mar 2021 21:20:00 +0900</pubDate><guid>https://ikorihn.github.io/digitalgarden/note/Vue-vuex_typescript%E3%81%A7jest/</guid><description>vuex_typescriptでjest middlewareをテストする場合を考える。
~/middleware/user.ts
1 2 3 4 5 6 7 8 9 10 11 12 import { Context, Middleware } from &amp;#39;@nuxt/types&amp;#39; import { user } from &amp;#39;~/store&amp;#39; const middleware: Middleware = (context: Context) =&amp;gt; { // ページ遷移のたびに実行したい処理を書く if (user.</description></item></channel></rss>