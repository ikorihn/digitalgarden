<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>2023/01/05 on</title><link>https://ikorihn.github.io/digitalgarden/tags/2023/01/05/</link><description>Recent content in 2023/01/05 on</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><atom:link href="https://ikorihn.github.io/digitalgarden/tags/2023/01/05/index.xml" rel="self" type="application/rss+xml"/><item><title>Locust</title><link>https://ikorihn.github.io/digitalgarden/note/Locust/</link><pubDate>Thu, 05 Jan 2023 18:15:00 +0900</pubDate><guid>https://ikorihn.github.io/digitalgarden/note/Locust/</guid><description>Locust - A modern load testing framework Locust はPythonで書かれた負荷試験ツール スクリプトもPythonで書く</description></item><item><title>LocustとBoomerを使ってGoで負荷試験のスクリプトを書く</title><link>https://ikorihn.github.io/digitalgarden/note/Locust%E3%81%A8Boomer%E3%82%92%E4%BD%BF%E3%81%A3%E3%81%A6Go%E3%81%A7%E8%B2%A0%E8%8D%B7%E8%A9%A6%E9%A8%93%E3%81%AE%E3%82%B9%E3%82%AF%E3%83%AA%E3%83%97%E3%83%88%E3%82%92%E6%9B%B8%E3%81%8F/</link><pubDate>Thu, 05 Jan 2023 18:13:00 +0900</pubDate><guid>https://ikorihn.github.io/digitalgarden/note/Locust%E3%81%A8Boomer%E3%82%92%E4%BD%BF%E3%81%A3%E3%81%A6Go%E3%81%A7%E8%B2%A0%E8%8D%B7%E8%A9%A6%E9%A8%93%E3%81%AE%E3%82%B9%E3%82%AF%E3%83%AA%E3%83%97%E3%83%88%E3%82%92%E6%9B%B8%E3%81%8F/</guid><description>DMMプラットフォームを支える負荷試験基盤 - Speaker Deck gRPC + Locust + boomerで負荷試験をしてみた - Qiita Locust はPythonでスクリプトを書く。 Goで負荷</description></item><item><title>OpenAPI yamlを編集するときにSwagger Editorなどを使う</title><link>https://ikorihn.github.io/digitalgarden/note/OpenAPI-yaml%E3%82%92%E7%B7%A8%E9%9B%86%E3%81%99%E3%82%8B%E3%81%A8%E3%81%8D%E3%81%ABSwagger-Editor%E3%81%AA%E3%81%A9%E3%82%92%E4%BD%BF%E3%81%86/</link><pubDate>Thu, 05 Jan 2023 16:49:00 +0900</pubDate><guid>https://ikorihn.github.io/digitalgarden/note/OpenAPI-yaml%E3%82%92%E7%B7%A8%E9%9B%86%E3%81%99%E3%82%8B%E3%81%A8%E3%81%8D%E3%81%ABSwagger-Editor%E3%81%AA%E3%81%A9%E3%82%92%E4%BD%BF%E3%81%86/</guid><description>OpenAPI specを書くツールをいくつか調べた vscodeだと拡張を入れてもいまいち補完が効かない Intellij IDEAの OpenAPI Editor が一番良さそうだがJetBrain</description></item><item><title>Mistel BAROCCO md650l</title><link>https://ikorihn.github.io/digitalgarden/note/Mistel-BAROCCO-md650l/</link><pubDate>Thu, 05 Jan 2023 16:13:00 +0900</pubDate><guid>https://ikorihn.github.io/digitalgarden/note/Mistel-BAROCCO-md650l/</guid><description>2019年3月に買った 左右分離型キーボード ロープロファイルでCherry MX</description></item><item><title>OpenAPIとGoでリクエストのバリデーションをする</title><link>https://ikorihn.github.io/digitalgarden/note/OpenAPI%E3%81%A8Go%E3%81%A7%E3%83%AA%E3%82%AF%E3%82%A8%E3%82%B9%E3%83%88%E3%81%AE%E3%83%90%E3%83%AA%E3%83%87%E3%83%BC%E3%82%B7%E3%83%A7%E3%83%B3%E3%82%92%E3%81%99%E3%82%8B/</link><pubDate>Thu, 05 Jan 2023 15:51:00 +0900</pubDate><guid>https://ikorihn.github.io/digitalgarden/note/OpenAPI%E3%81%A8Go%E3%81%A7%E3%83%AA%E3%82%AF%E3%82%A8%E3%82%B9%E3%83%88%E3%81%AE%E3%83%90%E3%83%AA%E3%83%87%E3%83%BC%E3%82%B7%E3%83%A7%E3%83%B3%E3%82%92%E3%81%99%E3%82%8B/</guid><description>いつもoapi-codegenでopenapi.yamlからGoのコードを生成するようにしている。 oapi-codegenの使い方については</description></item><item><title>Podman DesktopをインストールしてProxyを設定</title><link>https://ikorihn.github.io/digitalgarden/note/Podman-Desktop%E3%82%92%E3%82%A4%E3%83%B3%E3%82%B9%E3%83%88%E3%83%BC%E3%83%AB%E3%81%97%E3%81%A6Proxy%E3%82%92%E8%A8%AD%E5%AE%9A/</link><pubDate>Thu, 05 Jan 2023 12:32:00 +0900</pubDate><guid>https://ikorihn.github.io/digitalgarden/note/Podman-Desktop%E3%82%92%E3%82%A4%E3%83%B3%E3%82%B9%E3%83%88%E3%83%BC%E3%83%AB%E3%81%97%E3%81%A6Proxy%E3%82%92%E8%A8%AD%E5%AE%9A/</guid><description>会社のプロキシの裏でPodman Desktopを実行する | フューチャー技術ブログ インストール https://podman-desktop.io/docs/installation/macos-install 実行してInstallを押すとダイアログが出る</description></item></channel></rss>