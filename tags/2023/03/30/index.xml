<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>2023/03/30 on</title><link>https://ikorihn.github.io/digitalgarden/tags/2023/03/30/</link><description>Recent content in 2023/03/30 on</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><atom:link href="https://ikorihn.github.io/digitalgarden/tags/2023/03/30/index.xml" rel="self" type="application/rss+xml"/><item><title>緯度経度で2地点間の距離を計算する</title><link>https://ikorihn.github.io/digitalgarden/note/%E7%B7%AF%E5%BA%A6%E7%B5%8C%E5%BA%A6%E3%81%A72%E5%9C%B0%E7%82%B9%E9%96%93%E3%81%AE%E8%B7%9D%E9%9B%A2%E3%82%92%E8%A8%88%E7%AE%97%E3%81%99%E3%82%8B/</link><pubDate>Thu, 30 Mar 2023 17:44:00 +0900</pubDate><guid>https://ikorihn.github.io/digitalgarden/note/%E7%B7%AF%E5%BA%A6%E7%B5%8C%E5%BA%A6%E3%81%A72%E5%9C%B0%E7%82%B9%E9%96%93%E3%81%AE%E8%B7%9D%E9%9B%A2%E3%82%92%E8%A8%88%E7%AE%97%E3%81%99%E3%82%8B/</guid><description>いろいろな計算式があり、精度と速度の一長一短 緯度経度を用いた3つの距離計算方法 測地線距離計算式・計算ライブラリの精度評価 - 330k info
Haversine: 完全球体とみなした計算。Great-circle distance(大円距離) Hubeny (Simple): ヒュベニの式の簡易版。カシミール3Dという地図ソフトで使われている Hubeny (Full): ヒュベニの式のオリジナル版 Vincenty: Vincentyによる式。回転楕円体上の測地線 Lambert: Lambertによる式。Geographical distance Andoyer-Lambert: Andoyerが補正を加えたもの。測地線航海算法(Geodesic Sailing) Andoyer-Lambert-Thomas: さらにThomasが補正を加えたもの。 Go言語での実装 有名所 https://pkg.</description></item><item><title>Java BigDecimalにdoubleを渡したとき誤差がでる</title><link>https://ikorihn.github.io/digitalgarden/note/Java-BigDecimal%E3%81%ABdouble%E3%82%92%E6%B8%A1%E3%81%97%E3%81%9F%E3%81%A8%E3%81%8D%E8%AA%A4%E5%B7%AE%E3%81%8C%E3%81%A7%E3%82%8B/</link><pubDate>Thu, 30 Mar 2023 16:23:00 +0900</pubDate><guid>https://ikorihn.github.io/digitalgarden/note/Java-BigDecimal%E3%81%ABdouble%E3%82%92%E6%B8%A1%E3%81%97%E3%81%9F%E3%81%A8%E3%81%8D%E8%AA%A4%E5%B7%AE%E3%81%8C%E3%81%A7%E3%82%8B/</guid><description>Javaで正確な数値計算を行うため BigDecimal を使っていたが、BigDecimalをdoubleで初期化したあと、小数点以下で四捨五入したところ誤差が出てしまった。
BigDecimalで誤差が出てしまった話 - たけぼーの備忘録
BigDecimalを使用して正確な数値計算を行う場合、doubleで初期化することは避けたほうが良いです。doubleは浮動小数点数であり、多くの10進数は正確に表現できません。そのため、doubleで初期化したBigDecimalはすでに誤差を含んでいる可能性があります。
BigDecimalを初期化する際には、String型の値やBigInteger型の値を利用してください。例えば：
1 BigDecimal bd = new BigDecimal(&amp;#34;123.456&amp;#34;); この方法で初期化すると、BigDecimalは正確な10進数値を保持します。
小数点以下で四捨五入を行う場合は、setScaleメソッドを使用し、RoundingModeを指定します。</description></item><item><title>Slack APIで投稿したメッセージのURLを取得する</title><link>https://ikorihn.github.io/digitalgarden/note/Slack-API%E3%81%A7%E6%8A%95%E7%A8%BF%E3%81%97%E3%81%9F%E3%83%A1%E3%83%83%E3%82%BB%E3%83%BC%E3%82%B8%E3%81%AEURL%E3%82%92%E5%8F%96%E5%BE%97%E3%81%99%E3%82%8B/</link><pubDate>Thu, 30 Mar 2023 12:56:00 +0900</pubDate><guid>https://ikorihn.github.io/digitalgarden/note/Slack-API%E3%81%A7%E6%8A%95%E7%A8%BF%E3%81%97%E3%81%9F%E3%83%A1%E3%83%83%E3%82%BB%E3%83%BC%E3%82%B8%E3%81%AEURL%E3%82%92%E5%8F%96%E5%BE%97%E3%81%99%E3%82%8B/</guid><description>slackのAPI chat.postMessage で投稿したメッセージのURLを取得するGAS - シンプルに暮らしたい情シスのブログ
https://api.slack.com/methods/chat.postMessage でpostしたメッセージのURLが知りたかった。 レスポンスにメッセージのURLが入っていればいいのだがそうではないので、 https://api.slack.com/methods/chat.getPermalink で取得する
リクエストに channel ID、メッセージのタイムスタンプが必要となる。 タイムスタンプは、postMessageのレスポンスに含まれる(ts)
1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 // SLACK_TOKENは、プロジェクトの設定 &amp;gt; スクリプトプロパティ で変更可能 const token = PropertiesService.</description></item></channel></rss>