<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>React on</title><link>https://ikorihn.github.io/digitalgarden/tags/React/</link><description>Recent content in React on</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Sat, 28 Aug 2021 14:43:00 +0900</lastBuildDate><atom:link href="https://ikorihn.github.io/digitalgarden/tags/React/index.xml" rel="self" type="application/rss+xml"/><item><title>Udemy Firebase React Hooks(TypeScript)によるWebアプリ開発</title><link>https://ikorihn.github.io/digitalgarden/note/Udemy-Firebase-React-HooksTypeScript%E3%81%AB%E3%82%88%E3%82%8BWeb%E3%82%A2%E3%83%97%E3%83%AA%E9%96%8B%E7%99%BA/</link><pubDate>Sat, 28 Aug 2021 14:43:00 +0900</pubDate><guid>https://ikorihn.github.io/digitalgarden/note/Udemy-Firebase-React-HooksTypeScript%E3%81%AB%E3%82%88%E3%82%8BWeb%E3%82%A2%E3%83%97%E3%83%AA%E9%96%8B%E7%99%BA/</guid><description>Twitterのクローンアプリを作成しながら、 React、React Hooks、Redux、Firebase連携、 TypeScript についてまなぶ
https://www.udemy.com/course/firebase-react-hookstypescriptweb/learn/lecture
2021-08-27 React Hooks
useState ステートフック
useState&amp;lt;T&amp;gt;(value) の形式で、参照可能な値と値を更新するための関数を作る
1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 import React, { useState } from &amp;#39;react&amp;#39;; function Example() { // Declare a new state variable, which we&amp;#39;ll call &amp;#34;count&amp;#34; const [count, setCount] = useState(0); return ( &amp;lt;div&amp;gt; &amp;lt;p&amp;gt;You clicked {count} times&amp;lt;/p&amp;gt; &amp;lt;button onClick={() =&amp;gt; setCount(count + 1)}&amp;gt; Click me &amp;lt;/button&amp;gt; &amp;lt;/div&amp;gt; ); } useEffect 副作用フック 関数コンポーネント内で副作用を実行できるようになる</description></item></channel></rss>