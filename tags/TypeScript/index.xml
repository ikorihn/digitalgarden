<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>TypeScript on</title><link>https://ikorihn.github.io/digitalgarden/tags/TypeScript/</link><description>Recent content in TypeScript on</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Fri, 18 Aug 2023 15:26:00 +0900</lastBuildDate><atom:link href="https://ikorihn.github.io/digitalgarden/tags/TypeScript/index.xml" rel="self" type="application/rss+xml"/><item><title>Deno npmのAWS SDK for JavaScript v3を使う</title><link>https://ikorihn.github.io/digitalgarden/note/Deno-npm%E3%81%AEAWS-SDK-for-JavaScript-v3%E3%82%92%E4%BD%BF%E3%81%86/</link><pubDate>Fri, 18 Aug 2023 15:26:00 +0900</pubDate><guid>https://ikorihn.github.io/digitalgarden/note/Deno-npm%E3%81%AEAWS-SDK-for-JavaScript-v3%E3%82%92%E4%BD%BF%E3%81%86/</guid><description/></item><item><title>TypeScriptのドメインオブジェクトについて</title><link>https://ikorihn.github.io/digitalgarden/note/TypeScript%E3%81%AE%E3%83%89%E3%83%A1%E3%82%A4%E3%83%B3%E3%82%AA%E3%83%96%E3%82%B8%E3%82%A7%E3%82%AF%E3%83%88%E3%81%AB%E3%81%A4%E3%81%84%E3%81%A6/</link><pubDate>Fri, 05 May 2023 20:31:00 +0900</pubDate><guid>https://ikorihn.github.io/digitalgarden/note/TypeScript%E3%81%AE%E3%83%89%E3%83%A1%E3%82%A4%E3%83%B3%E3%82%AA%E3%83%96%E3%82%B8%E3%82%A7%E3%82%AF%E3%83%88%E3%81%AB%E3%81%A4%E3%81%84%E3%81%A6/</guid><description>TypeScript のドメインオブジェクトについて classで定義してgetterのみ公開ってしたけど、これは失敗だった 1 2 3 4 5 6 7 8 9 export class Animal { constructor( private _name: string, private _weight:</description></item><item><title>TypeScript</title><link>https://ikorihn.github.io/digitalgarden/note/TypeScript/</link><pubDate>Fri, 28 Apr 2023 09:27:16 +0900</pubDate><guid>https://ikorihn.github.io/digitalgarden/note/TypeScript/</guid><description>Microsoftが開発した、JavaScriptに型の仕組みを追加したプログラミング言語</description></item><item><title>JSDoc VSCodeで型チェックをする</title><link>https://ikorihn.github.io/digitalgarden/note/JSDoc-VSCode%E3%81%A7%E5%9E%8B%E3%83%81%E3%82%A7%E3%83%83%E3%82%AF%E3%82%92%E3%81%99%E3%82%8B/</link><pubDate>Wed, 05 Apr 2023 15:56:00 +0900</pubDate><guid>https://ikorihn.github.io/digitalgarden/note/JSDoc-VSCode%E3%81%A7%E5%9E%8B%E3%83%81%E3%82%A7%E3%83%83%E3%82%AF%E3%82%92%E3%81%99%E3%82%8B/</guid><description>TypeScriptを使おうとするとビルドの手間がかかるので、小さいスクリプトで手軽に型チェックだけしたいときにJSDocで簡易的に型をつけ</description></item><item><title>vue-property-decoratorを使ったTypeScriptなVueファイルをCompositionAPIに移行する</title><link>https://ikorihn.github.io/digitalgarden/note/vue-property-decorator%E3%82%92%E4%BD%BF%E3%81%A3%E3%81%9FTypeScript%E3%81%AAVue%E3%83%95%E3%82%A1%E3%82%A4%E3%83%AB%E3%82%92CompositionAPI%E3%81%AB%E7%A7%BB%E8%A1%8C%E3%81%99%E3%82%8B/</link><pubDate>Fri, 13 May 2022 12:26:00 +0900</pubDate><guid>https://ikorihn.github.io/digitalgarden/note/vue-property-decorator%E3%82%92%E4%BD%BF%E3%81%A3%E3%81%9FTypeScript%E3%81%AAVue%E3%83%95%E3%82%A1%E3%82%A4%E3%83%AB%E3%82%92CompositionAPI%E3%81%AB%E7%A7%BB%E8%A1%8C%E3%81%99%E3%82%8B/</guid><description>class componentは非推奨になったわけではなくて今後も使えるそうですが、 TypeScriptで書く場合にVolarの恩恵を最大限受けるため</description></item><item><title>vue-tsc</title><link>https://ikorihn.github.io/digitalgarden/note/vue-tsc/</link><pubDate>Tue, 26 Apr 2022 23:43:00 +0900</pubDate><guid>https://ikorihn.github.io/digitalgarden/note/vue-tsc/</guid><description>ViteでVue3のTypescript環境を構築する | miyauci.me vue-tsc を使った TypeScript Strict Mode の漸進的導入 - VisasQ Dev Blog volar/packages/vue-tsc at master · johnsoncodehk/volar · GitHub eslintだけではTypeSc</description></item><item><title>Nuxt.jsでRepositoryFactoryパターンを実装する</title><link>https://ikorihn.github.io/digitalgarden/note/Nuxt.js%E3%81%A7RepositoryFactory%E3%83%91%E3%82%BF%E3%83%BC%E3%83%B3%E3%82%92%E5%AE%9F%E8%A3%85%E3%81%99%E3%82%8B/</link><pubDate>Thu, 10 Feb 2022 13:01:00 +0900</pubDate><guid>https://ikorihn.github.io/digitalgarden/note/Nuxt.js%E3%81%A7RepositoryFactory%E3%83%91%E3%82%BF%E3%83%BC%E3%83%B3%E3%82%92%E5%AE%9F%E8%A3%85%E3%81%99%E3%82%8B/</guid><description>【フォースタ テックブログ】RepositoryFactoryパターンをVueのAPIリクエストに導入する - for Startups Tech blog Nuxt.js × typescriptで</description></item><item><title>Svelte_TypeScriptでChrome拡張つくる</title><link>https://ikorihn.github.io/digitalgarden/note/Svelte_TypeScript%E3%81%A7Chrome%E6%8B%A1%E5%BC%B5%E3%81%A4%E3%81%8F%E3%82%8B/</link><pubDate>Tue, 04 Jan 2022 23:37:00 +0900</pubDate><guid>https://ikorihn.github.io/digitalgarden/note/Svelte_TypeScript%E3%81%A7Chrome%E6%8B%A1%E5%BC%B5%E3%81%A4%E3%81%8F%E3%82%8B/</guid><description>Svelte、TailwindCSS、Jest、およびRollupで構築されたChrome拡張ボイラープレート。 - wenyanet Svelte + TypeScript</description></item><item><title>Udemy Firebase React Hooks(TypeScript)によるWebアプリ開発</title><link>https://ikorihn.github.io/digitalgarden/note/Udemy-Firebase-React-HooksTypeScript%E3%81%AB%E3%82%88%E3%82%8BWeb%E3%82%A2%E3%83%97%E3%83%AA%E9%96%8B%E7%99%BA/</link><pubDate>Sat, 28 Aug 2021 14:43:00 +0900</pubDate><guid>https://ikorihn.github.io/digitalgarden/note/Udemy-Firebase-React-HooksTypeScript%E3%81%AB%E3%82%88%E3%82%8BWeb%E3%82%A2%E3%83%97%E3%83%AA%E9%96%8B%E7%99%BA/</guid><description>Twitterのクローンアプリを作成しながら、 React、React Hooks、Redux、Firebase連携、 TypeScript についてまなぶ https://www.udemy.com/course/firebase-react-hookstypescriptweb/learn/lecture 2021-08-27 React Hooks useState</description></item><item><title>GASをclaspで作ってV8ランタイムに対応させる</title><link>https://ikorihn.github.io/digitalgarden/note/GAS%E3%82%92clasp%E3%81%A7%E4%BD%9C%E3%81%A3%E3%81%A6V8%E3%83%A9%E3%83%B3%E3%82%BF%E3%82%A4%E3%83%A0%E3%81%AB%E5%AF%BE%E5%BF%9C%E3%81%95%E3%81%9B%E3%82%8B/</link><pubDate>Sun, 06 Jun 2021 16:29:00 +0900</pubDate><guid>https://ikorihn.github.io/digitalgarden/note/GAS%E3%82%92clasp%E3%81%A7%E4%BD%9C%E3%81%A3%E3%81%A6V8%E3%83%A9%E3%83%B3%E3%82%BF%E3%82%A4%E3%83%A0%E3%81%AB%E5%AF%BE%E5%BF%9C%E3%81%95%E3%81%9B%E3%82%8B/</guid><description>https://qiita.com/r57ty7/items/77ea0a3dc5c2200b6f1d GAS でV8ランタイムが利用できるようになった。 claspで管理しているGASのプロジェクトをV8に対応させたい。 tsconfig.json 1 2 3 4 5 6 { // ... &amp;#34;compilerOptions&amp;#34;: { &amp;#34;target&amp;#34;: &amp;#34;ES2019&amp;#34;</description></item><item><title>GASにjestを導入する</title><link>https://ikorihn.github.io/digitalgarden/note/GAS%E3%81%ABjest%E3%82%92%E5%B0%8E%E5%85%A5%E3%81%99%E3%82%8B/</link><pubDate>Sun, 06 Jun 2021 16:23:00 +0900</pubDate><guid>https://ikorihn.github.io/digitalgarden/note/GAS%E3%81%ABjest%E3%82%92%E5%B0%8E%E5%85%A5%E3%81%99%E3%82%8B/</guid><description>clasp + TypeScriptであることが前提 GASをclaspでローカルで書く GASをTSで書けるようにする 1 $ npm install -D @types/jest jest ts-jest jest.config.js 1 2 3 4 5 module.exports = { preset:</description></item><item><title>GASをTSで書けるようにする</title><link>https://ikorihn.github.io/digitalgarden/note/GAS%E3%82%92TS%E3%81%A7%E6%9B%B8%E3%81%91%E3%82%8B%E3%82%88%E3%81%86%E3%81%AB%E3%81%99%E3%82%8B/</link><pubDate>Sun, 06 Jun 2021 15:26:00 +0900</pubDate><guid>https://ikorihn.github.io/digitalgarden/note/GAS%E3%82%92TS%E3%81%A7%E6%9B%B8%E3%81%91%E3%82%8B%E3%82%88%E3%81%86%E3%81%AB%E3%81%99%E3%82%8B/</guid><description>clasp を使うと、 GAS をTypeScriptで書くことができる。 clasp 1.5.0 でサポートされるようになった。 https://github.com/google/clasp/blob/master/docs/typescript.md ローカルでtsファイルで書いたGASをpushす</description></item><item><title>Vue.jsでGoogleMap上にアイコンを表示する</title><link>https://ikorihn.github.io/digitalgarden/note/Vue.js%E3%81%A7GoogleMap%E4%B8%8A%E3%81%AB%E3%82%A2%E3%82%A4%E3%82%B3%E3%83%B3%E3%82%92%E8%A1%A8%E7%A4%BA%E3%81%99%E3%82%8B/</link><pubDate>Fri, 14 May 2021 17:32:00 +0900</pubDate><guid>https://ikorihn.github.io/digitalgarden/note/Vue.js%E3%81%A7GoogleMap%E4%B8%8A%E3%81%AB%E3%82%A2%E3%82%A4%E3%82%B3%E3%83%B3%E3%82%92%E8%A1%A8%E7%A4%BA%E3%81%99%E3%82%8B/</guid><description>Vue TypeScriptでGoogleMapを使う でGoogle Mapを使えるようにした。 そこにアイコンを描画したい。 前提 GoogleMapに</description></item><item><title>GatsbyjsのTypeScript化</title><link>https://ikorihn.github.io/digitalgarden/note/Gatsbyjs%E3%81%AETypeScript%E5%8C%96/</link><pubDate>Sun, 02 May 2021 21:53:00 +0900</pubDate><guid>https://ikorihn.github.io/digitalgarden/note/Gatsbyjs%E3%81%AETypeScript%E5%8C%96/</guid><description>Gatsby.js を TypeScript 化する tsconfig.jsonを追加 tsconfig.json GraphQL Schema, リクエストの型生成 Gatsby はリソースに対して GraphQL でリクエストを送りデータを取得する GraphQL リクエストのレ</description></item><item><title>svelte_typescript_svelte-material-ui</title><link>https://ikorihn.github.io/digitalgarden/note/svelte_typescript_svelte-material-ui/</link><pubDate>Sun, 07 Mar 2021 16:28:00 +0900</pubDate><guid>https://ikorihn.github.io/digitalgarden/note/svelte_typescript_svelte-material-ui/</guid><description>Svelte svelte_typescript_svelte-material-ui svelte-material-ui を導入する 参考 https://github.com/hperrin/svelte-material-ui https://github.com/hperrin/smui-example-rollup/ インストール 1 yarn add -D svelte-material-ui rollupでPostCSSを使うためのプラグインを導入 PostCSS 8 を使用するよう警告が出たため別でイ</description></item><item><title>Vue vuex_typescriptでjest</title><link>https://ikorihn.github.io/digitalgarden/note/Vue-vuex_typescript%E3%81%A7jest/</link><pubDate>Wed, 03 Mar 2021 21:20:00 +0900</pubDate><guid>https://ikorihn.github.io/digitalgarden/note/Vue-vuex_typescript%E3%81%A7jest/</guid><description>vuex_typescriptでjest middlewareをテストする場合を考える。 ~/middleware/user.ts 1 2 3 4 5 6 7 8 9 10 11 12 import { Context, Middleware } from &amp;#39;@nuxt/types&amp;#39; import { user } from &amp;#39;~/store&amp;#39; const</description></item><item><title>vue-awesome-swiperを使ってカルーセル風UIを作ってみた</title><link>https://ikorihn.github.io/digitalgarden/note/vue-awesome-swiper%E3%82%92%E4%BD%BF%E3%81%A3%E3%81%A6%E3%82%AB%E3%83%AB%E3%83%BC%E3%82%BB%E3%83%AB%E9%A2%A8UI%E3%82%92%E4%BD%9C%E3%81%A3%E3%81%A6%E3%81%BF%E3%81%9F/</link><pubDate>Sun, 31 Jan 2021 00:18:00 +0900</pubDate><guid>https://ikorihn.github.io/digitalgarden/note/vue-awesome-swiper%E3%82%92%E4%BD%BF%E3%81%A3%E3%81%A6%E3%82%AB%E3%83%AB%E3%83%BC%E3%82%BB%E3%83%AB%E9%A2%A8UI%E3%82%92%E4%BD%9C%E3%81%A3%E3%81%A6%E3%81%BF%E3%81%9F/</guid><description>vue-awesome-swiperを使ってカルーセル風UIを作ってみた https://github.surmon.me/vue-awesome-swiper/ https://swiperjs.com/swiper-api https://www.kabanoki.net/4783/ https://mykii.blog/nuxt-vue-awesome-swiper/ https://webrandum.net/js-library-swiper/ 1 yarn add swiper vue-awesome-swiper globalに定義する 1 2 3 4 5 6 7 8 9 10 import Vue from</description></item><item><title>Vue TypeScriptでGoogleMapを使う</title><link>https://ikorihn.github.io/digitalgarden/note/Vue-TypeScript%E3%81%A7GoogleMap%E3%82%92%E4%BD%BF%E3%81%86/</link><pubDate>Sun, 31 Jan 2021 00:11:00 +0900</pubDate><guid>https://ikorihn.github.io/digitalgarden/note/Vue-TypeScript%E3%81%A7GoogleMap%E3%82%92%E4%BD%BF%E3%81%86/</guid><description>Vue.js+TypeScriptでGoogleMapを使う Vue.js公式のcookbookにexampleが乗ってる https://jp.vuejs.org/v2/cookbook/practical-use-of-scoped-slots.html slotを使ってG</description></item><item><title>ts-nuxt-storybookの構築</title><link>https://ikorihn.github.io/digitalgarden/note/ts-nuxt-storybook%E3%81%AE%E6%A7%8B%E7%AF%89/</link><pubDate>Thu, 07 Jan 2021 12:57:00 +0900</pubDate><guid>https://ikorihn.github.io/digitalgarden/note/ts-nuxt-storybook%E3%81%AE%E6%A7%8B%E7%AF%89/</guid><description>ts nuxt storybookの構築 Nuxt.js 2.14.6 TypeScript 4.0.5 Storybook 6.1.10 @nuxtjs/tailwindcss: 3.1.0 TypeScriptで書かれたVueコンポーネントを使う 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20</description></item><item><title>typescript-openapi</title><link>https://ikorihn.github.io/digitalgarden/note/typescript-openapi/</link><pubDate>Tue, 29 Dec 2020 16:35:00 +0900</pubDate><guid>https://ikorihn.github.io/digitalgarden/note/typescript-openapi/</guid><description>typescript openapi https://github.com/OpenAPITools/openapi-generator/blob/master/docs/generators/typescript-axios.md
package.json
1 2 3 4 5 { &amp;#34;scripts&amp;#34;: { &amp;#34;openapi-generate&amp;#34;: &amp;#34;rm -f api_client/*.ts &amp;amp;&amp;amp; TS_POST_PROCESS_FILE=&amp;#39;yarn prettier --write&amp;#39; openapi-generator-cli generate -i http://localhost:8080/api/v3/api-docs -g typescript-axios -o api_client --additional-properties=disallowAdditionalPropertiesIfNotPresent=false,modelPropertyNaming=camelCase,supportsES6=true,useSingleRequestParameter=true --enable-post-process-file&amp;#34; } }</description></item><item><title>typescript-TypeGuard</title><link>https://ikorihn.github.io/digitalgarden/note/typescript-TypeGuard/</link><pubDate>Tue, 29 Dec 2020 16:13:00 +0900</pubDate><guid>https://ikorihn.github.io/digitalgarden/note/typescript-TypeGuard/</guid><description> TypeScript
typescript TypeGuard 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 class Animal { } class Duck extends Animal { } class Tiger extends Animal { } const isDuck = (animal: Animal): animal is Duck =&amp;gt; animal.type === &amp;#39;duck&amp;#39; &amp;amp;&amp;amp; animal.call !== undefined const animal = someFunc() if (isDuck(animal)) { animal.call() }</description></item></channel></rss>