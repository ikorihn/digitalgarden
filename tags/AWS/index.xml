<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>AWS on</title><link>https://ikorihn.github.io/digitalgarden/tags/AWS/</link><description>Recent content in AWS on</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Fri, 05 May 2023 20:37:00 +0900</lastBuildDate><atom:link href="https://ikorihn.github.io/digitalgarden/tags/AWS/index.xml" rel="self" type="application/rss+xml"/><item><title>AWS Lambda</title><link>https://ikorihn.github.io/digitalgarden/note/AWS-Lambda/</link><pubDate>Fri, 05 May 2023 20:37:00 +0900</pubDate><guid>https://ikorihn.github.io/digitalgarden/note/AWS-Lambda/</guid><description/></item><item><title>AWS</title><link>https://ikorihn.github.io/digitalgarden/note/AWS/</link><pubDate>Fri, 05 May 2023 20:31:00 +0900</pubDate><guid>https://ikorihn.github.io/digitalgarden/note/AWS/</guid><description/></item><item><title>aws cli filterとqueryのメモ</title><link>https://ikorihn.github.io/digitalgarden/note/aws-cli-filter%E3%81%A8query%E3%81%AE%E3%83%A1%E3%83%A2/</link><pubDate>Fri, 05 May 2023 20:30:00 +0900</pubDate><guid>https://ikorihn.github.io/digitalgarden/note/aws-cli-filter%E3%81%A8query%E3%81%AE%E3%83%A1%E3%83%A2/</guid><description>autoscaling describe-auto-scaling-groups https://docs.aws.amazon.com/ja_jp/autoscaling/ec2/userguide/ec2-auto-scaling-tagging.html#use-tag-filters-aws-cli https://docs.aws.amazon.com/cli/latest/reference/autoscaling/describe-auto-scaling-groups.html こちらのような形式でfilterできる。 ワイルドカードが使えないので注意(1敗) 1 --filtersName=tag:`environment`,Values=`production` 1 2 3 4 5 6 7 8 9 10 11 12 13 # ワイルドカード指定は</description></item><item><title>AWS LambdaでGoのWebサーバーを動作させる</title><link>https://ikorihn.github.io/digitalgarden/note/AWS-Lambda%E3%81%A7Go%E3%81%AEWeb%E3%82%B5%E3%83%BC%E3%83%90%E3%83%BC%E3%82%92%E5%8B%95%E4%BD%9C%E3%81%95%E3%81%9B%E3%82%8B/</link><pubDate>Fri, 05 May 2023 20:30:00 +0900</pubDate><guid>https://ikorihn.github.io/digitalgarden/note/AWS-Lambda%E3%81%A7Go%E3%81%AEWeb%E3%82%B5%E3%83%BC%E3%83%90%E3%83%BC%E3%82%92%E5%8B%95%E4%BD%9C%E3%81%95%E3%81%9B%E3%82%8B/</guid><description/></item><item><title>AmazonSNS</title><link>https://ikorihn.github.io/digitalgarden/note/AmazonSNS/</link><pubDate>Fri, 05 May 2023 20:26:00 +0900</pubDate><guid>https://ikorihn.github.io/digitalgarden/note/AmazonSNS/</guid><description/></item><item><title>S3</title><link>https://ikorihn.github.io/digitalgarden/note/S3/</link><pubDate>Fri, 05 May 2023 20:26:00 +0900</pubDate><guid>https://ikorihn.github.io/digitalgarden/note/S3/</guid><description/></item><item><title>EC2のuserdata の内容を確認する</title><link>https://ikorihn.github.io/digitalgarden/note/EC2%E3%81%AEuserdata-%E3%81%AE%E5%86%85%E5%AE%B9%E3%82%92%E7%A2%BA%E8%AA%8D%E3%81%99%E3%82%8B/</link><pubDate>Fri, 05 May 2023 20:25:00 +0900</pubDate><guid>https://ikorihn.github.io/digitalgarden/note/EC2%E3%81%AEuserdata-%E3%81%AE%E5%86%85%E5%AE%B9%E3%82%92%E7%A2%BA%E8%AA%8D%E3%81%99%E3%82%8B/</guid><description>1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 $ cd /var/lib/cloud/instances/i-&amp;lt;インスタンスID&amp;gt;/ $ ls -al total 68 drwxr-xr-x</description></item><item><title>localstack</title><link>https://ikorihn.github.io/digitalgarden/note/localstack/</link><pubDate>Fri, 05 May 2023 20:19:00 +0900</pubDate><guid>https://ikorihn.github.io/digitalgarden/note/localstack/</guid><description>https://github.com/localstack/localstack https://localstack.cloud/ localstack は、クラウドアプリケーションを開発するためのmockを提供するツール。 ローカルにAWSと同様の機能とAPIを提供する環境を構築する。 最</description></item><item><title>SAM</title><link>https://ikorihn.github.io/digitalgarden/note/SAM/</link><pubDate>Thu, 04 May 2023 17:58:00 +0900</pubDate><guid>https://ikorihn.github.io/digitalgarden/note/SAM/</guid><description>Serverless Application Model Lambdaにデプロイするのを簡単にするツール</description></item><item><title>Elastic Container Service</title><link>https://ikorihn.github.io/digitalgarden/note/Elastic-Container-Service/</link><pubDate>Thu, 04 May 2023 17:46:00 +0900</pubDate><guid>https://ikorihn.github.io/digitalgarden/note/Elastic-Container-Service/</guid><description>https://aws.amazon.com/jp/ecs/ フルマネージドコンテナオーケストレーションサービスであり、コンテナ化されたアプリケーションを簡単にデプロイ、管理、およびスケーリングできま</description></item><item><title>ECSのtomcatを手で差し替える</title><link>https://ikorihn.github.io/digitalgarden/note/ECS%E3%81%AEtomcat%E3%82%92%E6%89%8B%E3%81%A7%E5%B7%AE%E3%81%97%E6%9B%BF%E3%81%88%E3%82%8B/</link><pubDate>Thu, 04 May 2023 17:45:00 +0900</pubDate><guid>https://ikorihn.github.io/digitalgarden/note/ECS%E3%81%AEtomcat%E3%82%92%E6%89%8B%E3%81%A7%E5%B7%AE%E3%81%97%E6%9B%BF%E3%81%88%E3%82%8B/</guid><description>やりたいこと Elastic Container Service に対して、検証環境のリリースの際に通常通りtomcatコンテナビルド〜Rolling updateすると5分くらいはかかって</description></item><item><title>CloudFront</title><link>https://ikorihn.github.io/digitalgarden/note/CloudFront/</link><pubDate>Mon, 01 May 2023 00:01:00 +0900</pubDate><guid>https://ikorihn.github.io/digitalgarden/note/CloudFront/</guid><description/></item><item><title>LamdbaEdge</title><link>https://ikorihn.github.io/digitalgarden/note/LamdbaEdge/</link><pubDate>Mon, 01 May 2023 00:01:00 +0900</pubDate><guid>https://ikorihn.github.io/digitalgarden/note/LamdbaEdge/</guid><description/></item><item><title>Step Functions</title><link>https://ikorihn.github.io/digitalgarden/note/Step-Functions/</link><pubDate>Mon, 01 May 2023 00:00:00 +0900</pubDate><guid>https://ikorihn.github.io/digitalgarden/note/Step-Functions/</guid><description/></item><item><title>aws-sdk-go-v2 Athenaにクエリを投げて結果をページングで受け取る</title><link>https://ikorihn.github.io/digitalgarden/note/aws-sdk-go-v2-Athena%E3%81%AB%E3%82%AF%E3%82%A8%E3%83%AA%E3%82%92%E6%8A%95%E3%81%92%E3%81%A6%E7%B5%90%E6%9E%9C%E3%82%92%E3%83%9A%E3%83%BC%E3%82%B8%E3%83%B3%E3%82%B0%E3%81%A7%E5%8F%97%E3%81%91%E5%8F%96%E3%82%8B/</link><pubDate>Wed, 19 Apr 2023 23:27:00 +0900</pubDate><guid>https://ikorihn.github.io/digitalgarden/note/aws-sdk-go-v2-Athena%E3%81%AB%E3%82%AF%E3%82%A8%E3%83%AA%E3%82%92%E6%8A%95%E3%81%92%E3%81%A6%E7%B5%90%E6%9E%9C%E3%82%92%E3%83%9A%E3%83%BC%E3%82%B8%E3%83%B3%E3%82%B0%E3%81%A7%E5%8F%97%E3%81%91%E5%8F%96%E3%82%8B/</guid><description>1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70</description></item><item><title>Amazon EFS</title><link>https://ikorihn.github.io/digitalgarden/note/Amazon-EFS/</link><pubDate>Thu, 09 Feb 2023 11:15:00 +0900</pubDate><guid>https://ikorihn.github.io/digitalgarden/note/Amazon-EFS/</guid><description>Amazon EFS パフォーマンス - Amazon Elastic File System スループットモードについて NEW – Amazon EFS Elastic Throughput の発表 | Amazon Web Services ブログ 新しいスループットモードで、アプリケーションに必要なだ</description></item><item><title>aws cliでIAM情報を取得する</title><link>https://ikorihn.github.io/digitalgarden/note/aws-cli%E3%81%A7IAM%E6%83%85%E5%A0%B1%E3%82%92%E5%8F%96%E5%BE%97%E3%81%99%E3%82%8B/</link><pubDate>Mon, 26 Dec 2022 19:11:00 +0900</pubDate><guid>https://ikorihn.github.io/digitalgarden/note/aws-cli%E3%81%A7IAM%E6%83%85%E5%A0%B1%E3%82%92%E5%8F%96%E5%BE%97%E3%81%99%E3%82%8B/</guid><description>#AWS 【AWS CLI】IAM関連の情報取得編 - サーバーワークスエンジニアブログ 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 function describe_role() { local</description></item><item><title>SecretsManagerをCLIで更新する</title><link>https://ikorihn.github.io/digitalgarden/note/SecretsManager%E3%82%92CLI%E3%81%A7%E6%9B%B4%E6%96%B0%E3%81%99%E3%82%8B/</link><pubDate>Mon, 12 Sep 2022 19:15:00 +0900</pubDate><guid>https://ikorihn.github.io/digitalgarden/note/SecretsManager%E3%82%92CLI%E3%81%A7%E6%9B%B4%E6%96%B0%E3%81%99%E3%82%8B/</guid><description>#AWS aws cli(v1) secretsmanager コマンドで取得、更新したい https://docs.aws.amazon.com/cli/latest/reference/secretsmanager/index.html 必要権限 GetSecretValue PutSecretValue コマンド 取得 1 2 3 4 5 6 7 8 9 10 11 $ aws --region ap-northeast-1 secretsmanager get-secret-value --secret-id my_secret { &amp;#34;ARN&amp;#34;: &amp;#34;arn:aws:secretsmanager:ap-northeast-1:xxxxxxxxx:secret:my_secret_xxxxxxx&amp;#34;, &amp;#34;Name&amp;#34;: &amp;#34;my_secret&amp;#34;, &amp;#34;VersionId&amp;#34;: &amp;#34;&amp;lt;UUID&amp;gt;&amp;#34;, &amp;#34;SecretString&amp;#34;: &amp;#34;{\n \&amp;#34;user\&amp;#34;: \&amp;#34;foo\&amp;#34;,\n \&amp;#34;password\&amp;#34;: \&amp;#34;bar\&amp;#34; }&amp;#34;, &amp;#34;VersionStages&amp;#34;: [ &amp;#34;AWSCURRENT&amp;#34; ], &amp;#34;CreatedDate&amp;#34;: 16620000000 }</description></item><item><title>aws-sdk-go-v2 でのエラーハンドリング</title><link>https://ikorihn.github.io/digitalgarden/note/aws-sdk-go-v2-%E3%81%A7%E3%81%AE%E3%82%A8%E3%83%A9%E3%83%BC%E3%83%8F%E3%83%B3%E3%83%89%E3%83%AA%E3%83%B3%E3%82%B0/</link><pubDate>Wed, 01 Dec 2021 10:54:00 +0900</pubDate><guid>https://ikorihn.github.io/digitalgarden/note/aws-sdk-go-v2-%E3%81%A7%E3%81%AE%E3%82%A8%E3%83%A9%E3%83%BC%E3%83%8F%E3%83%B3%E3%83%89%E3%83%AA%E3%83%B3%E3%82%B0/</guid><description>#Go #AWS aws-sdk-go-v2 でのエラーハンドリング https://aws.github.io/aws-sdk-go-v2/docs/migrating/#errors-types v1ではawserrパッケージがあったが、v2では github.com/aws/aws-sdk-go-v2/service/&amp;lt;service&amp;gt;/types に該当のエラーの型があるのでcastする 1 2 3 4 5 6 7 8 9</description></item><item><title>Lambda関数に同時実行数を担保する</title><link>https://ikorihn.github.io/digitalgarden/note/Lambda%E9%96%A2%E6%95%B0%E3%81%AB%E5%90%8C%E6%99%82%E5%AE%9F%E8%A1%8C%E6%95%B0%E3%82%92%E6%8B%85%E4%BF%9D%E3%81%99%E3%82%8B/</link><pubDate>Sun, 24 Oct 2021 22:34:58 +0900</pubDate><guid>https://ikorihn.github.io/digitalgarden/note/Lambda%E9%96%A2%E6%95%B0%E3%81%AB%E5%90%8C%E6%99%82%E5%AE%9F%E8%A1%8C%E6%95%B0%E3%82%92%E6%8B%85%E4%BF%9D%E3%81%99%E3%82%8B/</guid><description>Lambda 関数に冪等にする Lambda 関数の同時実行数を1にしても冪等性の担保から逃れることは出来ない | by noid11 | Medium ・冪等性はお客様のコードで確保する必要がある AWS</description></item><item><title>SQSとLambdaで同時実行数を制御する</title><link>https://ikorihn.github.io/digitalgarden/note/SQS%E3%81%A8Lambda%E3%81%A7%E5%90%8C%E6%99%82%E5%AE%9F%E8%A1%8C%E6%95%B0%E3%82%92%E5%88%B6%E5%BE%A1%E3%81%99%E3%82%8B/</link><pubDate>Sun, 24 Oct 2021 22:27:56 +0900</pubDate><guid>https://ikorihn.github.io/digitalgarden/note/SQS%E3%81%A8Lambda%E3%81%A7%E5%90%8C%E6%99%82%E5%AE%9F%E8%A1%8C%E6%95%B0%E3%82%92%E5%88%B6%E5%BE%A1%E3%81%99%E3%82%8B/</guid><description>AWS Lambda の同時実行数の上限は、同一アカウントの同一Region内で1000件まで。 同時実行数に達すると、それ以上の呼び出しはスロットリングされ実</description></item><item><title>localstackでS3をmockする</title><link>https://ikorihn.github.io/digitalgarden/note/localstack%E3%81%A7S3%E3%82%92mock%E3%81%99%E3%82%8B/</link><pubDate>Sun, 22 Aug 2021 11:57:00 +0900</pubDate><guid>https://ikorihn.github.io/digitalgarden/note/localstack%E3%81%A7S3%E3%82%92mock%E3%81%99%E3%82%8B/</guid><description>localstack を使って S3 をモックできる 構築 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 version:&amp;#34;3.8&amp;#34;services:localstack:container_name:&amp;#34;${LOCALSTACK_DOCKER_NAME-localstack_main}&amp;#34;image:localstack/localstacknetwork_mode:bridgeports:- &amp;#34;127.0.0.1:53:53&amp;#34;- &amp;#34;127.0.0.1:53:53/udp&amp;#34;- &amp;#34;127.0.0.1:443:443&amp;#34;- &amp;#34;127.0.0.1:4566:4566&amp;#34;- &amp;#34;127.0.0.1:4571:4571&amp;#34;environment:- SERVICES=s3- DEBUG=${DEBUG- }- DATA_DIR=/tmp/localstack/data- DOCKER_HOST=unix:///var/run/docker.sock- DEFAULT_REGION=ap-northeast-1volumes:- &amp;#34;./work:/tmp/localstack&amp;#34;- &amp;#34;/var/run/docker.sock:/var/run/docker.sock&amp;#34; 1 docker-compose up -d localstack用のプロフ</description></item><item><title>zshでhomebrewで入れたaws-cli-v2の補完を効かせる</title><link>https://ikorihn.github.io/digitalgarden/note/zsh%E3%81%A7homebrew%E3%81%A7%E5%85%A5%E3%82%8C%E3%81%9Faws-cli-v2%E3%81%AE%E8%A3%9C%E5%AE%8C%E3%82%92%E5%8A%B9%E3%81%8B%E3%81%9B%E3%82%8B/</link><pubDate>Sun, 22 Aug 2021 11:55:00 +0900</pubDate><guid>https://ikorihn.github.io/digitalgarden/note/zsh%E3%81%A7homebrew%E3%81%A7%E5%85%A5%E3%82%8C%E3%81%9Faws-cli-v2%E3%81%AE%E8%A3%9C%E5%AE%8C%E3%82%92%E5%8A%B9%E3%81%8B%E3%81%9B%E3%82%8B/</guid><description>https://docs.aws.amazon.com/ja_jp/cli/latest/userguide/cli-configure-completion.html 1 2 3 4 5 # AWS CLI v2 autoload bashcompinit &amp;amp;&amp;amp; bashcompinit autoload -Uz compinit &amp;amp;&amp;amp; compinit compinit complete -C aws_completer aws</description></item><item><title>localstackとsamを連携</title><link>https://ikorihn.github.io/digitalgarden/note/localstack%E3%81%A8sam%E3%82%92%E9%80%A3%E6%90%BA/</link><pubDate>Thu, 19 Aug 2021 23:18:00 +0900</pubDate><guid>https://ikorihn.github.io/digitalgarden/note/localstack%E3%81%A8sam%E3%82%92%E9%80%A3%E6%90%BA/</guid><description>#AWS #sam 事象 SAM コマンドで実行したLambdaから、 localstack で立てたS3にアクセスできない TL;DR macの場合、Lambdaから接続するhostを localstack ではなく host.docker.internal</description></item><item><title>aws-sdk-go-v2を使う</title><link>https://ikorihn.github.io/digitalgarden/note/aws-sdk-go-v2%E3%82%92%E4%BD%BF%E3%81%86/</link><pubDate>Wed, 18 Aug 2021 12:13:00 +0900</pubDate><guid>https://ikorihn.github.io/digitalgarden/note/aws-sdk-go-v2%E3%82%92%E4%BD%BF%E3%81%86/</guid><description>AWS を Go で操作するライブラリ aws-sdk-go-v2が2021-01-19にリリースされた。 AWS SDK for Go のバージョン 2 が一般公開されました https://aws.amazon.com/jp/sdk-for-go/ AWS SDK</description></item><item><title>AmazonSQS</title><link>https://ikorihn.github.io/digitalgarden/note/AmazonSQS/</link><pubDate>Mon, 28 Jun 2021 10:26:00 +0900</pubDate><guid>https://ikorihn.github.io/digitalgarden/note/AmazonSQS/</guid><description>#AWS Amazon Simple Queue Service (Amazon SQS) https://docs.aws.amazon.com/ja_jp/AWSSimpleQueueService/latest/SQSDeveloperGuide/welcome.html フルマネージドのキューサービス キューを使った非同期処理の実現 標準キューとFIFOキュー AWS — Difference between SQS Standard and FIFO Queues | by Ashish Patel | Awesome Cloud | Medium FIFO</description></item><item><title>AmasonSNSで配信</title><link>https://ikorihn.github.io/digitalgarden/note/AmasonSNS%E3%81%A7%E9%85%8D%E4%BF%A1/</link><pubDate>Thu, 24 Jun 2021 18:33:00 +0900</pubDate><guid>https://ikorihn.github.io/digitalgarden/note/AmasonSNS%E3%81%A7%E9%85%8D%E4%BF%A1/</guid><description>#AWS AWS Lambdaを使ったAmazon SNSへのメッセージ送受信 Amazon Simple Notification Service(SNS)へメッセージを送信するLambdaとAmazon</description></item><item><title>Awsのサービスを使ってバッチ処理する</title><link>https://ikorihn.github.io/digitalgarden/note/Aws%E3%81%AE%E3%82%B5%E3%83%BC%E3%83%93%E3%82%B9%E3%82%92%E4%BD%BF%E3%81%A3%E3%81%A6%E3%83%90%E3%83%83%E3%83%81%E5%87%A6%E7%90%86%E3%81%99%E3%82%8B/</link><pubDate>Thu, 17 Jun 2021 20:43:00 +0900</pubDate><guid>https://ikorihn.github.io/digitalgarden/note/Aws%E3%81%AE%E3%82%B5%E3%83%BC%E3%83%93%E3%82%B9%E3%82%92%E4%BD%BF%E3%81%A3%E3%81%A6%E3%83%90%E3%83%83%E3%83%81%E5%87%A6%E7%90%86%E3%81%99%E3%82%8B/</guid><description>#AWS AmazonSQS, AWS Lambda, AmazonSNS を使ってバッチ処理によるPUSH送信を実現する AWSでバッチ処理を実装する際の選択肢とサービス比較 [レポート] SNSとSQSとLa</description></item><item><title>apigw_lambda知見</title><link>https://ikorihn.github.io/digitalgarden/note/apigw_lambda%E7%9F%A5%E8%A6%8B/</link><pubDate>Sat, 07 Nov 2020 17:35:00 +0900</pubDate><guid>https://ikorihn.github.io/digitalgarden/note/apigw_lambda%E7%9F%A5%E8%A6%8B/</guid><description>lambda endpointをpathごとに作る main関数のみエンドポイントごとに準備 handler関数は共通 handlerの中でpathごとに振り</description></item></channel></rss>