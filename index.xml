<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>ikorihn Digitalgarden on</title><link>https://ikorihn.github.io/digitalgarden/</link><description>Recent content in ikorihn Digitalgarden on</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Fri, 25 Aug 2023 16:01:00 +0900</lastBuildDate><atom:link href="https://ikorihn.github.io/digitalgarden/index.xml" rel="self" type="application/rss+xml"/><item><title>Karabiner Elements</title><link>https://ikorihn.github.io/digitalgarden/note/Karabiner-Elements/</link><pubDate>Fri, 25 Aug 2023 16:01:00 +0900</pubDate><guid>https://ikorihn.github.io/digitalgarden/note/Karabiner-Elements/</guid><description>Karabiner-Elements A powerful and stable keyboard customizer for macOS. Mac のキーボードのキーマップをカスタマイズするアプリケーション。 US配列で左右のCommandキーをかな・英数にするといった</description></item><item><title>Karabiner elementsの設定をGokuで楽に書く</title><link>https://ikorihn.github.io/digitalgarden/blog/Karabiner-elements%E3%81%AE%E8%A8%AD%E5%AE%9A%E3%82%92Goku%E3%81%A7%E6%A5%BD%E3%81%AB%E6%9B%B8%E3%81%8F/</link><pubDate>Fri, 25 Aug 2023 11:37:00 +0900</pubDate><guid>https://ikorihn.github.io/digitalgarden/blog/Karabiner-elements%E3%81%AE%E8%A8%AD%E5%AE%9A%E3%82%92Goku%E3%81%A7%E6%A5%BD%E3%81%AB%E6%9B%B8%E3%81%8F/</guid><description>Karabiner Elements は大変便利なアプリケーションですが、GUIだけだと設定に限界があるのである程度慣れてくるとJSONを直接編集することになります。 このJS</description></item><item><title>Cherry MXキースイッチ</title><link>https://ikorihn.github.io/digitalgarden/note/Cherry-MX%E3%82%AD%E3%83%BC%E3%82%B9%E3%82%A4%E3%83%83%E3%83%81/</link><pubDate>Sun, 20 Aug 2023 23:15:00 +0900</pubDate><guid>https://ikorihn.github.io/digitalgarden/note/Cherry-MX%E3%82%AD%E3%83%BC%E3%82%B9%E3%82%A4%E3%83%83%E3%83%81/</guid><description>キースイッチの選び方 Cherry MXスイッチはメカニカルキースイッチの一種で、たくさんの互換キースイッチがある。 青軸 クリック音がでかい オフィスでは使え</description></item><item><title>Quartz v4アップデート</title><link>https://ikorihn.github.io/digitalgarden/note/Quartz-v4%E3%82%A2%E3%83%83%E3%83%97%E3%83%87%E3%83%BC%E3%83%88/</link><pubDate>Sun, 20 Aug 2023 16:10:00 +0900</pubDate><guid>https://ikorihn.github.io/digitalgarden/note/Quartz-v4%E3%82%A2%E3%83%83%E3%83%97%E3%83%87%E3%83%BC%E3%83%88/</guid><description>Obsidian を Quartzを使って公開 しており、 2023/08/20 にv4がリリースされたのでアップデートの調査をした Welcome to Quartz 4 Quartz is a fast, batteries-included static-site generator that transforms Markdown content into fully functional websites. Thousands of students, developers, and teachers</description></item><item><title>Deno npmのAWS SDK for JavaScript v3を使う</title><link>https://ikorihn.github.io/digitalgarden/note/Deno-npm%E3%81%AEAWS-SDK-for-JavaScript-v3%E3%82%92%E4%BD%BF%E3%81%86/</link><pubDate>Fri, 18 Aug 2023 15:26:00 +0900</pubDate><guid>https://ikorihn.github.io/digitalgarden/note/Deno-npm%E3%81%AEAWS-SDK-for-JavaScript-v3%E3%82%92%E4%BD%BF%E3%81%86/</guid><description/></item><item><title>Vitest in-source testing</title><link>https://ikorihn.github.io/digitalgarden/note/Vitest-in-source-testing/</link><pubDate>Wed, 16 Aug 2023 19:00:00 +0900</pubDate><guid>https://ikorihn.github.io/digitalgarden/note/Vitest-in-source-testing/</guid><description>https://vitest.dev/guide/in-source.html ソース内にテストを書くことができる。 in-source testing と.test.jsを共存させるとin-sourceが動かない hello.ts と hello.test.ts があるときに、hello.ts 内</description></item><item><title>Kubernetes External SecretsをExternal Secrets Operatorに移行する</title><link>https://ikorihn.github.io/digitalgarden/note/Kubernetes-External-Secrets%E3%82%92External-Secrets-Operator%E3%81%AB%E7%A7%BB%E8%A1%8C%E3%81%99%E3%82%8B/</link><pubDate>Tue, 15 Aug 2023 16:16:00 +0900</pubDate><guid>https://ikorihn.github.io/digitalgarden/note/Kubernetes-External-Secrets%E3%82%92External-Secrets-Operator%E3%81%AB%E7%A7%BB%E8%A1%8C%E3%81%99%E3%82%8B/</guid><description>Kubernetes External Secrets (KES) は Kubernetes において、AWS Secrets Managerなどの外部のシークレット管理システムと連携して、セキュアにSecretsリソースを作成するコンポ</description></item><item><title>Kubernetes Controllerの処理フロー</title><link>https://ikorihn.github.io/digitalgarden/note/Kubernetes-Controller%E3%81%AE%E5%87%A6%E7%90%86%E3%83%95%E3%83%AD%E3%83%BC/</link><pubDate>Mon, 14 Aug 2023 12:27:00 +0900</pubDate><guid>https://ikorihn.github.io/digitalgarden/note/Kubernetes-Controller%E3%81%AE%E5%87%A6%E7%90%86%E3%83%95%E3%83%AD%E3%83%BC/</guid><description>用語の整理 client-go KubernetesのAPIを実行するGoモジュール https://github.com/kubernetes/sample-controller/blob/master/docs/controller-client-go.md 参考資料 client-goを使ってKubernetesのAPIに触れた - な</description></item><item><title>shell script 偶数行と奇数行で別の処理をする</title><link>https://ikorihn.github.io/digitalgarden/note/shell-script-%E5%81%B6%E6%95%B0%E8%A1%8C%E3%81%A8%E5%A5%87%E6%95%B0%E8%A1%8C%E3%81%A7%E5%88%A5%E3%81%AE%E5%87%A6%E7%90%86%E3%82%92%E3%81%99%E3%82%8B/</link><pubDate>Thu, 10 Aug 2023 15:04:00 +0900</pubDate><guid>https://ikorihn.github.io/digitalgarden/note/shell-script-%E5%81%B6%E6%95%B0%E8%A1%8C%E3%81%A8%E5%A5%87%E6%95%B0%E8%A1%8C%E3%81%A7%E5%88%A5%E3%81%AE%E5%87%A6%E7%90%86%E3%82%92%E3%81%99%E3%82%8B/</guid><description>1 2 3 4 5 6 7 8 9 10 11 12 FILE=keyvalues.txt index=1 while read -r line; do if [[ $(expr index%2) -ne 0 ]]; then key=$line else val=$line echo &amp;#34;$key= $value&amp;#34; fi (( index++ )) done &amp;lt; $FILE</description></item><item><title>Argo Rollouts BlueGreen Deploy中にreplicasが変更された場合に正常に完了しない</title><link>https://ikorihn.github.io/digitalgarden/note/Argo-Rollouts-BlueGreen-Deploy%E4%B8%AD%E3%81%ABreplicas%E3%81%8C%E5%A4%89%E6%9B%B4%E3%81%95%E3%82%8C%E3%81%9F%E5%A0%B4%E5%90%88%E3%81%AB%E6%AD%A3%E5%B8%B8%E3%81%AB%E5%AE%8C%E4%BA%86%E3%81%97%E3%81%AA%E3%81%84/</link><pubDate>Wed, 09 Aug 2023 10:46:00 +0900</pubDate><guid>https://ikorihn.github.io/digitalgarden/note/Argo-Rollouts-BlueGreen-Deploy%E4%B8%AD%E3%81%ABreplicas%E3%81%8C%E5%A4%89%E6%9B%B4%E3%81%95%E3%82%8C%E3%81%9F%E5%A0%B4%E5%90%88%E3%81%AB%E6%AD%A3%E5%B8%B8%E3%81%AB%E5%AE%8C%E4%BA%86%E3%81%97%E3%81%AA%E3%81%84/</guid><description>環境 Argo Rollouts v1.5.1 再現手順 Blue/Green Deployを設定する Rolloutsに対してHPAを設定してreplicasを変更する Rolloutsのcolorを変</description></item><item><title>Go 呼び出し元の関数名を含めてログ出力する</title><link>https://ikorihn.github.io/digitalgarden/note/Go-%E5%91%BC%E3%81%B3%E5%87%BA%E3%81%97%E5%85%83%E3%81%AE%E9%96%A2%E6%95%B0%E5%90%8D%E3%82%92%E5%90%AB%E3%82%81%E3%81%A6%E3%83%AD%E3%82%B0%E5%87%BA%E5%8A%9B%E3%81%99%E3%82%8B/</link><pubDate>Mon, 07 Aug 2023 18:03:00 +0900</pubDate><guid>https://ikorihn.github.io/digitalgarden/note/Go-%E5%91%BC%E3%81%B3%E5%87%BA%E3%81%97%E5%85%83%E3%81%AE%E9%96%A2%E6%95%B0%E5%90%8D%E3%82%92%E5%90%AB%E3%82%81%E3%81%A6%E3%83%AD%E3%82%B0%E5%87%BA%E5%8A%9B%E3%81%99%E3%82%8B/</guid><description>複数箇所にデバッグ用のログを仕込むにあたって、呼び出し元を勝手に挿入してくれると助かるので方法を調べた。 https://stackoverflow.com/questions/25927660/how-to-get-the-current-function-name runtime.CallersFrames を使って呼び出し元を特定できる。</description></item><item><title>Keyball44の組み立て</title><link>https://ikorihn.github.io/digitalgarden/blog/Keyball44%E3%81%AE%E7%B5%84%E3%81%BF%E7%AB%8B%E3%81%A6/</link><pubDate>Sat, 29 Jul 2023 18:18:00 +0900</pubDate><guid>https://ikorihn.github.io/digitalgarden/blog/Keyball44%E3%81%AE%E7%B5%84%E3%81%BF%E7%AB%8B%E3%81%A6/</guid><description>トラックボールがついている左右分離型のキーボードです。 自作キーボードにはいろいろ道具が必要で、一度買ってしまったら沼だとわかりつつ、ずっと興</description></item><item><title>etcdctl</title><link>https://ikorihn.github.io/digitalgarden/note/etcdctl/</link><pubDate>Wed, 19 Jul 2023 17:09:00 +0900</pubDate><guid>https://ikorihn.github.io/digitalgarden/note/etcdctl/</guid><description>etcdのクライアント etcdをインストールすると使えるようになるが、クライアントだけほしい場合もある。 Goなので go install github.com/etcd-io/etcd/etcdctl@latest で入るかと思ったがこ</description></item><item><title>etcd</title><link>https://ikorihn.github.io/digitalgarden/note/etcd/</link><pubDate>Wed, 19 Jul 2023 17:08:00 +0900</pubDate><guid>https://ikorihn.github.io/digitalgarden/note/etcd/</guid><description>etcd A distributed, reliable key-value store for the most critical data of a distributed system 分散型のキーバリューストア Go言語製 複数台で実行してクラスターを構築することで負荷分散を行う etcdctl で操作できる。 docker</description></item><item><title>JFrog Artifactory</title><link>https://ikorihn.github.io/digitalgarden/note/JFrog-Artifactory/</link><pubDate>Mon, 10 Jul 2023 16:52:00 +0900</pubDate><guid>https://ikorihn.github.io/digitalgarden/note/JFrog-Artifactory/</guid><description>JFrogの提供するユニバーサルリポジトリ https://jfrog.com/ja/artifactory/</description></item><item><title>Go checksumの照合について</title><link>https://ikorihn.github.io/digitalgarden/note/Go-checksum%E3%81%AE%E7%85%A7%E5%90%88%E3%81%AB%E3%81%A4%E3%81%84%E3%81%A6/</link><pubDate>Mon, 10 Jul 2023 14:54:00 +0900</pubDate><guid>https://ikorihn.github.io/digitalgarden/note/Go-checksum%E3%81%AE%E7%85%A7%E5%90%88%E3%81%AB%E3%81%A4%E3%81%84%E3%81%A6/</guid><description>Go のモジュールを JFrog Artifactory にアップして取得する運用をしているのだが、モジュールをGitリポジトリから取得した場合とJFrogから取得した場合でハッ</description></item><item><title>MinIO</title><link>https://ikorihn.github.io/digitalgarden/note/MinIO/</link><pubDate>Tue, 04 Jul 2023 12:24:00 +0900</pubDate><guid>https://ikorihn.github.io/digitalgarden/note/MinIO/</guid><description>MinIO | High Performance, Kubernetes Native Object Storage MinIO&amp;#39;s High Performance Object Storage is Open Source, Amazon S3 compatible, Kubernetes Native and is designed for cloud native workloads like AI. S3と互換性のあるオブジェクトストレージサーバー。 開発時にローカルでMinIOを</description></item><item><title>MinIOをローカルのkubernetesで動かす</title><link>https://ikorihn.github.io/digitalgarden/note/MinIO%E3%82%92%E3%83%AD%E3%83%BC%E3%82%AB%E3%83%AB%E3%81%AEkubernetes%E3%81%A7%E5%8B%95%E3%81%8B%E3%81%99/</link><pubDate>Tue, 04 Jul 2023 12:20:00 +0900</pubDate><guid>https://ikorihn.github.io/digitalgarden/note/MinIO%E3%82%92%E3%83%AD%E3%83%BC%E3%82%AB%E3%83%AB%E3%81%AEkubernetes%E3%81%A7%E5%8B%95%E3%81%8B%E3%81%99/</guid><description>MinIO を Kubernetes で動かしたい。 環境は、 Rancher Desktop のKubernetes manifestをapplyする https://min.io/docs/minio/kubernetes/upstream/index.html 1 curl https://raw.githubusercontent.com/minio/docs/master/source/extra/examples/minio-dev.yaml -O spec.volumes[0].hostPath.path を任意のローカルのパスにする spec.nodeSelector を kubernetes.io/os: linux にする</description></item><item><title>Kibana</title><link>https://ikorihn.github.io/digitalgarden/note/Kibana/</link><pubDate>Thu, 29 Jun 2023 18:35:00 +0900</pubDate><guid>https://ikorihn.github.io/digitalgarden/note/Kibana/</guid><description>https://www.elastic.co/jp/kibana/ Kibanaは、Elasticsearchでインデックスされたデータの検索と可視化の機能や、Elastic Stackのプロダクトの制御の機</description></item><item><title>OpenObserveを使ってみる</title><link>https://ikorihn.github.io/digitalgarden/note/OpenObserve%E3%82%92%E4%BD%BF%E3%81%A3%E3%81%A6%E3%81%BF%E3%82%8B/</link><pubDate>Thu, 29 Jun 2023 18:34:00 +0900</pubDate><guid>https://ikorihn.github.io/digitalgarden/note/OpenObserve%E3%82%92%E4%BD%BF%E3%81%A3%E3%81%A6%E3%81%BF%E3%82%8B/</guid><description>OpenObserve | Open Source Observability Platform for Logs, Metrics, Traces, and More – Your Ultimate Dashboard for Alerts and Insights Logs, Metrics, Traces and more in one platform.Streamline your operations with worry-free observability and simplify your observability setup in just 2 minutes. 140x lower storage cost than your existing observability tools Kibana のように、ログデータの可視化を行うツ</description></item><item><title>OpenObserveを複数サーバーで負荷分散する</title><link>https://ikorihn.github.io/digitalgarden/note/OpenObserve%E3%82%92%E8%A4%87%E6%95%B0%E3%82%B5%E3%83%BC%E3%83%90%E3%83%BC%E3%81%A7%E8%B2%A0%E8%8D%B7%E5%88%86%E6%95%A3%E3%81%99%E3%82%8B/</link><pubDate>Thu, 29 Jun 2023 18:34:00 +0900</pubDate><guid>https://ikorihn.github.io/digitalgarden/note/OpenObserve%E3%82%92%E8%A4%87%E6%95%B0%E3%82%B5%E3%83%BC%E3%83%90%E3%83%BC%E3%81%A7%E8%B2%A0%E8%8D%B7%E5%88%86%E6%95%A3%E3%81%99%E3%82%8B/</guid><description>OpenObserveを使ってみる で、ローカルで立てたり1台のEC2上で動かす手順がわかった。 負荷分散したい場合いまのところ Kubernet</description></item><item><title>Garmin スマホの機種を変えたときにペアリングがうまく行かない</title><link>https://ikorihn.github.io/digitalgarden/note/Garmin-%E3%82%B9%E3%83%9E%E3%83%9B%E3%81%AE%E6%A9%9F%E7%A8%AE%E3%82%92%E5%A4%89%E3%81%88%E3%81%9F%E3%81%A8%E3%81%8D%E3%81%AB%E3%83%9A%E3%82%A2%E3%83%AA%E3%83%B3%E3%82%B0%E3%81%8C%E3%81%86%E3%81%BE%E3%81%8F%E8%A1%8C%E3%81%8B%E3%81%AA%E3%81%84/</link><pubDate>Wed, 28 Jun 2023 23:35:00 +0900</pubDate><guid>https://ikorihn.github.io/digitalgarden/note/Garmin-%E3%82%B9%E3%83%9E%E3%83%9B%E3%81%AE%E6%A9%9F%E7%A8%AE%E3%82%92%E5%A4%89%E3%81%88%E3%81%9F%E3%81%A8%E3%81%8D%E3%81%AB%E3%83%9A%E3%82%A2%E3%83%AA%E3%83%B3%E3%82%B0%E3%81%8C%E3%81%86%E3%81%BE%E3%81%8F%E8%A1%8C%E3%81%8B%E3%81%AA%E3%81%84/</guid><description>スマホの機種変更時に、何度やってもペアリングに成功しなかった。 pinの入力まではできるけど、そのあと failed to pairing と出てエラーとなる。そしてその後は</description></item><item><title>Go SQLBoilerの使い方</title><link>https://ikorihn.github.io/digitalgarden/note/Go-SQLBoiler%E3%81%AE%E4%BD%BF%E3%81%84%E6%96%B9/</link><pubDate>Sun, 18 Jun 2023 22:48:00 +0900</pubDate><guid>https://ikorihn.github.io/digitalgarden/note/Go-SQLBoiler%E3%81%AE%E4%BD%BF%E3%81%84%E6%96%B9/</guid><description>GitHub - volatiletech/sqlboiler: Generate a Go ORM tailored to your database schema. Generate a Go ORM tailored to your database schema. - GitHub - volatiletech/sqlboiler: Generate a Go ORM tailored to your database schema. Go のORMライブラリの一つで、特徴としてはDBに接続して、予め作成ずみの</description></item><item><title>Go 複数のLambdaで共通で実行する処理をmiddlewareで書く</title><link>https://ikorihn.github.io/digitalgarden/note/Go-%E8%A4%87%E6%95%B0%E3%81%AELambda%E3%81%A7%E5%85%B1%E9%80%9A%E3%81%A7%E5%AE%9F%E8%A1%8C%E3%81%99%E3%82%8B%E5%87%A6%E7%90%86%E3%82%92middleware%E3%81%A7%E6%9B%B8%E3%81%8F/</link><pubDate>Sat, 17 Jun 2023 23:33:00 +0900</pubDate><guid>https://ikorihn.github.io/digitalgarden/note/Go-%E8%A4%87%E6%95%B0%E3%81%AELambda%E3%81%A7%E5%85%B1%E9%80%9A%E3%81%A7%E5%AE%9F%E8%A1%8C%E3%81%99%E3%82%8B%E5%87%A6%E7%90%86%E3%82%92middleware%E3%81%A7%E6%9B%B8%E3%81%8F/</guid><description>API Gateway向けの AWS Lambda のハンドラーをGoで作成する場合、普通に書くとこのように、main関数から特定のシグネチャの関数を lambda.Start で呼び出す。 https://docs.aws.amazon.com/ja_jp/lambda/latest/dg/golang-handler.html</description></item><item><title>Go oapi-codegenでparametersを独自型にバインドする</title><link>https://ikorihn.github.io/digitalgarden/note/Go-oapi-codegen%E3%81%A7parameters%E3%82%92%E7%8B%AC%E8%87%AA%E5%9E%8B%E3%81%AB%E3%83%90%E3%82%A4%E3%83%B3%E3%83%89%E3%81%99%E3%82%8B/</link><pubDate>Thu, 08 Jun 2023 11:27:00 +0900</pubDate><guid>https://ikorihn.github.io/digitalgarden/note/Go-oapi-codegen%E3%81%A7parameters%E3%82%92%E7%8B%AC%E8%87%AA%E5%9E%8B%E3%81%AB%E3%83%90%E3%82%A4%E3%83%B3%E3%83%89%E3%81%99%E3%82%8B/</guid><description/></item><item><title>Nuxt3 useAsyncDataでOpenAPIから生成した型を使用する</title><link>https://ikorihn.github.io/digitalgarden/note/Nuxt3-useAsyncData%E3%81%A7OpenAPI%E3%81%8B%E3%82%89%E7%94%9F%E6%88%90%E3%81%97%E3%81%9F%E5%9E%8B%E3%82%92%E4%BD%BF%E7%94%A8%E3%81%99%E3%82%8B/</link><pubDate>Thu, 08 Jun 2023 11:27:00 +0900</pubDate><guid>https://ikorihn.github.io/digitalgarden/note/Nuxt3-useAsyncData%E3%81%A7OpenAPI%E3%81%8B%E3%82%89%E7%94%9F%E6%88%90%E3%81%97%E3%81%9F%E5%9E%8B%E3%82%92%E4%BD%BF%E7%94%A8%E3%81%99%E3%82%8B/</guid><description>Date型の変換でミリ秒をつけたくない パラメータが format: date-time のとき .toISOString() でstringにしているのだが、ミリ秒は取りたくない。 なのでdate-time</description></item><item><title>Go GORMでPrepareStmt trueにしたときにメモリリークが発生した</title><link>https://ikorihn.github.io/digitalgarden/note/Go-GORM%E3%81%A7PrepareStmt-true%E3%81%AB%E3%81%97%E3%81%9F%E3%81%A8%E3%81%8D%E3%81%AB%E3%83%A1%E3%83%A2%E3%83%AA%E3%83%AA%E3%83%BC%E3%82%AF%E3%81%8C%E7%99%BA%E7%94%9F%E3%81%97%E3%81%9F/</link><pubDate>Thu, 08 Jun 2023 10:35:00 +0900</pubDate><guid>https://ikorihn.github.io/digitalgarden/note/Go-GORM%E3%81%A7PrepareStmt-true%E3%81%AB%E3%81%97%E3%81%9F%E3%81%A8%E3%81%8D%E3%81%AB%E3%83%A1%E3%83%A2%E3%83%AA%E3%83%AA%E3%83%BC%E3%82%AF%E3%81%8C%E7%99%BA%E7%94%9F%E3%81%97%E3%81%9F/</guid><description>パフォーマンス向上のため、PrepareStmtをtrueにした。 https://gorm.io/docs/performance.html#Caches-Prepared-Statement これは標準パッケージの PrepareContext の実行結果の sql.Stmt をキャッシュしておいて、2回目以降</description></item><item><title>Grafana database is lockedのエラーがでてアラート設定などが更新できない</title><link>https://ikorihn.github.io/digitalgarden/note/Grafana-database-is-locked%E3%81%AE%E3%82%A8%E3%83%A9%E3%83%BC%E3%81%8C%E3%81%A7%E3%81%A6%E3%82%A2%E3%83%A9%E3%83%BC%E3%83%88%E8%A8%AD%E5%AE%9A%E3%81%AA%E3%81%A9%E3%81%8C%E6%9B%B4%E6%96%B0%E3%81%A7%E3%81%8D%E3%81%AA%E3%81%84/</link><pubDate>Tue, 30 May 2023 16:00:00 +0900</pubDate><guid>https://ikorihn.github.io/digitalgarden/note/Grafana-database-is-locked%E3%81%AE%E3%82%A8%E3%83%A9%E3%83%BC%E3%81%8C%E3%81%A7%E3%81%A6%E3%82%A2%E3%83%A9%E3%83%BC%E3%83%88%E8%A8%AD%E5%AE%9A%E3%81%AA%E3%81%A9%E3%81%8C%E6%9B%B4%E6%96%B0%E3%81%A7%E3%81%8D%E3%81%AA%E3%81%84/</guid><description>Grafanaでアラートルールを更新した際に、database is locked とエラーがでて更新ができない場合がある。 これはsqliteのDBがロックさ</description></item><item><title>Go oapi-codegenを使ったコード生成</title><link>https://ikorihn.github.io/digitalgarden/note/Go-oapi-codegen%E3%82%92%E4%BD%BF%E3%81%A3%E3%81%9F%E3%82%B3%E3%83%BC%E3%83%89%E7%94%9F%E6%88%90/</link><pubDate>Mon, 29 May 2023 12:05:00 +0900</pubDate><guid>https://ikorihn.github.io/digitalgarden/note/Go-oapi-codegen%E3%82%92%E4%BD%BF%E3%81%A3%E3%81%9F%E3%82%B3%E3%83%BC%E3%83%89%E7%94%9F%E6%88%90/</guid><description>導入した結果 仕様書とコードが一致するようになった それぞれの言語向けにAPIレスポンスのコードを実装するコストが減った フロントエンドとバックエ</description></item><item><title>chromedpを使ってGoでChromeを自動操作する</title><link>https://ikorihn.github.io/digitalgarden/blog/chromedp%E3%82%92%E4%BD%BF%E3%81%A3%E3%81%A6Go%E3%81%A7Chrome%E3%82%92%E8%87%AA%E5%8B%95%E6%93%8D%E4%BD%9C%E3%81%99%E3%82%8B/</link><pubDate>Sun, 28 May 2023 18:29:44 +0900</pubDate><guid>https://ikorihn.github.io/digitalgarden/blog/chromedp%E3%82%92%E4%BD%BF%E3%81%A3%E3%81%A6Go%E3%81%A7Chrome%E3%82%92%E8%87%AA%E5%8B%95%E6%93%8D%E4%BD%9C%E3%81%99%E3%82%8B/</guid><description>普段の業務でWebページを開いてグラフをキャプチャしたり、勤怠入力をしたりといったルーチンの作業を自動化できないかなと思いました。 こうしたブ</description></item><item><title>Go GORMでSQL実行前後に実行されるHookを登録する</title><link>https://ikorihn.github.io/digitalgarden/note/Go-GORM%E3%81%A7SQL%E5%AE%9F%E8%A1%8C%E5%89%8D%E5%BE%8C%E3%81%AB%E5%AE%9F%E8%A1%8C%E3%81%95%E3%82%8C%E3%82%8BHook%E3%82%92%E7%99%BB%E9%8C%B2%E3%81%99%E3%82%8B/</link><pubDate>Fri, 19 May 2023 17:54:00 +0900</pubDate><guid>https://ikorihn.github.io/digitalgarden/note/Go-GORM%E3%81%A7SQL%E5%AE%9F%E8%A1%8C%E5%89%8D%E5%BE%8C%E3%81%AB%E5%AE%9F%E8%A1%8C%E3%81%95%E3%82%8C%E3%82%8BHook%E3%82%92%E7%99%BB%E9%8C%B2%E3%81%99%E3%82%8B/</guid><description>構造体単位で適用する gorm.DB全体に適用する Plugin を使ってGlobalに設定することも可能 定義済みのcallbackはこちら https://github.com/go-gorm/gorm/blob/master/callbacks/callbacks.go Query() に対して gorm:query と</description></item><item><title>nvim-treesitter</title><link>https://ikorihn.github.io/digitalgarden/note/nvim-treesitter/</link><pubDate>Fri, 19 May 2023 12:03:00 +0900</pubDate><guid>https://ikorihn.github.io/digitalgarden/note/nvim-treesitter/</guid><description>nvim-treesitter/nvim-treesitter: Nvim Treesitter configurations and abstraction layer Neovim でtree-sitterを使ってテキストの構文解析やハイライトなどの機能を実現するプラグイン tree-sitterについて Tree-sitter</description></item><item><title>Go Neovimでtemplateのsyntax highlightを効かせる</title><link>https://ikorihn.github.io/digitalgarden/note/Go-Neovim%E3%81%A7template%E3%81%AEsyntax-highlight%E3%82%92%E5%8A%B9%E3%81%8B%E3%81%9B%E3%82%8B/</link><pubDate>Fri, 19 May 2023 11:55:00 +0900</pubDate><guid>https://ikorihn.github.io/digitalgarden/note/Go-Neovim%E3%81%A7template%E3%81%AEsyntax-highlight%E3%82%92%E5%8A%B9%E3%81%8B%E3%81%9B%E3%82%8B/</guid><description>これを入れた GitHub - ngalaiko/tree-sitter-go-template: Golang template grammar for tree-sitter Golang template grammar for tree-sitter. Contribute to ngalaiko/tree-sitter-go-template development by creating an account on GitHub. text/template の nvim-treesitter 向けのパーサー セットアップ 公式の通りだがメモしておく parserに追加したあ</description></item><item><title>go モジュールのタグを別のコミットハッシュにつけ直したらcacheが残っていてパッケージうまく読み込めなかった</title><link>https://ikorihn.github.io/digitalgarden/note/go-%E3%83%A2%E3%82%B8%E3%83%A5%E3%83%BC%E3%83%AB%E3%81%AE%E3%82%BF%E3%82%B0%E3%82%92%E5%88%A5%E3%81%AE%E3%82%B3%E3%83%9F%E3%83%83%E3%83%88%E3%83%8F%E3%83%83%E3%82%B7%E3%83%A5%E3%81%AB%E3%81%A4%E3%81%91%E7%9B%B4%E3%81%97%E3%81%9F%E3%82%89cache%E3%81%8C%E6%AE%8B%E3%81%A3%E3%81%A6%E3%81%84%E3%81%A6%E3%83%91%E3%83%83%E3%82%B1%E3%83%BC%E3%82%B8%E3%81%86%E3%81%BE%E3%81%8F%E8%AA%AD%E3%81%BF%E8%BE%BC%E3%82%81%E3%81%AA%E3%81%8B%E3%81%A3%E3%81%9F/</link><pubDate>Thu, 18 May 2023 19:25:00 +0900</pubDate><guid>https://ikorihn.github.io/digitalgarden/note/go-%E3%83%A2%E3%82%B8%E3%83%A5%E3%83%BC%E3%83%AB%E3%81%AE%E3%82%BF%E3%82%B0%E3%82%92%E5%88%A5%E3%81%AE%E3%82%B3%E3%83%9F%E3%83%83%E3%83%88%E3%83%8F%E3%83%83%E3%82%B7%E3%83%A5%E3%81%AB%E3%81%A4%E3%81%91%E7%9B%B4%E3%81%97%E3%81%9F%E3%82%89cache%E3%81%8C%E6%AE%8B%E3%81%A3%E3%81%A6%E3%81%84%E3%81%A6%E3%83%91%E3%83%83%E3%82%B1%E3%83%BC%E3%82%B8%E3%81%86%E3%81%BE%E3%81%8F%E8%AA%AD%E3%81%BF%E8%BE%BC%E3%82%81%E3%81%AA%E3%81%8B%E3%81%A3%E3%81%9F/</guid><description>そもそもそんなことしないほうがいいというのは承知で、開発中のパッケージなどでタグをうちまちがえたので修正したところ新しいコミットがダウンロー</description></item><item><title>Grafana Alertを設定する</title><link>https://ikorihn.github.io/digitalgarden/note/Grafana-Alert%E3%82%92%E8%A8%AD%E5%AE%9A%E3%81%99%E3%82%8B/</link><pubDate>Thu, 18 May 2023 09:50:00 +0900</pubDate><guid>https://ikorihn.github.io/digitalgarden/note/Grafana-Alert%E3%82%92%E8%A8%AD%E5%AE%9A%E3%81%99%E3%82%8B/</guid><description>Grafana 9.xではアラートするのにContact points、Notification policies、Alert Ruleをそれぞれ設定する必要が</description></item><item><title>Grafana</title><link>https://ikorihn.github.io/digitalgarden/note/Grafana/</link><pubDate>Tue, 16 May 2023 19:38:00 +0900</pubDate><guid>https://ikorihn.github.io/digitalgarden/note/Grafana/</guid><description>ログやメトリクスデータ可視化のオープンソースのWebアプリケーション Grafana documentation | Grafana documentation</description></item><item><title>Grafana ダッシュボードやアラートのexport import</title><link>https://ikorihn.github.io/digitalgarden/note/Grafana-%E3%83%80%E3%83%83%E3%82%B7%E3%83%A5%E3%83%9C%E3%83%BC%E3%83%89%E3%82%84%E3%82%A2%E3%83%A9%E3%83%BC%E3%83%88%E3%81%AEexport-import/</link><pubDate>Tue, 16 May 2023 19:29:00 +0900</pubDate><guid>https://ikorihn.github.io/digitalgarden/note/Grafana-%E3%83%80%E3%83%83%E3%82%B7%E3%83%A5%E3%83%9C%E3%83%BC%E3%83%89%E3%82%84%E3%82%A2%E3%83%A9%E3%83%BC%E3%83%88%E3%81%AEexport-import/</guid><description>Grafana にて8.xから9.xへダッシュボードを移行したい。ダッシュボードはexport/importでいけるがアラートがインポートされなくて困った</description></item><item><title>Automator</title><link>https://ikorihn.github.io/digitalgarden/note/Automator/</link><pubDate>Tue, 09 May 2023 12:56:00 +0900</pubDate><guid>https://ikorihn.github.io/digitalgarden/note/Automator/</guid><description>Macの操作を自動化するワークフローなどが作れる。</description></item><item><title>Mac screenshotの保存先を変えてファイル名も任意の形式にする</title><link>https://ikorihn.github.io/digitalgarden/note/Mac-screenshot%E3%81%AE%E4%BF%9D%E5%AD%98%E5%85%88%E3%82%92%E5%A4%89%E3%81%88%E3%81%A6%E3%83%95%E3%82%A1%E3%82%A4%E3%83%AB%E5%90%8D%E3%82%82%E4%BB%BB%E6%84%8F%E3%81%AE%E5%BD%A2%E5%BC%8F%E3%81%AB%E3%81%99%E3%82%8B/</link><pubDate>Tue, 09 May 2023 11:49:00 +0900</pubDate><guid>https://ikorihn.github.io/digitalgarden/note/Mac-screenshot%E3%81%AE%E4%BF%9D%E5%AD%98%E5%85%88%E3%82%92%E5%A4%89%E3%81%88%E3%81%A6%E3%83%95%E3%82%A1%E3%82%A4%E3%83%AB%E5%90%8D%E3%82%82%E4%BB%BB%E6%84%8F%E3%81%AE%E5%BD%A2%E5%BC%8F%E3%81%AB%E3%81%99%E3%82%8B/</guid><description>Macでスクリーンショットを撮ると、デフォルトではデスクトップに スクリーンショット [日付] [時刻].png といった名前で保存されます。 これは</description></item><item><title>Hugo 外部リンクをカードで表示する</title><link>https://ikorihn.github.io/digitalgarden/note/Hugo-%E5%A4%96%E9%83%A8%E3%83%AA%E3%83%B3%E3%82%AF%E3%82%92%E3%82%AB%E3%83%BC%E3%83%89%E3%81%A7%E8%A1%A8%E7%A4%BA%E3%81%99%E3%82%8B/</link><pubDate>Sun, 07 May 2023 16:19:00 +0900</pubDate><guid>https://ikorihn.github.io/digitalgarden/note/Hugo-%E5%A4%96%E9%83%A8%E3%83%AA%E3%83%B3%E3%82%AF%E3%82%92%E3%82%AB%E3%83%BC%E3%83%89%E3%81%A7%E8%A1%A8%E7%A4%BA%E3%81%99%E3%82%8B/</guid><description>Hugo で、ブログでよく見るリンクをカードで表示するやつをやりたい resources.GetRemote を利用することで、ビルドのタイミングで指定したURLへアクセスしてリソースを取</description></item><item><title>fzf</title><link>https://ikorihn.github.io/digitalgarden/note/fzf/</link><pubDate>Sat, 06 May 2023 15:34:00 +0900</pubDate><guid>https://ikorihn.github.io/digitalgarden/note/fzf/</guid><description>fzf は、コマンドラインでインクリメンタルにあいまい検索ができるツール。 標準出力をパイプで渡してフィルタリングしたり、カレントディレクトリ配下の</description></item><item><title>zsh fzf-tabをつかっているときにfzfでdouble starでの補完が効かない</title><link>https://ikorihn.github.io/digitalgarden/note/zsh-fzf-tab%E3%82%92%E3%81%A4%E3%81%8B%E3%81%A3%E3%81%A6%E3%81%84%E3%82%8B%E3%81%A8%E3%81%8D%E3%81%ABfzf%E3%81%A7double-star%E3%81%A7%E3%81%AE%E8%A3%9C%E5%AE%8C%E3%81%8C%E5%8A%B9%E3%81%8B%E3%81%AA%E3%81%84/</link><pubDate>Sat, 06 May 2023 15:30:00 +0900</pubDate><guid>https://ikorihn.github.io/digitalgarden/note/zsh-fzf-tab%E3%82%92%E3%81%A4%E3%81%8B%E3%81%A3%E3%81%A6%E3%81%84%E3%82%8B%E3%81%A8%E3%81%8D%E3%81%ABfzf%E3%81%A7double-star%E3%81%A7%E3%81%AE%E8%A3%9C%E5%AE%8C%E3%81%8C%E5%8A%B9%E3%81%8B%E3%81%AA%E3%81%84/</guid><description>fzf-tab を入れていると、 fzf の **&amp;lt;TAB&amp;gt; によってディレクトリ配下のファイルを再帰的に表示するキーバインドが実行されなくてこまった。 対応方法 https://github.com/Aloxaf/fzf-tab/issues/65#issuecomment-1344970328 1 2 3 4 5 6 7 8</description></item><item><title>OpenAPI</title><link>https://ikorihn.github.io/digitalgarden/note/OpenAPI/</link><pubDate>Fri, 05 May 2023 21:26:00 +0900</pubDate><guid>https://ikorihn.github.io/digitalgarden/note/OpenAPI/</guid><description>https://swagger.io/specification/ OpenAPI 仕様 (OAS) は、言語に依存しない標準のREST APIのインターフェイスを定義する。 インターフェースの定義は JSON または YAML で記述し、特定の言語に依存</description></item><item><title>OpenAPIのspecからSAMのTemplate.yamlを生成する</title><link>https://ikorihn.github.io/digitalgarden/note/OpenAPI%E3%81%AEspec%E3%81%8B%E3%82%89SAM%E3%81%AETemplate.yaml%E3%82%92%E7%94%9F%E6%88%90%E3%81%99%E3%82%8B/</link><pubDate>Fri, 05 May 2023 21:25:00 +0900</pubDate><guid>https://ikorihn.github.io/digitalgarden/note/OpenAPI%E3%81%AEspec%E3%81%8B%E3%82%89SAM%E3%81%AETemplate.yaml%E3%82%92%E7%94%9F%E6%88%90%E3%81%99%E3%82%8B/</guid><description>SAM と OpenAPI を組み合わせて使うときに両方を編集するのが大変&amp;amp;漏れやすいので合わせられる仕組みが欲しかった 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17</description></item><item><title>AWS Lambda</title><link>https://ikorihn.github.io/digitalgarden/note/AWS-Lambda/</link><pubDate>Fri, 05 May 2023 20:37:00 +0900</pubDate><guid>https://ikorihn.github.io/digitalgarden/note/AWS-Lambda/</guid><description/></item><item><title>Junitでメソッド名が長すぎてエラーになる</title><link>https://ikorihn.github.io/digitalgarden/note/Junit%E3%81%A7%E3%83%A1%E3%82%BD%E3%83%83%E3%83%89%E5%90%8D%E3%81%8C%E9%95%B7%E3%81%99%E3%81%8E%E3%81%A6%E3%82%A8%E3%83%A9%E3%83%BC%E3%81%AB%E3%81%AA%E3%82%8B/</link><pubDate>Fri, 05 May 2023 20:37:00 +0900</pubDate><guid>https://ikorihn.github.io/digitalgarden/note/Junit%E3%81%A7%E3%83%A1%E3%82%BD%E3%83%83%E3%83%89%E5%90%8D%E3%81%8C%E9%95%B7%E3%81%99%E3%81%8E%E3%81%A6%E3%82%A8%E3%83%A9%E3%83%BC%E3%81%AB%E3%81%AA%E3%82%8B/</guid><description>1 2 3 4 5 6 7 8 9 10 11 12 13 [ERROR] org.jetbrains.kotlin.backend.common.BackendException: Backend Internal error: Exception during file facade code generation File being compiled: [file:///tmp/workspace/very/long/long/TestClass.java] The root cause java.io.FileNotFoundException was thrown at: java.io.FileOutputStream.open0(Native Method) at org.jetbrains.kotlin.backend.common.CodegenUtil.reportBackendException(CodegenUtil.kt:239) at org.jetbrains.kotlin.codegen.PackageCodegenImpl.generate(PackageCodegenImpl.java:78) at org.jetbrains.kotlin.codegen.DefaultCodegenFactory.generatePackage(CodegenFactory.kt:77) at org.jetbrains.kotlin.codegen.DefaultCodegenFactory.generateModule(CodegenFactory.kt:62) at org.jetbrains.kotlin.codegen.KotlinCodegenFacade.compileCorrectFiles(KotlinCodegenFacade.java:35) ... Caused by: java.io.FileNotFoundException: /tmp/workspace/very</description></item><item><title>shell script テキストファイルやJSONでfor loopするパターン</title><link>https://ikorihn.github.io/digitalgarden/note/shell-script-%E3%83%86%E3%82%AD%E3%82%B9%E3%83%88%E3%83%95%E3%82%A1%E3%82%A4%E3%83%AB%E3%82%84JSON%E3%81%A7for-loop%E3%81%99%E3%82%8B%E3%83%91%E3%82%BF%E3%83%BC%E3%83%B3/</link><pubDate>Fri, 05 May 2023 20:36:00 +0900</pubDate><guid>https://ikorihn.github.io/digitalgarden/note/shell-script-%E3%83%86%E3%82%AD%E3%82%B9%E3%83%88%E3%83%95%E3%82%A1%E3%82%A4%E3%83%AB%E3%82%84JSON%E3%81%A7for-loop%E3%81%99%E3%82%8B%E3%83%91%E3%82%BF%E3%83%BC%E3%83%B3/</guid><description>ファイルを読み込んで一行ずつ処理する name_list.txt 1 2 3 John Bob Alice 1 2 3 4 5 6 7 8 while read -r line || [ -n &amp;#34;$line&amp;#34; ] do echo &amp;#34;name: ${line}&amp;#34; done &amp;lt; name_list.txt ``` ## JSONの配列を一つずつ処理する [jq</description></item><item><title>Homebrew</title><link>https://ikorihn.github.io/digitalgarden/note/Homebrew/</link><pubDate>Fri, 05 May 2023 20:34:00 +0900</pubDate><guid>https://ikorihn.github.io/digitalgarden/note/Homebrew/</guid><description/></item><item><title>Windows デュアルブートしているubuntuを削除</title><link>https://ikorihn.github.io/digitalgarden/note/Windows-%E3%83%87%E3%83%A5%E3%82%A2%E3%83%AB%E3%83%96%E3%83%BC%E3%83%88%E3%81%97%E3%81%A6%E3%81%84%E3%82%8Bubuntu%E3%82%92%E5%89%8A%E9%99%A4/</link><pubDate>Fri, 05 May 2023 20:34:00 +0900</pubDate><guid>https://ikorihn.github.io/digitalgarden/note/Windows-%E3%83%87%E3%83%A5%E3%82%A2%E3%83%AB%E3%83%96%E3%83%BC%E3%83%88%E3%81%97%E3%81%A6%E3%81%84%E3%82%8Bubuntu%E3%82%92%E5%89%8A%E9%99%A4/</guid><description>LinuxとWindowsのデュアルブートをやめた 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 C:\&amp;gt;bcdedit /enum firmware ファームウ</description></item><item><title>go 1.19アップデート内容</title><link>https://ikorihn.github.io/digitalgarden/note/go-1.19%E3%82%A2%E3%83%83%E3%83%97%E3%83%87%E3%83%BC%E3%83%88%E5%86%85%E5%AE%B9/</link><pubDate>Fri, 05 May 2023 20:33:00 +0900</pubDate><guid>https://ikorihn.github.io/digitalgarden/note/go-1.19%E3%82%A2%E3%83%83%E3%83%97%E3%83%87%E3%83%BC%E3%83%88%E5%86%85%E5%AE%B9/</guid><description>Go Memory Modelを読む【入門編】 - Google スライド What is Soft Memory Limit? - Speaker Deck [shared] 20220815 What&amp;rsquo;s new in Go 1.19? - Google スライド Go1.19で採用された Pattern-defeating Quicksort の紹介 - Speaker Deck</description></item><item><title>sshで-ttが必要な場合</title><link>https://ikorihn.github.io/digitalgarden/note/ssh%E3%81%A7-tt%E3%81%8C%E5%BF%85%E8%A6%81%E3%81%AA%E5%A0%B4%E5%90%88/</link><pubDate>Fri, 05 May 2023 20:33:00 +0900</pubDate><guid>https://ikorihn.github.io/digitalgarden/note/ssh%E3%81%A7-tt%E3%81%8C%E5%BF%85%E8%A6%81%E3%81%AA%E5%A0%B4%E5%90%88/</guid><description>ssh でコマンドが実行できないときがあり調べた sshを使ってリモートマシンでコマンドを叩く際の注意点 - 覚書 man(1) sshより抜粋: -t Force pseudo-terminal allocation. This can be used to execute</description></item><item><title>Hystrix dashboard</title><link>https://ikorihn.github.io/digitalgarden/note/Hystrix-dashboard/</link><pubDate>Fri, 05 May 2023 20:32:00 +0900</pubDate><guid>https://ikorihn.github.io/digitalgarden/note/Hystrix-dashboard/</guid><description>https://github.com/Netflix-Skunkworks/hystrix-dashboard/wiki 1 2 3 4 5 git clone https://github.com/cep21/circuit.git cd circuit make run docker run -d -p 7979:9002 --name hystrix-dashboard mlabouardy/hystrix-dashboard:latest http://127.0.0.1:7979/hystrix http://host.docker.internal:8123/hystrix.stream を追加する こんなダッシュボードが見れる</description></item><item><title>tmux</title><link>https://ikorihn.github.io/digitalgarden/note/tmux/</link><pubDate>Fri, 05 May 2023 20:32:00 +0900</pubDate><guid>https://ikorihn.github.io/digitalgarden/note/tmux/</guid><description/></item><item><title>Vue.js</title><link>https://ikorihn.github.io/digitalgarden/note/Vue.js/</link><pubDate>Fri, 05 May 2023 20:32:00 +0900</pubDate><guid>https://ikorihn.github.io/digitalgarden/note/Vue.js/</guid><description/></item><item><title>AWS</title><link>https://ikorihn.github.io/digitalgarden/note/AWS/</link><pubDate>Fri, 05 May 2023 20:31:00 +0900</pubDate><guid>https://ikorihn.github.io/digitalgarden/note/AWS/</guid><description/></item><item><title>TypeScriptのドメインオブジェクトについて</title><link>https://ikorihn.github.io/digitalgarden/note/TypeScript%E3%81%AE%E3%83%89%E3%83%A1%E3%82%A4%E3%83%B3%E3%82%AA%E3%83%96%E3%82%B8%E3%82%A7%E3%82%AF%E3%83%88%E3%81%AB%E3%81%A4%E3%81%84%E3%81%A6/</link><pubDate>Fri, 05 May 2023 20:31:00 +0900</pubDate><guid>https://ikorihn.github.io/digitalgarden/note/TypeScript%E3%81%AE%E3%83%89%E3%83%A1%E3%82%A4%E3%83%B3%E3%82%AA%E3%83%96%E3%82%B8%E3%82%A7%E3%82%AF%E3%83%88%E3%81%AB%E3%81%A4%E3%81%84%E3%81%A6/</guid><description>TypeScript のドメインオブジェクトについて classで定義してgetterのみ公開ってしたけど、これは失敗だった 1 2 3 4 5 6 7 8 9 export class Animal { constructor( private _name: string, private _weight:</description></item><item><title>zsh</title><link>https://ikorihn.github.io/digitalgarden/note/zsh/</link><pubDate>Fri, 05 May 2023 20:31:00 +0900</pubDate><guid>https://ikorihn.github.io/digitalgarden/note/zsh/</guid><description/></item><item><title>aws cli filterとqueryのメモ</title><link>https://ikorihn.github.io/digitalgarden/note/aws-cli-filter%E3%81%A8query%E3%81%AE%E3%83%A1%E3%83%A2/</link><pubDate>Fri, 05 May 2023 20:30:00 +0900</pubDate><guid>https://ikorihn.github.io/digitalgarden/note/aws-cli-filter%E3%81%A8query%E3%81%AE%E3%83%A1%E3%83%A2/</guid><description>autoscaling describe-auto-scaling-groups https://docs.aws.amazon.com/ja_jp/autoscaling/ec2/userguide/ec2-auto-scaling-tagging.html#use-tag-filters-aws-cli https://docs.aws.amazon.com/cli/latest/reference/autoscaling/describe-auto-scaling-groups.html こちらのような形式でfilterできる。 ワイルドカードが使えないので注意(1敗) 1 --filtersName=tag:`environment`,Values=`production` 1 2 3 4 5 6 7 8 9 10 11 12 13 # ワイルドカード指定は</description></item><item><title>AWS LambdaでGoのWebサーバーを動作させる</title><link>https://ikorihn.github.io/digitalgarden/note/AWS-Lambda%E3%81%A7Go%E3%81%AEWeb%E3%82%B5%E3%83%BC%E3%83%90%E3%83%BC%E3%82%92%E5%8B%95%E4%BD%9C%E3%81%95%E3%81%9B%E3%82%8B/</link><pubDate>Fri, 05 May 2023 20:30:00 +0900</pubDate><guid>https://ikorihn.github.io/digitalgarden/note/AWS-Lambda%E3%81%A7Go%E3%81%AEWeb%E3%82%B5%E3%83%BC%E3%83%90%E3%83%BC%E3%82%92%E5%8B%95%E4%BD%9C%E3%81%95%E3%81%9B%E3%82%8B/</guid><description/></item><item><title>Git</title><link>https://ikorihn.github.io/digitalgarden/note/Git/</link><pubDate>Fri, 05 May 2023 20:29:00 +0900</pubDate><guid>https://ikorihn.github.io/digitalgarden/note/Git/</guid><description/></item><item><title>Jenkins ビルドの最終更新時刻を確認する</title><link>https://ikorihn.github.io/digitalgarden/note/Jenkins-%E3%83%93%E3%83%AB%E3%83%89%E3%81%AE%E6%9C%80%E7%B5%82%E6%9B%B4%E6%96%B0%E6%99%82%E5%88%BB%E3%82%92%E7%A2%BA%E8%AA%8D%E3%81%99%E3%82%8B/</link><pubDate>Fri, 05 May 2023 20:29:00 +0900</pubDate><guid>https://ikorihn.github.io/digitalgarden/note/Jenkins-%E3%83%93%E3%83%AB%E3%83%89%E3%81%AE%E6%9C%80%E7%B5%82%E6%9B%B4%E6%96%B0%E6%99%82%E5%88%BB%E3%82%92%E7%A2%BA%E8%AA%8D%E3%81%99%E3%82%8B/</guid><description>Jenkins でビルドの最終更新時刻を確認する 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 import java.time.ZoneOffset import java.time.Instant import java.time.temporal.ChronoUnit def builds = Jenkins.get().getAllItems(Job.class).collectMany { job -&amp;gt; job.builds }.findAll { build -&amp;gt; build.building } println builds.size() builds.each { println &amp;#34;${it.url} hasntStartedYet: ${it.hasntStartedYet()} , isInProgress: ${it.isInProgress()} , isLogUpdated: ${it.isLogUpdated()} , getTime: ${it.time}</description></item><item><title>Nuxt.js</title><link>https://ikorihn.github.io/digitalgarden/note/Nuxt.js/</link><pubDate>Fri, 05 May 2023 20:29:00 +0900</pubDate><guid>https://ikorihn.github.io/digitalgarden/note/Nuxt.js/</guid><description/></item><item><title>imgタグで画像が404のときに代替画像を表示する</title><link>https://ikorihn.github.io/digitalgarden/note/img%E3%82%BF%E3%82%B0%E3%81%A7%E7%94%BB%E5%83%8F%E3%81%8C404%E3%81%AE%E3%81%A8%E3%81%8D%E3%81%AB%E4%BB%A3%E6%9B%BF%E7%94%BB%E5%83%8F%E3%82%92%E8%A1%A8%E7%A4%BA%E3%81%99%E3%82%8B/</link><pubDate>Fri, 05 May 2023 20:28:00 +0900</pubDate><guid>https://ikorihn.github.io/digitalgarden/note/img%E3%82%BF%E3%82%B0%E3%81%A7%E7%94%BB%E5%83%8F%E3%81%8C404%E3%81%AE%E3%81%A8%E3%81%8D%E3%81%AB%E4%BB%A3%E6%9B%BF%E7%94%BB%E5%83%8F%E3%82%92%E8%A1%A8%E7%A4%BA%E3%81%99%E3%82%8B/</guid><description>HTML img タグで画像が 404 エラーのときに代替画像を表示する方法 - to-me-mo-rrow - 未来の自分に残すメモ - TL;DR onerror=&amp;quot;this.src = 'alt.png'; this.removeAttribute('onerror')&amp;quot; を指定 エラー時には代替画像を読み込んで、oner</description></item><item><title>CORS</title><link>https://ikorihn.github.io/digitalgarden/note/CORS/</link><pubDate>Fri, 05 May 2023 20:27:00 +0900</pubDate><guid>https://ikorihn.github.io/digitalgarden/note/CORS/</guid><description>CORSの仕様はなぜ複雑なのか Same-origin policy (SOP)</description></item><item><title>AmazonSNS</title><link>https://ikorihn.github.io/digitalgarden/note/AmazonSNS/</link><pubDate>Fri, 05 May 2023 20:26:00 +0900</pubDate><guid>https://ikorihn.github.io/digitalgarden/note/AmazonSNS/</guid><description/></item><item><title>NeovimとVSCode-Neovimで使用するプラグインや設定を分ける</title><link>https://ikorihn.github.io/digitalgarden/blog/Neovim%E3%81%A8VSCode-Neovim%E3%81%A7%E4%BD%BF%E7%94%A8%E3%81%99%E3%82%8B%E3%83%97%E3%83%A9%E3%82%B0%E3%82%A4%E3%83%B3%E3%82%84%E8%A8%AD%E5%AE%9A%E3%82%92%E5%88%86%E3%81%91%E3%82%8B/</link><pubDate>Fri, 05 May 2023 20:26:00 +0900</pubDate><guid>https://ikorihn.github.io/digitalgarden/blog/Neovim%E3%81%A8VSCode-Neovim%E3%81%A7%E4%BD%BF%E7%94%A8%E3%81%99%E3%82%8B%E3%83%97%E3%83%A9%E3%82%B0%E3%82%A4%E3%83%B3%E3%82%84%E8%A8%AD%E5%AE%9A%E3%82%92%E5%88%86%E3%81%91%E3%82%8B/</guid><description>https://zenn.dev/r57ty7/articles/accd3014e22366 に投稿した内容と同じです。 これは Vim駅伝 5/15 の記事です。 はじめに 私は普段 Neovim をメインにしていますが、 他の人と環境を合わせたいときなど VS Code もと</description></item><item><title>NeovimとVSCodeで共存する</title><link>https://ikorihn.github.io/digitalgarden/note/Neovim%E3%81%A8VSCode%E3%81%A7%E5%85%B1%E5%AD%98%E3%81%99%E3%82%8B/</link><pubDate>Fri, 05 May 2023 20:26:00 +0900</pubDate><guid>https://ikorihn.github.io/digitalgarden/note/Neovim%E3%81%A8VSCode%E3%81%A7%E5%85%B1%E5%AD%98%E3%81%99%E3%82%8B/</guid><description/></item><item><title>S3</title><link>https://ikorihn.github.io/digitalgarden/note/S3/</link><pubDate>Fri, 05 May 2023 20:26:00 +0900</pubDate><guid>https://ikorihn.github.io/digitalgarden/note/S3/</guid><description/></item><item><title>SpringFramework</title><link>https://ikorihn.github.io/digitalgarden/note/SpringFramework/</link><pubDate>Fri, 05 May 2023 20:26:00 +0900</pubDate><guid>https://ikorihn.github.io/digitalgarden/note/SpringFramework/</guid><description/></item><item><title>EC2のuserdata の内容を確認する</title><link>https://ikorihn.github.io/digitalgarden/note/EC2%E3%81%AEuserdata-%E3%81%AE%E5%86%85%E5%AE%B9%E3%82%92%E7%A2%BA%E8%AA%8D%E3%81%99%E3%82%8B/</link><pubDate>Fri, 05 May 2023 20:25:00 +0900</pubDate><guid>https://ikorihn.github.io/digitalgarden/note/EC2%E3%81%AEuserdata-%E3%81%AE%E5%86%85%E5%AE%B9%E3%82%92%E7%A2%BA%E8%AA%8D%E3%81%99%E3%82%8B/</guid><description>1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 $ cd /var/lib/cloud/instances/i-&amp;lt;インスタンスID&amp;gt;/ $ ls -al total 68 drwxr-xr-x</description></item><item><title>Rust</title><link>https://ikorihn.github.io/digitalgarden/note/Rust/</link><pubDate>Fri, 05 May 2023 20:25:00 +0900</pubDate><guid>https://ikorihn.github.io/digitalgarden/note/Rust/</guid><description/></item><item><title>ssh</title><link>https://ikorihn.github.io/digitalgarden/note/ssh/</link><pubDate>Fri, 05 May 2023 20:25:00 +0900</pubDate><guid>https://ikorihn.github.io/digitalgarden/note/ssh/</guid><description/></item><item><title>kubernetes EBSをアタッチする</title><link>https://ikorihn.github.io/digitalgarden/note/kubernetes-EBS%E3%82%92%E3%82%A2%E3%82%BF%E3%83%83%E3%83%81%E3%81%99%E3%82%8B/</link><pubDate>Fri, 05 May 2023 20:24:00 +0900</pubDate><guid>https://ikorihn.github.io/digitalgarden/note/kubernetes-EBS%E3%82%92%E3%82%A2%E3%82%BF%E3%83%83%E3%83%81%E3%81%99%E3%82%8B/</guid><description>CSI driverをインストールする CSI &amp;hellip; Common Storage Interface k8sが外部のストレージを使うときの規格</description></item><item><title>Python</title><link>https://ikorihn.github.io/digitalgarden/note/Python/</link><pubDate>Fri, 05 May 2023 20:24:00 +0900</pubDate><guid>https://ikorihn.github.io/digitalgarden/note/Python/</guid><description/></item><item><title>Dockerfile内で条件分岐する</title><link>https://ikorihn.github.io/digitalgarden/note/Dockerfile%E5%86%85%E3%81%A7%E6%9D%A1%E4%BB%B6%E5%88%86%E5%B2%90%E3%81%99%E3%82%8B/</link><pubDate>Fri, 05 May 2023 20:23:00 +0900</pubDate><guid>https://ikorihn.github.io/digitalgarden/note/Dockerfile%E5%86%85%E3%81%A7%E6%9D%A1%E4%BB%B6%E5%88%86%E5%B2%90%E3%81%99%E3%82%8B/</guid><description>docker - Dockerfile if else condition with external arguments - Stack Overflow Dockerfile 内で条件に応じて処理を変えたかったので試行錯誤したメモ - ようへいの日々精進XP 前提として、Dockerfile内で</description></item><item><title>cargo</title><link>https://ikorihn.github.io/digitalgarden/note/cargo/</link><pubDate>Fri, 05 May 2023 20:22:00 +0900</pubDate><guid>https://ikorihn.github.io/digitalgarden/note/cargo/</guid><description/></item><item><title>Google Apps Script</title><link>https://ikorihn.github.io/digitalgarden/note/Google-Apps-Script/</link><pubDate>Fri, 05 May 2023 20:21:00 +0900</pubDate><guid>https://ikorihn.github.io/digitalgarden/note/Google-Apps-Script/</guid><description/></item><item><title>kibana 数値でフィルターする</title><link>https://ikorihn.github.io/digitalgarden/note/kibana-%E6%95%B0%E5%80%A4%E3%81%A7%E3%83%95%E3%82%A3%E3%83%AB%E3%82%BF%E3%83%BC%E3%81%99%E3%82%8B/</link><pubDate>Fri, 05 May 2023 20:20:00 +0900</pubDate><guid>https://ikorihn.github.io/digitalgarden/note/kibana-%E6%95%B0%E5%80%A4%E3%81%A7%E3%83%95%E3%82%A3%E3%83%AB%E3%82%BF%E3%83%BC%E3%81%99%E3%82%8B/</guid><description>https://stackoverflow.com/questions/40241904/kibana-filter-on-count-greater-than-or-equal-to-x X AxisのJSON inputに {&amp;quot;min_doc_count&amp;quot;: 1000} を指定する</description></item><item><title>Prometheus、Grafanaメモ</title><link>https://ikorihn.github.io/digitalgarden/note/PrometheusGrafana%E3%83%A1%E3%83%A2/</link><pubDate>Fri, 05 May 2023 20:20:00 +0900</pubDate><guid>https://ikorihn.github.io/digitalgarden/note/PrometheusGrafana%E3%83%A1%E3%83%A2/</guid><description>count_over_time time rangeの間、intervalごとにメトリクスを収集した件数の合計 count_over_time((kube_pod_status_phase{phase=&amp;quot;Pending&amp;quot;} &amp;gt; 0)[15m:1m]) 15分の間に1分ごとにpendingの件数をカウントして合計す</description></item><item><title>Rustでbitbucketのpermission操作するcliを作ってみる</title><link>https://ikorihn.github.io/digitalgarden/note/Rust%E3%81%A7bitbucket%E3%81%AEpermission%E6%93%8D%E4%BD%9C%E3%81%99%E3%82%8Bcli%E3%82%92%E4%BD%9C%E3%81%A3%E3%81%A6%E3%81%BF%E3%82%8B/</link><pubDate>Fri, 05 May 2023 20:20:00 +0900</pubDate><guid>https://ikorihn.github.io/digitalgarden/note/Rust%E3%81%A7bitbucket%E3%81%AEpermission%E6%93%8D%E4%BD%9C%E3%81%99%E3%82%8Bcli%E3%82%92%E4%BD%9C%E3%81%A3%E3%81%A6%E3%81%BF%E3%82%8B/</guid><description>RustでCLIを作る の続き Rust勉強がてらCLIで操作できるようにしてみる https://github.com/clap-rs/clap を使う List explicit group permissions for a repository のようにリポジトリのuser, group</description></item><item><title>localstack</title><link>https://ikorihn.github.io/digitalgarden/note/localstack/</link><pubDate>Fri, 05 May 2023 20:19:00 +0900</pubDate><guid>https://ikorihn.github.io/digitalgarden/note/localstack/</guid><description>https://github.com/localstack/localstack https://localstack.cloud/ localstack は、クラウドアプリケーションを開発するためのmockを提供するツール。 ローカルにAWSと同様の機能とAPIを提供する環境を構築する。 最</description></item><item><title>Rancher Desktop</title><link>https://ikorihn.github.io/digitalgarden/note/Rancher-Desktop/</link><pubDate>Fri, 05 May 2023 20:19:00 +0900</pubDate><guid>https://ikorihn.github.io/digitalgarden/note/Rancher-Desktop/</guid><description>Docker Desktop 代替候補 lima でLinux Virtual Machine が動いていて、VM上でコンテナランタイム(dockerd、containerd) を動かしている Kubernet</description></item><item><title>chromeのファイル選択ダイアログで隠しファイルを表示</title><link>https://ikorihn.github.io/digitalgarden/note/chrome%E3%81%AE%E3%83%95%E3%82%A1%E3%82%A4%E3%83%AB%E9%81%B8%E6%8A%9E%E3%83%80%E3%82%A4%E3%82%A2%E3%83%AD%E3%82%B0%E3%81%A7%E9%9A%A0%E3%81%97%E3%83%95%E3%82%A1%E3%82%A4%E3%83%AB%E3%82%92%E8%A1%A8%E7%A4%BA/</link><pubDate>Fri, 05 May 2023 20:18:00 +0900</pubDate><guid>https://ikorihn.github.io/digitalgarden/note/chrome%E3%81%AE%E3%83%95%E3%82%A1%E3%82%A4%E3%83%AB%E9%81%B8%E6%8A%9E%E3%83%80%E3%82%A4%E3%82%A2%E3%83%AD%E3%82%B0%E3%81%A7%E9%9A%A0%E3%81%97%E3%83%95%E3%82%A1%E3%82%A4%E3%83%AB%E3%82%92%E8%A1%A8%E7%A4%BA/</guid><description>https://apple.stackexchange.com/questions/186376/hotkey-to-show-hidden-files-and-folders-in-file-open-dialog/186388 cmd + shift + . でトグルできる</description></item><item><title>Termuxセットアップ2022版</title><link>https://ikorihn.github.io/digitalgarden/note/Termux%E3%82%BB%E3%83%83%E3%83%88%E3%82%A2%E3%83%83%E3%83%972022%E7%89%88/</link><pubDate>Fri, 05 May 2023 20:18:00 +0900</pubDate><guid>https://ikorihn.github.io/digitalgarden/note/Termux%E3%82%BB%E3%83%83%E3%83%88%E3%82%A2%E3%83%83%E3%83%972022%E7%89%88/</guid><description>F-Droidからインストールする https://play.google.com/store/apps/details?id=com.termux NOTE: Updates over Google Play is currently halted due to technical reasons. In the meantime, see https://github.com/termux/termux-app#installation for alternative installation sources. にある通りGoogle Playからのインストールは推奨されてい</description></item><item><title>mavenでspringのライブラリダウンロード時にエラー</title><link>https://ikorihn.github.io/digitalgarden/note/maven%E3%81%A7spring%E3%81%AE%E3%83%A9%E3%82%A4%E3%83%96%E3%83%A9%E3%83%AA%E3%83%80%E3%82%A6%E3%83%B3%E3%83%AD%E3%83%BC%E3%83%89%E6%99%82%E3%81%AB%E3%82%A8%E3%83%A9%E3%83%BC/</link><pubDate>Fri, 05 May 2023 19:07:00 +0900</pubDate><guid>https://ikorihn.github.io/digitalgarden/note/maven%E3%81%A7spring%E3%81%AE%E3%83%A9%E3%82%A4%E3%83%96%E3%83%A9%E3%83%AA%E3%83%80%E3%82%A6%E3%83%B3%E3%83%AD%E3%83%BC%E3%83%89%E6%99%82%E3%81%AB%E3%82%A8%E3%83%A9%E3%83%BC/</guid><description>spring-libs-release からダウンロードしようとするも、エラーになる https://repo.spring.io/libs-release からダウンロードしなきゃならないところ、 http://repo.springsource.org/libs-release/ から取得しようとしてタイムアウトエラーになっている</description></item><item><title>ssh host key verificationに失敗する</title><link>https://ikorihn.github.io/digitalgarden/note/ssh-host-key-verification%E3%81%AB%E5%A4%B1%E6%95%97%E3%81%99%E3%82%8B/</link><pubDate>Fri, 05 May 2023 19:07:00 +0900</pubDate><guid>https://ikorihn.github.io/digitalgarden/note/ssh-host-key-verification%E3%81%AB%E5%A4%B1%E6%95%97%E3%81%99%E3%82%8B/</guid><description>エンジニアなら知らないとヤバいSSHの基礎 - もちゅろぐ ~/.ssh/known_hosts には接続経験のあるホストの公開鍵を保存してある このファイルに書いてある公開鍵に紐づく</description></item><item><title>go カスタムエラー</title><link>https://ikorihn.github.io/digitalgarden/note/go-%E3%82%AB%E3%82%B9%E3%82%BF%E3%83%A0%E3%82%A8%E3%83%A9%E3%83%BC/</link><pubDate>Fri, 05 May 2023 19:06:00 +0900</pubDate><guid>https://ikorihn.github.io/digitalgarden/note/go-%E3%82%AB%E3%82%B9%E3%82%BF%E3%83%A0%E3%82%A8%E3%83%A9%E3%83%BC/</guid><description>Go でカスタムエラーを作る aws-sdk-go-v2 でのエラーハンドリング https://github.com/aws/aws-sdk-go-v2/issues/1110 1 2 3 4 5 6 7 if err != nil { var myerr *MyError if errors.As(err, &amp;amp;myerr) { return nil, ErrHoge } return nil, err }</description></item><item><title>Groovy</title><link>https://ikorihn.github.io/digitalgarden/note/Groovy/</link><pubDate>Fri, 05 May 2023 19:06:00 +0900</pubDate><guid>https://ikorihn.github.io/digitalgarden/note/Groovy/</guid><description>operator overloading The Apache Groovy programming language - Operators + - などのoperatorを再定義することができる。 https://github.com/jenkinsci/job-dsl-plugin/blob/master/job-dsl-core/src/main/groovy/javaposse/jobdsl/dsl/NodeEnhancement.groovy 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 /** * Add div and leftShift operators to Node. * * div - Will return the first</description></item><item><title>YAML</title><link>https://ikorihn.github.io/digitalgarden/note/YAML/</link><pubDate>Fri, 05 May 2023 19:06:00 +0900</pubDate><guid>https://ikorihn.github.io/digitalgarden/note/YAML/</guid><description/></item><item><title>True color</title><link>https://ikorihn.github.io/digitalgarden/note/True-color/</link><pubDate>Fri, 05 May 2023 19:05:00 +0900</pubDate><guid>https://ikorihn.github.io/digitalgarden/note/True-color/</guid><description/></item><item><title>Obsidian Command Lineからファイルを開く</title><link>https://ikorihn.github.io/digitalgarden/note/Obsidian-Command-Line%E3%81%8B%E3%82%89%E3%83%95%E3%82%A1%E3%82%A4%E3%83%AB%E3%82%92%E9%96%8B%E3%81%8F/</link><pubDate>Fri, 05 May 2023 18:54:00 +0900</pubDate><guid>https://ikorihn.github.io/digitalgarden/note/Obsidian-Command-Line%E3%81%8B%E3%82%89%E3%83%95%E3%82%A1%E3%82%A4%E3%83%AB%E3%82%92%E9%96%8B%E3%81%8F/</guid><description>Command Line Interface to open files/folders in Obsidian from the terminal - Feature requests - Obsidian Forum URL Scheme が実装されたため、Macでは以下のようにして開くことができる。 1 2 3 VAULT=myvault FILE=&amp;#39;my%20file&amp;#39; obsidian=&amp;#34;obsidian://open?vault=${VAULT}&amp;amp;file=${FILE}&amp;#34;</description></item><item><title>Obsidian WikilinkをMarkdown linkに変更した</title><link>https://ikorihn.github.io/digitalgarden/note/Obsidian-Wikilink%E3%82%92Markdown-link%E3%81%AB%E5%A4%89%E6%9B%B4%E3%81%97%E3%81%9F/</link><pubDate>Fri, 05 May 2023 17:44:00 +0900</pubDate><guid>https://ikorihn.github.io/digitalgarden/note/Obsidian-Wikilink%E3%82%92Markdown-link%E3%81%AB%E5%A4%89%E6%9B%B4%E3%81%97%E3%81%9F/</guid><description>Obsidianを公開する にあたって、Wikilinkのままだとうまくリンクが貼られなかったりして不都合だったので、通常のmarkdown l</description></item><item><title>Hugo</title><link>https://ikorihn.github.io/digitalgarden/note/Hugo/</link><pubDate>Fri, 05 May 2023 10:08:00 +0900</pubDate><guid>https://ikorihn.github.io/digitalgarden/note/Hugo/</guid><description/></item><item><title>Hugo relative link</title><link>https://ikorihn.github.io/digitalgarden/note/Hugo-relative-link/</link><pubDate>Fri, 05 May 2023 10:04:00 +0900</pubDate><guid>https://ikorihn.github.io/digitalgarden/note/Hugo-relative-link/</guid><description>Relative linking in Hugo - Nick&amp;rsquo;s Blog and Digital Garden Hugo では相対パスでのリンクが現在サポートされていない。 かわりに、 ref と relerf を使って他のページヘのリンクを書くことができる Shortcodes | Hugo</description></item><item><title>OpenAPIでGoとTypeScriptのコード生成</title><link>https://ikorihn.github.io/digitalgarden/note/OpenAPI%E3%81%A7Go%E3%81%A8TypeScript%E3%81%AE%E3%82%B3%E3%83%BC%E3%83%89%E7%94%9F%E6%88%90/</link><pubDate>Thu, 04 May 2023 23:09:00 +0900</pubDate><guid>https://ikorihn.github.io/digitalgarden/note/OpenAPI%E3%81%A7Go%E3%81%A8TypeScript%E3%81%AE%E3%82%B3%E3%83%BC%E3%83%89%E7%94%9F%E6%88%90/</guid><description>開発言語・環境 バックエンド Go 1.18 aws-lambda-go v1.32.0 AWS SAM (API Gateway + Lambda) oapi-codegen v1.11.0 フロントエンド TypeScript 4.6 Nuxt.js 2.16 axios v0.21.4 OpenAPI Generator 5.4.0 ※ コードを使った説明が多く出てきますが、各言語やライブラリ</description></item><item><title>Kustomize</title><link>https://ikorihn.github.io/digitalgarden/note/Kustomize/</link><pubDate>Thu, 04 May 2023 22:36:00 +0900</pubDate><guid>https://ikorihn.github.io/digitalgarden/note/Kustomize/</guid><description>https://kustomize.io 複数のKubernetesクラスターを管理する場合に、マニフェストファイルを管理しやすくするツール 開発環境と本番環境など、各環境ごとにマニ</description></item><item><title>Go</title><link>https://ikorihn.github.io/digitalgarden/note/Go/</link><pubDate>Thu, 04 May 2023 22:28:00 +0900</pubDate><guid>https://ikorihn.github.io/digitalgarden/note/Go/</guid><description>Googleが開発したオープンソースのプログラミング言語 CやC++などの言語からの影響を受けており、静的型付け、メモリ安全性、ガベージコレク</description></item><item><title>Make</title><link>https://ikorihn.github.io/digitalgarden/note/Make/</link><pubDate>Thu, 04 May 2023 22:20:00 +0900</pubDate><guid>https://ikorihn.github.io/digitalgarden/note/Make/</guid><description>プログラムを実行可能にするためにソースコードをコンパイルして、外部のライブラリなどをリンクして一つの実行ファイルにする作業など、複数個のコマ</description></item><item><title>React</title><link>https://ikorihn.github.io/digitalgarden/note/React/</link><pubDate>Thu, 04 May 2023 22:19:00 +0900</pubDate><guid>https://ikorihn.github.io/digitalgarden/note/React/</guid><description>Reactは、Facebookが開発したJavaScriptのライブラリで、WebアプリケーションやモバイルアプリケーションのUIを構築する</description></item><item><title>Jenkinsfile</title><link>https://ikorihn.github.io/digitalgarden/note/Jenkinsfile/</link><pubDate>Thu, 04 May 2023 17:58:00 +0900</pubDate><guid>https://ikorihn.github.io/digitalgarden/note/Jenkinsfile/</guid><description>Jenkins Pipeline を書いたファイル</description></item><item><title>SAM</title><link>https://ikorihn.github.io/digitalgarden/note/SAM/</link><pubDate>Thu, 04 May 2023 17:58:00 +0900</pubDate><guid>https://ikorihn.github.io/digitalgarden/note/SAM/</guid><description>Serverless Application Model Lambdaにデプロイするのを簡単にするツール</description></item><item><title>Elastic Container Service</title><link>https://ikorihn.github.io/digitalgarden/note/Elastic-Container-Service/</link><pubDate>Thu, 04 May 2023 17:46:00 +0900</pubDate><guid>https://ikorihn.github.io/digitalgarden/note/Elastic-Container-Service/</guid><description>https://aws.amazon.com/jp/ecs/ フルマネージドコンテナオーケストレーションサービスであり、コンテナ化されたアプリケーションを簡単にデプロイ、管理、およびスケーリングできま</description></item><item><title>ECSのtomcatを手で差し替える</title><link>https://ikorihn.github.io/digitalgarden/note/ECS%E3%81%AEtomcat%E3%82%92%E6%89%8B%E3%81%A7%E5%B7%AE%E3%81%97%E6%9B%BF%E3%81%88%E3%82%8B/</link><pubDate>Thu, 04 May 2023 17:45:00 +0900</pubDate><guid>https://ikorihn.github.io/digitalgarden/note/ECS%E3%81%AEtomcat%E3%82%92%E6%89%8B%E3%81%A7%E5%B7%AE%E3%81%97%E6%9B%BF%E3%81%88%E3%82%8B/</guid><description>やりたいこと Elastic Container Service に対して、検証環境のリリースの際に通常通りtomcatコンテナビルド〜Rolling updateすると5分くらいはかかって</description></item><item><title>yq</title><link>https://ikorihn.github.io/digitalgarden/note/yq/</link><pubDate>Thu, 04 May 2023 17:44:00 +0900</pubDate><guid>https://ikorihn.github.io/digitalgarden/note/yq/</guid><description/></item><item><title>Jenkins Pipeline</title><link>https://ikorihn.github.io/digitalgarden/note/Jenkins-Pipeline/</link><pubDate>Thu, 04 May 2023 17:32:00 +0900</pubDate><guid>https://ikorihn.github.io/digitalgarden/note/Jenkins-Pipeline/</guid><description>note/Jenkins のジョブ設定をPipelineというDSLで定義できる</description></item><item><title>Jenkins</title><link>https://ikorihn.github.io/digitalgarden/note/jenkins/</link><pubDate>Thu, 04 May 2023 17:28:00 +0900</pubDate><guid>https://ikorihn.github.io/digitalgarden/note/jenkins/</guid><description>Java製のCI/CDツール</description></item><item><title>kubectl</title><link>https://ikorihn.github.io/digitalgarden/note/kubectl/</link><pubDate>Thu, 04 May 2023 17:19:00 +0900</pubDate><guid>https://ikorihn.github.io/digitalgarden/note/kubectl/</guid><description>Kubernetes 向けのコマンドラインツール</description></item><item><title>Svelte</title><link>https://ikorihn.github.io/digitalgarden/note/Svelte/</link><pubDate>Thu, 04 May 2023 17:05:51 +0900</pubDate><guid>https://ikorihn.github.io/digitalgarden/note/Svelte/</guid><description>Svelteは、JavaScriptのフレームワークの1つ。 ReactやVueなどフレームワークと同様、開発者がUIコンポーネントを作成し、</description></item><item><title>clasp</title><link>https://ikorihn.github.io/digitalgarden/note/clasp/</link><pubDate>Thu, 04 May 2023 17:01:24 +0900</pubDate><guid>https://ikorihn.github.io/digitalgarden/note/clasp/</guid><description>https://github.com/google/clasp Googleが提供する GAS をローカルで開発するためのコマンドラインツール。 claspを使用することで、Google Apps Scriptをローカル環</description></item><item><title>Git remoteにブランチが存在するかどうかをチェックする</title><link>https://ikorihn.github.io/digitalgarden/note/Git-remote%E3%81%AB%E3%83%96%E3%83%A9%E3%83%B3%E3%83%81%E3%81%8C%E5%AD%98%E5%9C%A8%E3%81%99%E3%82%8B%E3%81%8B%E3%81%A9%E3%81%86%E3%81%8B%E3%82%92%E3%83%81%E3%82%A7%E3%83%83%E3%82%AF%E3%81%99%E3%82%8B/</link><pubDate>Mon, 01 May 2023 19:42:00 +0900</pubDate><guid>https://ikorihn.github.io/digitalgarden/note/Git-remote%E3%81%AB%E3%83%96%E3%83%A9%E3%83%B3%E3%83%81%E3%81%8C%E5%AD%98%E5%9C%A8%E3%81%99%E3%82%8B%E3%81%8B%E3%81%A9%E3%81%86%E3%81%8B%E3%82%92%E3%83%81%E3%82%A7%E3%83%83%E3%82%AF%E3%81%99%E3%82%8B/</guid><description>Git でremoteにブランチが存在するかをチェックするには git ls-remote を使う 1 2 3 4 5 6 7 8 9 10 11 REMOTE_NAME=origin # URLを直接指定してもいい # REMOTE_NAME=https://github.com/xxx/yyy BRANCH_NAME=master if git ls-remote --exit-code $REMOTE_NAME $BRANCH_NAME &amp;gt;/dev/null 2&amp;gt;&amp;amp;1;</description></item><item><title>Git でpullしようとしたらfatal cannot lock ref のエラーがでる</title><link>https://ikorihn.github.io/digitalgarden/note/Git-%E3%81%A7pull%E3%81%97%E3%82%88%E3%81%86%E3%81%A8%E3%81%97%E3%81%9F%E3%82%89fatal-cannot-lock-ref-%E3%81%AE%E3%82%A8%E3%83%A9%E3%83%BC%E3%81%8C%E3%81%A7%E3%82%8B/</link><pubDate>Mon, 01 May 2023 17:17:00 +0900</pubDate><guid>https://ikorihn.github.io/digitalgarden/note/Git-%E3%81%A7pull%E3%81%97%E3%82%88%E3%81%86%E3%81%A8%E3%81%97%E3%81%9F%E3%82%89fatal-cannot-lock-ref-%E3%81%AE%E3%82%A8%E3%83%A9%E3%83%BC%E3%81%8C%E3%81%A7%E3%82%8B/</guid><description>Jenkinsのgit fetchでCannot lock refエラーが出た時の対応 | by eiryu | Medium Gitでブランチを作ろうとしたら「fatal: cannot lock ref &amp;h</description></item><item><title>Jenkins declarative pipelineでActive Choice Parameterを使う</title><link>https://ikorihn.github.io/digitalgarden/note/Jenkins-declarative-pipeline%E3%81%A7Active-Choice-Parameter%E3%82%92%E4%BD%BF%E3%81%86/</link><pubDate>Mon, 01 May 2023 16:22:00 +0900</pubDate><guid>https://ikorihn.github.io/digitalgarden/note/Jenkins-declarative-pipeline%E3%81%A7Active-Choice-Parameter%E3%82%92%E4%BD%BF%E3%81%86/</guid><description>Active Choices | Jenkins plugin をつかうと、パラメータを動的に設定できるようになる。 Pipeline Syntaxの画面でparametersブロックを作成できるが、そこに出てこ</description></item><item><title>XPath</title><link>https://ikorihn.github.io/digitalgarden/note/XPath/</link><pubDate>Mon, 01 May 2023 00:02:00 +0900</pubDate><guid>https://ikorihn.github.io/digitalgarden/note/XPath/</guid><description>XMLドキュメント内の特定の要素や属性にアクセスするためのパスを表す言語。 XPathは、XMLドキュメントのツリー構造を使用して、XML要素</description></item><item><title>CloudFront</title><link>https://ikorihn.github.io/digitalgarden/note/CloudFront/</link><pubDate>Mon, 01 May 2023 00:01:00 +0900</pubDate><guid>https://ikorihn.github.io/digitalgarden/note/CloudFront/</guid><description/></item><item><title>LamdbaEdge</title><link>https://ikorihn.github.io/digitalgarden/note/LamdbaEdge/</link><pubDate>Mon, 01 May 2023 00:01:00 +0900</pubDate><guid>https://ikorihn.github.io/digitalgarden/note/LamdbaEdge/</guid><description/></item><item><title>Step Functions</title><link>https://ikorihn.github.io/digitalgarden/note/Step-Functions/</link><pubDate>Mon, 01 May 2023 00:00:00 +0900</pubDate><guid>https://ikorihn.github.io/digitalgarden/note/Step-Functions/</guid><description/></item><item><title>Termux</title><link>https://ikorihn.github.io/digitalgarden/note/Termux/</link><pubDate>Fri, 28 Apr 2023 09:29:46 +0900</pubDate><guid>https://ikorihn.github.io/digitalgarden/note/Termux/</guid><description>Android上でターミナルを起動するアプリ</description></item><item><title>TypeScript</title><link>https://ikorihn.github.io/digitalgarden/note/TypeScript/</link><pubDate>Fri, 28 Apr 2023 09:27:16 +0900</pubDate><guid>https://ikorihn.github.io/digitalgarden/note/TypeScript/</guid><description>Microsoftが開発した、JavaScriptに型の仕組みを追加したプログラミング言語</description></item><item><title>JavaScript xpathで要素を取得する</title><link>https://ikorihn.github.io/digitalgarden/note/JavaScript-xpath%E3%81%A7%E8%A6%81%E7%B4%A0%E3%82%92%E5%8F%96%E5%BE%97%E3%81%99%E3%82%8B/</link><pubDate>Thu, 27 Apr 2023 12:21:00 +0900</pubDate><guid>https://ikorihn.github.io/digitalgarden/note/JavaScript-xpath%E3%81%A7%E8%A6%81%E7%B4%A0%E3%82%92%E5%8F%96%E5%BE%97%E3%81%99%E3%82%8B/</guid><description>1 2 3 4 5 6 7 8 9 10 11 function getElementByXpath(path) { return document.evaluate( path, document, null, XPathResult.FIRST_ORDERED_NODE_TYPE, null ).singleNodeValue; } getElementByXpath(&amp;#39;(//div[@class=&amp;#34;font-bold btn&amp;#34;])[1]&amp;#39;)</description></item><item><title>OPA ポリシーをテストする</title><link>https://ikorihn.github.io/digitalgarden/note/OPA-%E3%83%9D%E3%83%AA%E3%82%B7%E3%83%BC%E3%82%92%E3%83%86%E3%82%B9%E3%83%88%E3%81%99%E3%82%8B/</link><pubDate>Thu, 27 Apr 2023 09:30:00 +0900</pubDate><guid>https://ikorihn.github.io/digitalgarden/note/OPA-%E3%83%9D%E3%83%AA%E3%82%B7%E3%83%BC%E3%82%92%E3%83%86%E3%82%B9%E3%83%88%E3%81%99%E3%82%8B/</guid><description>Open Policy Agent OPA でポリシーをテストする https://www.openpolicyagent.org/docs/latest/policy-testing/#getting-started example.go 1 2 3 4 5 package mypolicy allow { input.name == &amp;#34;Alice&amp;#34; } *_test.rego という名前で作り、テストケースを test_* で作る example_test.go 1 2 3 4 5 6 7 8 9 package mypolicy test_allow_success { allow with input as {&amp;#34;name&amp;#34;:</description></item><item><title>VisualStudio Code</title><link>https://ikorihn.github.io/digitalgarden/note/Visual-Studio-Code/</link><pubDate>Wed, 26 Apr 2023 23:45:00 +0900</pubDate><guid>https://ikorihn.github.io/digitalgarden/note/Visual-Studio-Code/</guid><description>Visual Studio Code - Code Editing. Redefined Microsoftが提供する開発用エディタ。2015年に最初のリリースがされた。 どのOSでも利用できる、無償、使いやすさ、設定</description></item><item><title>VisualStudio Code</title><link>https://ikorihn.github.io/digitalgarden/note/VisualStudio-Code/</link><pubDate>Wed, 26 Apr 2023 23:45:00 +0900</pubDate><guid>https://ikorihn.github.io/digitalgarden/note/VisualStudio-Code/</guid><description/></item><item><title>Noto Sans JP</title><link>https://ikorihn.github.io/digitalgarden/note/Noto-Sans-JP/</link><pubDate>Wed, 26 Apr 2023 23:41:00 +0900</pubDate><guid>https://ikorihn.github.io/digitalgarden/note/Noto-Sans-JP/</guid><description/></item><item><title>Gatekeeper</title><link>https://ikorihn.github.io/digitalgarden/note/Gatekeeper/</link><pubDate>Wed, 26 Apr 2023 20:12:38 +0900</pubDate><guid>https://ikorihn.github.io/digitalgarden/note/Gatekeeper/</guid><description>Kubernetes でリソースが作成される際にポリシーに適合するかどうかをチェックし、違反する場合は作成させないことができる機構。 ポリシーはRego言語で定義</description></item><item><title>Kubernetes</title><link>https://ikorihn.github.io/digitalgarden/note/Kubernetes/</link><pubDate>Wed, 26 Apr 2023 20:04:18 +0900</pubDate><guid>https://ikorihn.github.io/digitalgarden/note/Kubernetes/</guid><description>OSSのコンテナオーケストレーションツール</description></item><item><title>Go ターミナルのプロンプトでpasswordを入力する</title><link>https://ikorihn.github.io/digitalgarden/note/Go-%E3%82%BF%E3%83%BC%E3%83%9F%E3%83%8A%E3%83%AB%E3%81%AE%E3%83%97%E3%83%AD%E3%83%B3%E3%83%97%E3%83%88%E3%81%A7password%E3%82%92%E5%85%A5%E5%8A%9B%E3%81%99%E3%82%8B/</link><pubDate>Wed, 26 Apr 2023 12:10:00 +0900</pubDate><guid>https://ikorihn.github.io/digitalgarden/note/Go-%E3%82%BF%E3%83%BC%E3%83%9F%E3%83%8A%E3%83%AB%E3%81%AE%E3%83%97%E3%83%AD%E3%83%B3%E3%83%97%E3%83%88%E3%81%A7password%E3%82%92%E5%85%A5%E5%8A%9B%E3%81%99%E3%82%8B/</guid><description>ターミナル上でパスワードを入力するとき、画面上には表示されないようにしたい。 そんなときに golang.org/x/crypto の ssh/terminal が使える 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 func askCred() (string, string)</description></item><item><title>Go OSのcredential管理を利用する</title><link>https://ikorihn.github.io/digitalgarden/note/Go-OS%E3%81%AEcredential%E7%AE%A1%E7%90%86%E3%82%92%E5%88%A9%E7%94%A8%E3%81%99%E3%82%8B/</link><pubDate>Wed, 26 Apr 2023 12:06:00 +0900</pubDate><guid>https://ikorihn.github.io/digitalgarden/note/Go-OS%E3%81%AEcredential%E7%AE%A1%E7%90%86%E3%82%92%E5%88%A9%E7%94%A8%E3%81%99%E3%82%8B/</guid><description>パスワードを使用するツールを作っていて、設定ファイルにパスワードを書きたくなかったため、GoでOSの管理ツールに保存、取得する方法を調べた。</description></item><item><title>Git hunkのサイズを変更する</title><link>https://ikorihn.github.io/digitalgarden/note/Git-hunk%E3%81%AE%E3%82%B5%E3%82%A4%E3%82%BA%E3%82%92%E5%A4%89%E6%9B%B4%E3%81%99%E3%82%8B/</link><pubDate>Tue, 25 Apr 2023 17:39:00 +0900</pubDate><guid>https://ikorihn.github.io/digitalgarden/note/Git-hunk%E3%81%AE%E3%82%B5%E3%82%A4%E3%82%BA%E3%82%92%E5%A4%89%E6%9B%B4%E3%81%99%E3%82%8B/</guid><description>git diff --ignore-matching-lines=&amp;lt;pattern&amp;gt; で特定のdiffを除外しようとしたがうまくいかず調べたところ、hunk単位でパターンが適用されるらしい。 hunkのサイズを小さくできな</description></item><item><title>Quartzを使ってObsidianを無料で公開してみた</title><link>https://ikorihn.github.io/digitalgarden/blog/Quartz%E3%82%92%E4%BD%BF%E3%81%A3%E3%81%A6Obsidian%E3%82%92%E7%84%A1%E6%96%99%E3%81%A7%E5%85%AC%E9%96%8B%E3%81%97%E3%81%A6%E3%81%BF%E3%81%9F/</link><pubDate>Sun, 23 Apr 2023 10:48:00 +0900</pubDate><guid>https://ikorihn.github.io/digitalgarden/blog/Quartz%E3%82%92%E4%BD%BF%E3%81%A3%E3%81%A6Obsidian%E3%82%92%E7%84%A1%E6%96%99%E3%81%A7%E5%85%AC%E9%96%8B%E3%81%97%E3%81%A6%E3%81%BF%E3%81%9F/</guid><description>私は普段 Obsidian でメモを取るようにしています。 ある程度まとまった内容ができたら都度 Zenn やブログに書くようにしていたのですが、記事にするぞ！と思うとき</description></item><item><title>Obsidianで書いたmarkdownをObsidian Publishを使わずに公開する</title><link>https://ikorihn.github.io/digitalgarden/note/Obsidian%E3%81%A7%E6%9B%B8%E3%81%84%E3%81%9Fmarkdown%E3%82%92Obsidian-Publish%E3%82%92%E4%BD%BF%E3%82%8F%E3%81%9A%E3%81%AB%E5%85%AC%E9%96%8B%E3%81%99%E3%82%8B/</link><pubDate>Sat, 22 Apr 2023 13:12:00 +0900</pubDate><guid>https://ikorihn.github.io/digitalgarden/note/Obsidian%E3%81%A7%E6%9B%B8%E3%81%84%E3%81%9Fmarkdown%E3%82%92Obsidian-Publish%E3%82%92%E4%BD%BF%E3%82%8F%E3%81%9A%E3%81%AB%E5%85%AC%E9%96%8B%E3%81%99%E3%82%8B/</guid><description>参考 Zenn &amp;amp; Hugo in Obsidian : OHZフローによるナレッジベースとアウトプットコンテンツの完全統括 obsdconvを使う方法 Obsidian → Hugo の運用方法 – 公開ノート こち</description></item><item><title>Kanikoについて調べたメモ</title><link>https://ikorihn.github.io/digitalgarden/note/Kaniko%E3%81%AB%E3%81%A4%E3%81%84%E3%81%A6%E8%AA%BF%E3%81%B9%E3%81%9F%E3%83%A1%E3%83%A2/</link><pubDate>Thu, 20 Apr 2023 19:20:00 +0900</pubDate><guid>https://ikorihn.github.io/digitalgarden/note/Kaniko%E3%81%AB%E3%81%A4%E3%81%84%E3%81%A6%E8%AA%BF%E3%81%B9%E3%81%9F%E3%83%A1%E3%83%A2/</guid><description>GitLab RunnerとkanikoでDockerイメージをビルドする - GeekFactory JenkinsとKubernetesでCIパイプラインを構築 - Qiita Let&amp;rsquo;s make faster GitLab CI/CD</description></item><item><title>Jenkins 前回のビルドのarchiveArtifactを取得する</title><link>https://ikorihn.github.io/digitalgarden/note/Jenkins-%E5%89%8D%E5%9B%9E%E3%81%AE%E3%83%93%E3%83%AB%E3%83%89%E3%81%AEarchiveArtifact%E3%82%92%E5%8F%96%E5%BE%97%E3%81%99%E3%82%8B/</link><pubDate>Thu, 20 Apr 2023 14:26:00 +0900</pubDate><guid>https://ikorihn.github.io/digitalgarden/note/Jenkins-%E5%89%8D%E5%9B%9E%E3%81%AE%E3%83%93%E3%83%AB%E3%83%89%E3%81%AEarchiveArtifact%E3%82%92%E5%8F%96%E5%BE%97%E3%81%99%E3%82%8B/</guid><description>前回のビルドの成果物を取得したいことがたまにあるので調べた。 result.txtをarchiveしているとして考える ArtifactMana</description></item><item><title>aws-sdk-go-v2 Athenaにクエリを投げて結果をページングで受け取る</title><link>https://ikorihn.github.io/digitalgarden/note/aws-sdk-go-v2-Athena%E3%81%AB%E3%82%AF%E3%82%A8%E3%83%AA%E3%82%92%E6%8A%95%E3%81%92%E3%81%A6%E7%B5%90%E6%9E%9C%E3%82%92%E3%83%9A%E3%83%BC%E3%82%B8%E3%83%B3%E3%82%B0%E3%81%A7%E5%8F%97%E3%81%91%E5%8F%96%E3%82%8B/</link><pubDate>Wed, 19 Apr 2023 23:27:00 +0900</pubDate><guid>https://ikorihn.github.io/digitalgarden/note/aws-sdk-go-v2-Athena%E3%81%AB%E3%82%AF%E3%82%A8%E3%83%AA%E3%82%92%E6%8A%95%E3%81%92%E3%81%A6%E7%B5%90%E6%9E%9C%E3%82%92%E3%83%9A%E3%83%BC%E3%82%B8%E3%83%B3%E3%82%B0%E3%81%A7%E5%8F%97%E3%81%91%E5%8F%96%E3%82%8B/</guid><description>1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70</description></item><item><title>Jenkins ビルドのChangeSetsを取得する</title><link>https://ikorihn.github.io/digitalgarden/note/Jenkins-%E3%83%93%E3%83%AB%E3%83%89%E3%81%AEChangeSets%E3%82%92%E5%8F%96%E5%BE%97%E3%81%99%E3%82%8B/</link><pubDate>Wed, 19 Apr 2023 13:42:00 +0900</pubDate><guid>https://ikorihn.github.io/digitalgarden/note/Jenkins-%E3%83%93%E3%83%AB%E3%83%89%E3%81%AEChangeSets%E3%82%92%E5%8F%96%E5%BE%97%E3%81%99%E3%82%8B/</guid><description>How to access Changelogs in a Pipeline Job? 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 def changeSets = Jenkins.get().getItemByFullName(&amp;#34;myjob&amp;#34;).builds[0].changeSets for (def changeSet: changeSets) { for (def entry: changeSet) { println &amp;#34;${entry.commitId} by ${entry.author} on ${new Date(entry.timestamp)}: ${entry.msg}&amp;#34; def files = new ArrayList(entry.affectedFiles) for (int k = 0; k &amp;lt; files.size(); k++) { def file = files[k] println &amp;#34; ${file.editType.name}</description></item><item><title>Kustomize patchで特定パターンのリソースにまとめてpatchを当てる</title><link>https://ikorihn.github.io/digitalgarden/note/Kustomize-patch%E3%81%A7%E7%89%B9%E5%AE%9A%E3%83%91%E3%82%BF%E3%83%BC%E3%83%B3%E3%81%AE%E3%83%AA%E3%82%BD%E3%83%BC%E3%82%B9%E3%81%AB%E3%81%BE%E3%81%A8%E3%82%81%E3%81%A6patch%E3%82%92%E5%BD%93%E3%81%A6%E3%82%8B/</link><pubDate>Fri, 07 Apr 2023 16:59:00 +0900</pubDate><guid>https://ikorihn.github.io/digitalgarden/note/Kustomize-patch%E3%81%A7%E7%89%B9%E5%AE%9A%E3%83%91%E3%82%BF%E3%83%BC%E3%83%B3%E3%81%AE%E3%83%AA%E3%82%BD%E3%83%BC%E3%82%B9%E3%81%AB%E3%81%BE%E3%81%A8%E3%82%81%E3%81%A6patch%E3%82%92%E5%BD%93%E3%81%A6%E3%82%8B/</guid><description>patch で複数のリソースにまとめて変更を加えたい場合に使える 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 apiVersion: kustomize.config.k8s.io/v1beta1 kind: Kustomization resources: - github.com/argoproj/argo-cd/manifests/cluster-install?ref=v2.5.0 patches: - patch: |- kind: any metadata: name: any spec: template: spec: nodeSelector: ap-type: argocd-node target: kind: (StatefulSet|Deployment)</description></item><item><title>Java HeapdumpをMATで解析する</title><link>https://ikorihn.github.io/digitalgarden/note/Java-Heapdump%E3%82%92MAT%E3%81%A7%E8%A7%A3%E6%9E%90%E3%81%99%E3%82%8B/</link><pubDate>Fri, 07 Apr 2023 13:04:00 +0900</pubDate><guid>https://ikorihn.github.io/digitalgarden/note/Java-Heapdump%E3%82%92MAT%E3%81%A7%E8%A7%A3%E6%9E%90%E3%81%99%E3%82%8B/</guid><description>#Java Eclipse Memory Analyzer(MAT) https://www.eclipse.org/mat/downloads.php Amazon CorrettoのJDK 19が入っているのだが、matを開くとエラーがでて起動しなかった shared library does not contain the JNI_CreateJavaVM symbol OpenJDK 19を入れてJAVA_</description></item><item><title>yum S3にカスタムリポジトリを作成してそこからインストールする</title><link>https://ikorihn.github.io/digitalgarden/note/yum-S3%E3%81%AB%E3%82%AB%E3%82%B9%E3%82%BF%E3%83%A0%E3%83%AA%E3%83%9D%E3%82%B8%E3%83%88%E3%83%AA%E3%82%92%E4%BD%9C%E6%88%90%E3%81%97%E3%81%A6%E3%81%9D%E3%81%93%E3%81%8B%E3%82%89%E3%82%A4%E3%83%B3%E3%82%B9%E3%83%88%E3%83%BC%E3%83%AB%E3%81%99%E3%82%8B/</link><pubDate>Wed, 05 Apr 2023 16:47:00 +0900</pubDate><guid>https://ikorihn.github.io/digitalgarden/note/yum-S3%E3%81%AB%E3%82%AB%E3%82%B9%E3%82%BF%E3%83%A0%E3%83%AA%E3%83%9D%E3%82%B8%E3%83%88%E3%83%AA%E3%82%92%E4%BD%9C%E6%88%90%E3%81%97%E3%81%A6%E3%81%9D%E3%81%93%E3%81%8B%E3%82%89%E3%82%A4%E3%83%B3%E3%82%B9%E3%83%88%E3%83%BC%E3%83%AB%E3%81%99%E3%82%8B/</guid><description>自前のyumリポジトリサーバを構築し、そのリポジトリからインストールできるようにする。 参考 (CentOS7)プライベート環境に必要なパッケー</description></item><item><title>JSDoc VSCodeで型チェックをする</title><link>https://ikorihn.github.io/digitalgarden/note/JSDoc-VSCode%E3%81%A7%E5%9E%8B%E3%83%81%E3%82%A7%E3%83%83%E3%82%AF%E3%82%92%E3%81%99%E3%82%8B/</link><pubDate>Wed, 05 Apr 2023 15:56:00 +0900</pubDate><guid>https://ikorihn.github.io/digitalgarden/note/JSDoc-VSCode%E3%81%A7%E5%9E%8B%E3%83%81%E3%82%A7%E3%83%83%E3%82%AF%E3%82%92%E3%81%99%E3%82%8B/</guid><description>TypeScriptを使おうとするとビルドの手間がかかるので、小さいスクリプトで手軽に型チェックだけしたいときにJSDocで簡易的に型をつけ</description></item><item><title>yum パッケージバージョンを指定してインストールする</title><link>https://ikorihn.github.io/digitalgarden/note/yum-%E3%83%91%E3%83%83%E3%82%B1%E3%83%BC%E3%82%B8%E3%83%90%E3%83%BC%E3%82%B8%E3%83%A7%E3%83%B3%E3%82%92%E6%8C%87%E5%AE%9A%E3%81%97%E3%81%A6%E3%82%A4%E3%83%B3%E3%82%B9%E3%83%88%E3%83%BC%E3%83%AB%E3%81%99%E3%82%8B/</link><pubDate>Tue, 04 Apr 2023 18:53:00 +0900</pubDate><guid>https://ikorihn.github.io/digitalgarden/note/yum-%E3%83%91%E3%83%83%E3%82%B1%E3%83%BC%E3%82%B8%E3%83%90%E3%83%BC%E3%82%B8%E3%83%A7%E3%83%B3%E3%82%92%E6%8C%87%E5%AE%9A%E3%81%97%E3%81%A6%E3%82%A4%E3%83%B3%E3%82%B9%E3%83%88%E3%83%BC%E3%83%AB%E3%81%99%E3%82%8B/</guid><description>1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 $ yum --showduplicates search java-17- Loaded plugins: ovl, priorities ============================================================================== N/S matched: java-17- =============================================================================== 1:java-17-amazon-corretto-17.0.1+12-2.amzn2.1.aarch64 : Amazon Corretto development environment 1:java-17-amazon-corretto-17.0.1+12-3.amzn2.1.aarch64 : Amazon Corretto development environment 1:java-17-amazon-corretto-17.0.2+8-1.amzn2.1.aarch64</description></item><item><title>CentOS7とAmazonLinux2のDockerコンテナで日本語ロケールを設定する</title><link>https://ikorihn.github.io/digitalgarden/note/CentOS7%E3%81%A8AmazonLinux2%E3%81%AEDocker%E3%82%B3%E3%83%B3%E3%83%86%E3%83%8A%E3%81%A7%E6%97%A5%E6%9C%AC%E8%AA%9E%E3%83%AD%E3%82%B1%E3%83%BC%E3%83%AB%E3%82%92%E8%A8%AD%E5%AE%9A%E3%81%99%E3%82%8B/</link><pubDate>Tue, 04 Apr 2023 17:35:00 +0900</pubDate><guid>https://ikorihn.github.io/digitalgarden/note/CentOS7%E3%81%A8AmazonLinux2%E3%81%AEDocker%E3%82%B3%E3%83%B3%E3%83%86%E3%83%8A%E3%81%A7%E6%97%A5%E6%9C%AC%E8%AA%9E%E3%83%AD%E3%82%B1%E3%83%BC%E3%83%AB%E3%82%92%E8%A8%AD%E5%AE%9A%E3%81%99%E3%82%8B/</guid><description>JavaのDateFormatterで、曜日を日本語表示しようとしたときに、ja_JPロケールが入っておらずできなかったので、方法を調べた。</description></item><item><title>緯度経度で2地点間の距離を計算する</title><link>https://ikorihn.github.io/digitalgarden/note/%E7%B7%AF%E5%BA%A6%E7%B5%8C%E5%BA%A6%E3%81%A72%E5%9C%B0%E7%82%B9%E9%96%93%E3%81%AE%E8%B7%9D%E9%9B%A2%E3%82%92%E8%A8%88%E7%AE%97%E3%81%99%E3%82%8B/</link><pubDate>Thu, 30 Mar 2023 17:44:00 +0900</pubDate><guid>https://ikorihn.github.io/digitalgarden/note/%E7%B7%AF%E5%BA%A6%E7%B5%8C%E5%BA%A6%E3%81%A72%E5%9C%B0%E7%82%B9%E9%96%93%E3%81%AE%E8%B7%9D%E9%9B%A2%E3%82%92%E8%A8%88%E7%AE%97%E3%81%99%E3%82%8B/</guid><description>いろいろな計算式があり、精度と速度の一長一短 緯度経度を用いた3つの距離計算方法 測地線距離計算式・計算ライブラリの精度評価 - 330k info Haversine: 完全球体とみ</description></item><item><title>Java BigDecimalにdoubleを渡したとき誤差がでる</title><link>https://ikorihn.github.io/digitalgarden/note/Java-BigDecimal%E3%81%ABdouble%E3%82%92%E6%B8%A1%E3%81%97%E3%81%9F%E3%81%A8%E3%81%8D%E8%AA%A4%E5%B7%AE%E3%81%8C%E3%81%A7%E3%82%8B/</link><pubDate>Thu, 30 Mar 2023 16:23:00 +0900</pubDate><guid>https://ikorihn.github.io/digitalgarden/note/Java-BigDecimal%E3%81%ABdouble%E3%82%92%E6%B8%A1%E3%81%97%E3%81%9F%E3%81%A8%E3%81%8D%E8%AA%A4%E5%B7%AE%E3%81%8C%E3%81%A7%E3%82%8B/</guid><description>Javaで正確な数値計算を行うため BigDecimal を使っていたが、BigDecimalをdoubleで初期化したあと、小数点以下で四捨五入したところ誤差が</description></item><item><title>Slack APIで投稿したメッセージのURLを取得する</title><link>https://ikorihn.github.io/digitalgarden/note/Slack-API%E3%81%A7%E6%8A%95%E7%A8%BF%E3%81%97%E3%81%9F%E3%83%A1%E3%83%83%E3%82%BB%E3%83%BC%E3%82%B8%E3%81%AEURL%E3%82%92%E5%8F%96%E5%BE%97%E3%81%99%E3%82%8B/</link><pubDate>Thu, 30 Mar 2023 12:56:00 +0900</pubDate><guid>https://ikorihn.github.io/digitalgarden/note/Slack-API%E3%81%A7%E6%8A%95%E7%A8%BF%E3%81%97%E3%81%9F%E3%83%A1%E3%83%83%E3%82%BB%E3%83%BC%E3%82%B8%E3%81%AEURL%E3%82%92%E5%8F%96%E5%BE%97%E3%81%99%E3%82%8B/</guid><description>slackのAPI chat.postMessage で投稿したメッセージのURLを取得するGAS - シンプルに暮らしたい情シスのブログ https://api.slack.com/methods/chat.postMessage でpostしたメッセージのURLが知り</description></item><item><title>Bitbucket Pipelinesでmasterブランチとファイル比較をしたい</title><link>https://ikorihn.github.io/digitalgarden/note/Bitbucket-Pipelines%E3%81%A7master%E3%83%96%E3%83%A9%E3%83%B3%E3%83%81%E3%81%A8%E3%83%95%E3%82%A1%E3%82%A4%E3%83%AB%E6%AF%94%E8%BC%83%E3%82%92%E3%81%97%E3%81%9F%E3%81%84/</link><pubDate>Tue, 28 Mar 2023 16:40:00 +0900</pubDate><guid>https://ikorihn.github.io/digitalgarden/note/Bitbucket-Pipelines%E3%81%A7master%E3%83%96%E3%83%A9%E3%83%B3%E3%83%81%E3%81%A8%E3%83%95%E3%82%A1%E3%82%A4%E3%83%AB%E6%AF%94%E8%BC%83%E3%82%92%E3%81%97%E3%81%9F%E3%81%84/</guid><description>pipelineで、masterブランチとのファイル比較をしようとして、masterをcheckoutした 1 2 3 4 5 6 7 default:step:- git remote -v- git branch -a- git fetch origin-</description></item><item><title>Open Policy Agent OPA</title><link>https://ikorihn.github.io/digitalgarden/note/Open-Policy-Agent-OPA/</link><pubDate>Mon, 27 Mar 2023 10:49:00 +0900</pubDate><guid>https://ikorihn.github.io/digitalgarden/note/Open-Policy-Agent-OPA/</guid><description>GateKeeper, Conftestと組み合わせて使う https://www.openpolicyagent.org/docs/latest/policy-language/ Playground もある わかりやすいページ Policy as Codeを実現する Open Policy Agent / Rego の紹介 - ISID テックブログ Open Policy Agent (OPA)は、ポ</description></item><item><title>セマフォ</title><link>https://ikorihn.github.io/digitalgarden/note/%E3%82%BB%E3%83%9E%E3%83%95%E3%82%A9/</link><pubDate>Tue, 14 Mar 2023 09:57:00 +0900</pubDate><guid>https://ikorihn.github.io/digitalgarden/note/%E3%82%BB%E3%83%9E%E3%83%95%E3%82%A9/</guid><description>セマフォとは - 意味をわかりやすく - IT用語辞典 e-Words セマフォはコンピュータ上の共有資源について、利用可能な資源の数を指し示している。プログラムが</description></item><item><title>kube-prometheus-stack のCRDがToo longで作られない</title><link>https://ikorihn.github.io/digitalgarden/note/kube-prometheus-stack-%E3%81%AECRD%E3%81%8CToo-long%E3%81%A7%E4%BD%9C%E3%82%89%E3%82%8C%E3%81%AA%E3%81%84/</link><pubDate>Thu, 09 Mar 2023 23:47:00 +0900</pubDate><guid>https://ikorihn.github.io/digitalgarden/note/kube-prometheus-stack-%E3%81%AECRD%E3%81%8CToo-long%E3%81%A7%E4%BD%9C%E3%82%89%E3%82%8C%E3%81%AA%E3%81%84/</guid><description>Argo CD v2.5からは、server side applyを有効にすると Too long: must have at most 262144 bytes が解消される。将来的にデフォルトがserver side applyになると</description></item><item><title>Raycastでディスプレイの解像度を変更する</title><link>https://ikorihn.github.io/digitalgarden/note/Raycast%E3%81%A7%E3%83%87%E3%82%A3%E3%82%B9%E3%83%97%E3%83%AC%E3%82%A4%E3%81%AE%E8%A7%A3%E5%83%8F%E5%BA%A6%E3%82%92%E5%A4%89%E6%9B%B4%E3%81%99%E3%82%8B/</link><pubDate>Fri, 03 Mar 2023 19:30:00 +0900</pubDate><guid>https://ikorihn.github.io/digitalgarden/note/Raycast%E3%81%A7%E3%83%87%E3%82%A3%E3%82%B9%E3%83%97%E3%83%AC%E3%82%A4%E3%81%AE%E8%A7%A3%E5%83%8F%E5%BA%A6%E3%82%92%E5%A4%89%E6%9B%B4%E3%81%99%E3%82%8B/</guid><description>WQHD(2560x1440)ディスプレイを使っていると、画面共有時に文字が小さくなってしまい読めないことが多々あるので、画面共有するときは</description></item><item><title>Argo Rolloutsで通知させる</title><link>https://ikorihn.github.io/digitalgarden/note/Argo-Rollouts%E3%81%A7%E9%80%9A%E7%9F%A5%E3%81%95%E3%81%9B%E3%82%8B/</link><pubDate>Tue, 28 Feb 2023 14:19:00 +0900</pubDate><guid>https://ikorihn.github.io/digitalgarden/note/Argo-Rollouts%E3%81%A7%E9%80%9A%E7%9F%A5%E3%81%95%E3%81%9B%E3%82%8B/</guid><description>argo-rollouts 1.4.0 で、デプロイ失敗時にslack通知が来なかった argo-rolloutsのバージョンを以前の1.2.1に戻してもslack通知がこないの</description></item><item><title>kustomize buildするとき、一部のoverlaysのときだけbaseのリソースを削除したい</title><link>https://ikorihn.github.io/digitalgarden/note/kustomize-build%E3%81%99%E3%82%8B%E3%81%A8%E3%81%8D%E4%B8%80%E9%83%A8%E3%81%AEoverlays%E3%81%AE%E3%81%A8%E3%81%8D%E3%81%A0%E3%81%91base%E3%81%AE%E3%83%AA%E3%82%BD%E3%83%BC%E3%82%B9%E3%82%92%E5%89%8A%E9%99%A4%E3%81%97%E3%81%9F%E3%81%84/</link><pubDate>Mon, 27 Feb 2023 12:21:00 +0900</pubDate><guid>https://ikorihn.github.io/digitalgarden/note/kustomize-build%E3%81%99%E3%82%8B%E3%81%A8%E3%81%8D%E4%B8%80%E9%83%A8%E3%81%AEoverlays%E3%81%AE%E3%81%A8%E3%81%8D%E3%81%A0%E3%81%91base%E3%81%AE%E3%83%AA%E3%82%BD%E3%83%BC%E3%82%B9%E3%82%92%E5%89%8A%E9%99%A4%E3%81%97%E3%81%9F%E3%81%84/</guid><description>【kustomize】特定の環境だけbaseのリソースを削除する | amateur engineer&amp;rsquo;s blog baseのapiVersionと一部環境だけ異なるという場合に必要と</description></item><item><title>Jenkins kubernetes plugin 3872.v760b_4a_6c126b_ でagent起動しない</title><link>https://ikorihn.github.io/digitalgarden/note/Jenkins-kubernetes-plugin-3872.v760b_4a_6c126b_-%E3%81%A7agent%E8%B5%B7%E5%8B%95%E3%81%97%E3%81%AA%E3%81%84/</link><pubDate>Tue, 21 Feb 2023 11:21:00 +0900</pubDate><guid>https://ikorihn.github.io/digitalgarden/note/Jenkins-kubernetes-plugin-3872.v760b_4a_6c126b_-%E3%81%A7agent%E8%B5%B7%E5%8B%95%E3%81%97%E3%81%AA%E3%81%84/</guid><description>エラーログ 1 2 3 4 5 6 7 2023-02-21 01:06:57.665+0000 [id=81] WARNING o.c.j.p.k.KubernetesLauncher#launch: Error in provisioning; agent=KubernetesSlave name: jenkins-agent-x86-64-kjhkr, template=PodTemplate{id=&amp;#39;afef69c1-5cc4-48a8-a070-fd6a6fd4f6d1&amp;#39;, name=&amp;#39;jenkins-agent-x86_64&amp;#39;, namespace=&amp;#39;staging-jenkins&amp;#39;, runAsUser=0, runAsGroup=0, slaveConnectTimeout=600, idleMinutes=30, label=&amp;#39;jenkins-agent-x86_64&amp;#39;, serviceAccount=&amp;#39;jenkins&amp;#39;, nodeSelector=&amp;#39;ap-type=cicd-jenkins-slave-kp-staging,arch=amd64&amp;#39;, nodeUsageMode=NORMAL, podRetention=&amp;#39;Never&amp;#39;, annotations=[PodAnnotation{key=&amp;#39;cluster-autoscaler.kubernetes.io/safe-to-evict&amp;#39;, value=&amp;#39;false&amp;#39;}]} io.fabric8.kubernetes.client.KubernetesClientException: name not specified for an operation requiring one. at io.fabric8.kubernetes.client.dsl.internal.BaseOperation.requireFromServer(BaseOperation.java:182) at io.fabric8.kubernetes.client.dsl.internal.BaseOperation.get(BaseOperation.java:142) at io.fabric8.kubernetes.client.dsl.internal.BaseOperation.get(BaseOperation.java:93) at org.csanchez.jenkins.plugins.kubernetes.PodTemplateUtils.parseFromYaml(PodTemplateUtils.java:611) Caused: java.lang.RuntimeException: Failed to parse yaml: &amp;#34;apiVersion: v1 kubernetes-client-api:6.4.1-208.vfe09a_9362c2c にバージョンが</description></item><item><title>Jenkins matrixビルドで変数が共有される問題</title><link>https://ikorihn.github.io/digitalgarden/note/Jenkins-matrix%E3%83%93%E3%83%AB%E3%83%89%E3%81%A7%E5%A4%89%E6%95%B0%E3%81%8C%E5%85%B1%E6%9C%89%E3%81%95%E3%82%8C%E3%82%8B%E5%95%8F%E9%A1%8C/</link><pubDate>Mon, 13 Feb 2023 12:50:00 +0900</pubDate><guid>https://ikorihn.github.io/digitalgarden/note/Jenkins-matrix%E3%83%93%E3%83%AB%E3%83%89%E3%81%A7%E5%A4%89%E6%95%B0%E3%81%8C%E5%85%B1%E6%9C%89%E3%81%95%E3%82%8C%E3%82%8B%E5%95%8F%E9%A1%8C/</guid><description>matrixを使ってふたつのworker上でビルドしたいとき、実行順によっては 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31</description></item><item><title>Kaniko assume roleを使ってECRログインする</title><link>https://ikorihn.github.io/digitalgarden/note/Kaniko-assume-role%E3%82%92%E4%BD%BF%E3%81%A3%E3%81%A6ECR%E3%83%AD%E3%82%B0%E3%82%A4%E3%83%B3%E3%81%99%E3%82%8B/</link><pubDate>Fri, 10 Feb 2023 16:24:00 +0900</pubDate><guid>https://ikorihn.github.io/digitalgarden/note/Kaniko-assume-role%E3%82%92%E4%BD%BF%E3%81%A3%E3%81%A6ECR%E3%83%AD%E3%82%B0%E3%82%A4%E3%83%B3%E3%81%99%E3%82%8B/</guid><description>kaniko が何をしているか, 何ができるか - 薄いブログ Container Image Building with Kaniko Kaniko Image Cache in Jenkins Kubernetes Agents - Stack Overflow /kaniko/.docker/config.json に 1 2 3 { &amp;#34;credsStore&amp;#34;: &amp;#34;ecr-login&amp;#34; } 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24</description></item><item><title>Amazon EFS</title><link>https://ikorihn.github.io/digitalgarden/note/Amazon-EFS/</link><pubDate>Thu, 09 Feb 2023 11:15:00 +0900</pubDate><guid>https://ikorihn.github.io/digitalgarden/note/Amazon-EFS/</guid><description>Amazon EFS パフォーマンス - Amazon Elastic File System スループットモードについて NEW – Amazon EFS Elastic Throughput の発表 | Amazon Web Services ブログ 新しいスループットモードで、アプリケーションに必要なだ</description></item><item><title>GCP Deployment Manager</title><link>https://ikorihn.github.io/digitalgarden/note/GCP-Deployment-Manager/</link><pubDate>Fri, 03 Feb 2023 15:49:00 +0900</pubDate><guid>https://ikorihn.github.io/digitalgarden/note/GCP-Deployment-Manager/</guid><description>AWSのCloudFormationみたいなもの 設定ファイルに従ってリソースが作成される Deployment Manager の最初の一歩 - Qiita サポートされるリソースの一覧 https://cloud.google.com/deployment-manager/docs/configuration/supported-resource-types リ</description></item><item><title>GKE</title><link>https://ikorihn.github.io/digitalgarden/note/GKE/</link><pubDate>Fri, 03 Feb 2023 15:48:00 +0900</pubDate><guid>https://ikorihn.github.io/digitalgarden/note/GKE/</guid><description>Google Kubernetes Engine</description></item><item><title>tig</title><link>https://ikorihn.github.io/digitalgarden/note/tig/</link><pubDate>Fri, 03 Feb 2023 12:45:00 +0900</pubDate><guid>https://ikorihn.github.io/digitalgarden/note/tig/</guid><description>TUIのGitクライアントツール 設定ファイル ~/.tigrc $XDG_CONFIG_HOME/tig/config TIPS blameの操作 blame viewを開く b 親のコミットに遡る 該当行で , 親のコミットからもとのコミッ</description></item><item><title>Jenkins Kubernetes pluginでinheritFromを上書きしつつpod名にprefixをつける</title><link>https://ikorihn.github.io/digitalgarden/note/Jenkins-Kubernetes-plugin%E3%81%A7inheritFrom%E3%82%92%E4%B8%8A%E6%9B%B8%E3%81%8D%E3%81%97%E3%81%A4%E3%81%A4pod%E5%90%8D%E3%81%ABprefix%E3%82%92%E3%81%A4%E3%81%91%E3%82%8B/</link><pubDate>Thu, 02 Feb 2023 19:21:00 +0900</pubDate><guid>https://ikorihn.github.io/digitalgarden/note/Jenkins-Kubernetes-plugin%E3%81%A7inheritFrom%E3%82%92%E4%B8%8A%E6%9B%B8%E3%81%8D%E3%81%97%E3%81%A4%E3%81%A4pod%E5%90%8D%E3%81%ABprefix%E3%82%92%E3%81%A4%E3%81%91%E3%82%8B/</guid><description>configure cloudsの設定でpodTemplateを定義ずみで、 inheritFrom で継承しつつ一部だけを上書きしたいときの書き方 podTemplateの設定 name my-jenkins-agent labels</description></item><item><title>yq チートシート</title><link>https://ikorihn.github.io/digitalgarden/note/yq-%E3%83%81%E3%83%BC%E3%83%88%E3%82%B7%E3%83%BC%E3%83%88/</link><pubDate>Fri, 27 Jan 2023 13:05:00 +0900</pubDate><guid>https://ikorihn.github.io/digitalgarden/note/yq-%E3%83%81%E3%83%BC%E3%83%88%E3%82%B7%E3%83%BC%E3%83%88/</guid><description>yq にはGo版とPython版があるので、注意する。Go版をここでは使う https://mikefarah.gitbook.io/yq/ https://github.com/mikefarah/yq shellの変数を使う このような書き方では変数が正しく利用されない</description></item><item><title>Jenkins本体のバージョンとプラグインをスクリプトで最新化する</title><link>https://ikorihn.github.io/digitalgarden/note/Jenkins%E6%9C%AC%E4%BD%93%E3%81%AE%E3%83%90%E3%83%BC%E3%82%B8%E3%83%A7%E3%83%B3%E3%81%A8%E3%83%97%E3%83%A9%E3%82%B0%E3%82%A4%E3%83%B3%E3%82%92%E3%82%B9%E3%82%AF%E3%83%AA%E3%83%97%E3%83%88%E3%81%A7%E6%9C%80%E6%96%B0%E5%8C%96%E3%81%99%E3%82%8B/</link><pubDate>Fri, 27 Jan 2023 13:03:00 +0900</pubDate><guid>https://ikorihn.github.io/digitalgarden/note/Jenkins%E6%9C%AC%E4%BD%93%E3%81%AE%E3%83%90%E3%83%BC%E3%82%B8%E3%83%A7%E3%83%B3%E3%81%A8%E3%83%97%E3%83%A9%E3%82%B0%E3%82%A4%E3%83%B3%E3%82%92%E3%82%B9%E3%82%AF%E3%83%AA%E3%83%97%E3%83%88%E3%81%A7%E6%9C%80%E6%96%B0%E5%8C%96%E3%81%99%E3%82%8B/</guid><description>jenkinsの最新バージョンを取得するURL https://stackoverflow.com/questions/43857882/how-to-query-the-current-jenkins-lts-version-number For stable (LTS) https://updates.jenkins.io/stable/latestCore.txt And for the latest https://updates.jenkins.io/latestCore.txt Simple groovy script to upgrade active plugins when new versions are available jenkins safe auto update plugins 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 def</description></item><item><title>Kubernetes limitsを指定したPodで動かしているプロセスがメモリ超過してもevictされずプロセスがkillされる</title><link>https://ikorihn.github.io/digitalgarden/note/Kubernetes-limits%E3%82%92%E6%8C%87%E5%AE%9A%E3%81%97%E3%81%9FPod%E3%81%A7%E5%8B%95%E3%81%8B%E3%81%97%E3%81%A6%E3%81%84%E3%82%8B%E3%83%97%E3%83%AD%E3%82%BB%E3%82%B9%E3%81%8C%E3%83%A1%E3%83%A2%E3%83%AA%E8%B6%85%E9%81%8E%E3%81%97%E3%81%A6%E3%82%82evict%E3%81%95%E3%82%8C%E3%81%9A%E3%83%97%E3%83%AD%E3%82%BB%E3%82%B9%E3%81%8Ckill%E3%81%95%E3%82%8C%E3%82%8B/</link><pubDate>Thu, 26 Jan 2023 15:43:00 +0900</pubDate><guid>https://ikorihn.github.io/digitalgarden/note/Kubernetes-limits%E3%82%92%E6%8C%87%E5%AE%9A%E3%81%97%E3%81%9FPod%E3%81%A7%E5%8B%95%E3%81%8B%E3%81%97%E3%81%A6%E3%81%84%E3%82%8B%E3%83%97%E3%83%AD%E3%82%BB%E3%82%B9%E3%81%8C%E3%83%A1%E3%83%A2%E3%83%AA%E8%B6%85%E9%81%8E%E3%81%97%E3%81%A6%E3%82%82evict%E3%81%95%E3%82%8C%E3%81%9A%E3%83%97%E3%83%AD%E3%82%BB%E3%82%B9%E3%81%8Ckill%E3%81%95%E3%82%8C%E3%82%8B/</guid><description>kubernetes resourcesの設定値について Kubernetes command: ['sleep', '3600'] とかで起動したpodにexecで入って yes コマンド等で負荷をかけても、yes のプロセスがkillさ</description></item><item><title>ssh 踏み台で su user してから接続するssh先をsshconfigで設定する</title><link>https://ikorihn.github.io/digitalgarden/note/ssh-%E8%B8%8F%E3%81%BF%E5%8F%B0%E3%81%A7-su-user-%E3%81%97%E3%81%A6%E3%81%8B%E3%82%89%E6%8E%A5%E7%B6%9A%E3%81%99%E3%82%8Bssh%E5%85%88%E3%82%92sshconfig%E3%81%A7%E8%A8%AD%E5%AE%9A%E3%81%99%E3%82%8B/</link><pubDate>Tue, 24 Jan 2023 15:22:00 +0900</pubDate><guid>https://ikorihn.github.io/digitalgarden/note/ssh-%E8%B8%8F%E3%81%BF%E5%8F%B0%E3%81%A7-su-user-%E3%81%97%E3%81%A6%E3%81%8B%E3%82%89%E6%8E%A5%E7%B6%9A%E3%81%99%E3%82%8Bssh%E5%85%88%E3%82%92sshconfig%E3%81%A7%E8%A8%AD%E5%AE%9A%E3%81%99%E3%82%8B/</guid><description>ローカル -&amp;gt; 踏み台 -&amp;gt; 許可されたユーザーにsuする -&amp;gt; ターゲットにssh というケース functionを作る 1 2 3 4 function ssh_via_bastion() { ssh -t bastion_host &amp;#34;su - superuser -c &amp;#39;ssh $1&amp;#39;&amp;#34; } ssh_via_bastion &amp;lt;target_host&amp;gt; こ</description></item><item><title>kubernetes resourcesの設定値について Kubernetes</title><link>https://ikorihn.github.io/digitalgarden/note/kubernetes-resources%E3%81%AE%E8%A8%AD%E5%AE%9A%E5%80%A4%E3%81%AB%E3%81%A4%E3%81%84%E3%81%A6-Kubernetes/</link><pubDate>Mon, 23 Jan 2023 17:35:00 +0900</pubDate><guid>https://ikorihn.github.io/digitalgarden/note/kubernetes-resources%E3%81%AE%E8%A8%AD%E5%AE%9A%E5%80%A4%E3%81%AB%E3%81%A4%E3%81%84%E3%81%A6-Kubernetes/</guid><description>https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/ Kubernetes のリソース制限とその挙動確認 - YasuBlog requestsに memory: 256MiB を設定すると256MiB以上空きがあるNodeにスケジュールされて、256MiB以</description></item><item><title>Go Echoサーバー</title><link>https://ikorihn.github.io/digitalgarden/note/Go-Echo%E3%82%B5%E3%83%BC%E3%83%90%E3%83%BC/</link><pubDate>Thu, 19 Jan 2023 10:14:00 +0900</pubDate><guid>https://ikorihn.github.io/digitalgarden/note/Go-Echo%E3%82%B5%E3%83%BC%E3%83%90%E3%83%BC/</guid><description>#Go エラーハンドリング Error Handling | Echo - High performance, minimalist Go web framework</description></item><item><title>starship</title><link>https://ikorihn.github.io/digitalgarden/note/starship/</link><pubDate>Fri, 13 Jan 2023 09:47:00 +0900</pubDate><guid>https://ikorihn.github.io/digitalgarden/note/starship/</guid><description>https://starship.rs</description></item><item><title>Powerlevel10k</title><link>https://ikorihn.github.io/digitalgarden/note/Powerlevel10k/</link><pubDate>Fri, 13 Jan 2023 09:44:00 +0900</pubDate><guid>https://ikorihn.github.io/digitalgarden/note/Powerlevel10k/</guid><description>https://github.com/romkatv/powerlevel10k/ zshのプロンプト用のtheme 類似 starship</description></item><item><title>Garminアプリを作ってみる</title><link>https://ikorihn.github.io/digitalgarden/note/Garmin%E3%82%A2%E3%83%97%E3%83%AA%E3%82%92%E4%BD%9C%E3%81%A3%E3%81%A6%E3%81%BF%E3%82%8B/</link><pubDate>Sat, 07 Jan 2023 17:06:00 +0900</pubDate><guid>https://ikorihn.github.io/digitalgarden/note/Garmin%E3%82%A2%E3%83%97%E3%83%AA%E3%82%92%E4%BD%9C%E3%81%A3%E3%81%A6%E3%81%BF%E3%82%8B/</guid><description>作るもの Apple Watchの「Tapticタイム」で現在時刻を振動で確認する方法 | Apple Watch Wave Tapticタイムみたいに、現在時刻を振動で知りたい https://github.com/ikorihn/gtaptic 環境</description></item><item><title>Raycast</title><link>https://ikorihn.github.io/digitalgarden/note/Raycast/</link><pubDate>Fri, 06 Jan 2023 13:53:00 +0900</pubDate><guid>https://ikorihn.github.io/digitalgarden/note/Raycast/</guid><description>RaycastはただのLauncherツールにとどまらない ランチャーツールRaycastの使い方と設定 | DevelopersIO 自分の設定 Authy マイク Raycastで</description></item><item><title>Locust</title><link>https://ikorihn.github.io/digitalgarden/note/Locust/</link><pubDate>Thu, 05 Jan 2023 18:15:00 +0900</pubDate><guid>https://ikorihn.github.io/digitalgarden/note/Locust/</guid><description>Locust - A modern load testing framework Locust はPythonで書かれた負荷試験ツール スクリプトもPythonで書く</description></item><item><title>LocustとBoomerを使ってGoで負荷試験のスクリプトを書く</title><link>https://ikorihn.github.io/digitalgarden/note/Locust%E3%81%A8Boomer%E3%82%92%E4%BD%BF%E3%81%A3%E3%81%A6Go%E3%81%A7%E8%B2%A0%E8%8D%B7%E8%A9%A6%E9%A8%93%E3%81%AE%E3%82%B9%E3%82%AF%E3%83%AA%E3%83%97%E3%83%88%E3%82%92%E6%9B%B8%E3%81%8F/</link><pubDate>Thu, 05 Jan 2023 18:13:00 +0900</pubDate><guid>https://ikorihn.github.io/digitalgarden/note/Locust%E3%81%A8Boomer%E3%82%92%E4%BD%BF%E3%81%A3%E3%81%A6Go%E3%81%A7%E8%B2%A0%E8%8D%B7%E8%A9%A6%E9%A8%93%E3%81%AE%E3%82%B9%E3%82%AF%E3%83%AA%E3%83%97%E3%83%88%E3%82%92%E6%9B%B8%E3%81%8F/</guid><description>DMMプラットフォームを支える負荷試験基盤 - Speaker Deck gRPC + Locust + boomerで負荷試験をしてみた - Qiita Locust はPythonでスクリプトを書く。 Goで負荷</description></item><item><title>OpenAPI yamlを編集するときにSwagger Editorなどを使う</title><link>https://ikorihn.github.io/digitalgarden/note/OpenAPI-yaml%E3%82%92%E7%B7%A8%E9%9B%86%E3%81%99%E3%82%8B%E3%81%A8%E3%81%8D%E3%81%ABSwagger-Editor%E3%81%AA%E3%81%A9%E3%82%92%E4%BD%BF%E3%81%86/</link><pubDate>Thu, 05 Jan 2023 16:49:00 +0900</pubDate><guid>https://ikorihn.github.io/digitalgarden/note/OpenAPI-yaml%E3%82%92%E7%B7%A8%E9%9B%86%E3%81%99%E3%82%8B%E3%81%A8%E3%81%8D%E3%81%ABSwagger-Editor%E3%81%AA%E3%81%A9%E3%82%92%E4%BD%BF%E3%81%86/</guid><description>OpenAPI specを書くツールをいくつか調べた vscodeだと拡張を入れてもいまいち補完が効かない Intellij IDEAの OpenAPI Editor が一番良さそうだがJetBrain</description></item><item><title>Mistel BAROCCO md650l</title><link>https://ikorihn.github.io/digitalgarden/note/Mistel-BAROCCO-md650l/</link><pubDate>Thu, 05 Jan 2023 16:13:00 +0900</pubDate><guid>https://ikorihn.github.io/digitalgarden/note/Mistel-BAROCCO-md650l/</guid><description>2019年3月に買った 左右分離型キーボード ロープロファイルでCherry MX</description></item><item><title>OpenAPIとGoでリクエストのバリデーションをする</title><link>https://ikorihn.github.io/digitalgarden/note/OpenAPI%E3%81%A8Go%E3%81%A7%E3%83%AA%E3%82%AF%E3%82%A8%E3%82%B9%E3%83%88%E3%81%AE%E3%83%90%E3%83%AA%E3%83%87%E3%83%BC%E3%82%B7%E3%83%A7%E3%83%B3%E3%82%92%E3%81%99%E3%82%8B/</link><pubDate>Thu, 05 Jan 2023 15:51:00 +0900</pubDate><guid>https://ikorihn.github.io/digitalgarden/note/OpenAPI%E3%81%A8Go%E3%81%A7%E3%83%AA%E3%82%AF%E3%82%A8%E3%82%B9%E3%83%88%E3%81%AE%E3%83%90%E3%83%AA%E3%83%87%E3%83%BC%E3%82%B7%E3%83%A7%E3%83%B3%E3%82%92%E3%81%99%E3%82%8B/</guid><description>いつもoapi-codegenでopenapi.yamlからGoのコードを生成するようにしている。 oapi-codegenの使い方については</description></item><item><title>Podman DesktopをインストールしてProxyを設定</title><link>https://ikorihn.github.io/digitalgarden/note/Podman-Desktop%E3%82%92%E3%82%A4%E3%83%B3%E3%82%B9%E3%83%88%E3%83%BC%E3%83%AB%E3%81%97%E3%81%A6Proxy%E3%82%92%E8%A8%AD%E5%AE%9A/</link><pubDate>Thu, 05 Jan 2023 12:32:00 +0900</pubDate><guid>https://ikorihn.github.io/digitalgarden/note/Podman-Desktop%E3%82%92%E3%82%A4%E3%83%B3%E3%82%B9%E3%83%88%E3%83%BC%E3%83%AB%E3%81%97%E3%81%A6Proxy%E3%82%92%E8%A8%AD%E5%AE%9A/</guid><description>会社のプロキシの裏でPodman Desktopを実行する | フューチャー技術ブログ インストール https://podman-desktop.io/docs/installation/macos-install 実行してInstallを押すとダイアログが出る</description></item><item><title>kubernetesクラスタ内にプライベートdockerレジストリを作る</title><link>https://ikorihn.github.io/digitalgarden/note/kubernetes%E3%82%AF%E3%83%A9%E3%82%B9%E3%82%BF%E5%86%85%E3%81%AB%E3%83%97%E3%83%A9%E3%82%A4%E3%83%99%E3%83%BC%E3%83%88docker%E3%83%AC%E3%82%B8%E3%82%B9%E3%83%88%E3%83%AA%E3%82%92%E4%BD%9C%E3%82%8B/</link><pubDate>Wed, 04 Jan 2023 18:44:00 +0900</pubDate><guid>https://ikorihn.github.io/digitalgarden/note/kubernetes%E3%82%AF%E3%83%A9%E3%82%B9%E3%82%BF%E5%86%85%E3%81%AB%E3%83%97%E3%83%A9%E3%82%A4%E3%83%99%E3%83%BC%E3%83%88docker%E3%83%AC%E3%82%B8%E3%82%B9%E3%83%88%E3%83%AA%E3%82%92%E4%BD%9C%E3%82%8B/</guid><description>サンプルだとよくECRやGCRにコンテナイメージをアップロードするように言われるが、とりあえずローカルで確認したいときに、Kubernete</description></item><item><title>shellでwhile readの中で変数を変更しても反映されない</title><link>https://ikorihn.github.io/digitalgarden/note/shell%E3%81%A7while-read%E3%81%AE%E4%B8%AD%E3%81%A7%E5%A4%89%E6%95%B0%E3%82%92%E5%A4%89%E6%9B%B4%E3%81%97%E3%81%A6%E3%82%82%E5%8F%8D%E6%98%A0%E3%81%95%E3%82%8C%E3%81%AA%E3%81%84/</link><pubDate>Wed, 04 Jan 2023 17:34:00 +0900</pubDate><guid>https://ikorihn.github.io/digitalgarden/note/shell%E3%81%A7while-read%E3%81%AE%E4%B8%AD%E3%81%A7%E5%A4%89%E6%95%B0%E3%82%92%E5%A4%89%E6%9B%B4%E3%81%97%E3%81%A6%E3%82%82%E5%8F%8D%E6%98%A0%E3%81%95%E3%82%8C%E3%81%AA%E3%81%84/</guid><description>while read でループ実行したいときに、パイプで値を渡すことができる。 このときに、while文の中で変数をアップデートしても、変更が反映されない 1 2 3</description></item><item><title>jqの配列でループ処理をする</title><link>https://ikorihn.github.io/digitalgarden/note/jq%E3%81%AE%E9%85%8D%E5%88%97%E3%81%A7%E3%83%AB%E3%83%BC%E3%83%97%E5%87%A6%E7%90%86%E3%82%92%E3%81%99%E3%82%8B/</link><pubDate>Wed, 04 Jan 2023 17:20:00 +0900</pubDate><guid>https://ikorihn.github.io/digitalgarden/note/jq%E3%81%AE%E9%85%8D%E5%88%97%E3%81%A7%E3%83%AB%E3%83%BC%E3%83%97%E5%87%A6%E7%90%86%E3%82%92%E3%81%99%E3%82%8B/</guid><description>1 2 3 4 5 6 7 8 9 10 11 12 13 14 [ { &amp;#34;name&amp;#34;: &amp;#34;John&amp;#34;, &amp;#34;age&amp;#34;: 20 }, { &amp;#34;name&amp;#34;: &amp;#34;Alice&amp;#34;, &amp;#34;age&amp;#34;: 25 }, { &amp;#34;name&amp;#34;: &amp;#34;Bob&amp;#34;, &amp;#34;age&amp;#34;: 14 } ] length を使ってインデックスでアクセスする 1 2 3 4 5 json=$(cat list.json) len=$(echo $json | jq length) for i in $( seq 0</description></item><item><title>jqのクエリ内でshell変数を使う</title><link>https://ikorihn.github.io/digitalgarden/note/jq%E3%81%AE%E3%82%AF%E3%82%A8%E3%83%AA%E5%86%85%E3%81%A7shell%E5%A4%89%E6%95%B0%E3%82%92%E4%BD%BF%E3%81%86/</link><pubDate>Wed, 04 Jan 2023 17:13:00 +0900</pubDate><guid>https://ikorihn.github.io/digitalgarden/note/jq%E3%81%AE%E3%82%AF%E3%82%A8%E3%83%AA%E5%86%85%E3%81%A7shell%E5%A4%89%E6%95%B0%E3%82%92%E4%BD%BF%E3%81%86/</guid><description>文字列結合で変数を埋め込む方法がまっさきに思いつく 1 2 $ name=&amp;#34;bob&amp;#34; $ cat sample.json | jq &amp;#39;.content | select( .name == &amp;#39;$name&amp;#39; )&amp;#39; よりスマートなやり方がjqのオプションである --arg を使用する jq</description></item><item><title>shellのリダイレクト</title><link>https://ikorihn.github.io/digitalgarden/note/shell%E3%81%AE%E3%83%AA%E3%83%80%E3%82%A4%E3%83%AC%E3%82%AF%E3%83%88/</link><pubDate>Wed, 04 Jan 2023 16:55:00 +0900</pubDate><guid>https://ikorihn.github.io/digitalgarden/note/shell%E3%81%AE%E3%83%AA%E3%83%80%E3%82%A4%E3%83%AC%E3%82%AF%E3%83%88/</guid><description>シェルのリダイレクトとパイプまとめ [Linux] │ Web備忘録 リダイレクト 入出力の向き先を変更する &amp;gt; n&amp;gt;&amp;amp;m とすると、ファイルディスクリプタnをmにリダイレク</description></item><item><title>shellの検索しにくい機能</title><link>https://ikorihn.github.io/digitalgarden/note/shell%E3%81%AE%E6%A4%9C%E7%B4%A2%E3%81%97%E3%81%AB%E3%81%8F%E3%81%84%E6%A9%9F%E8%83%BD/</link><pubDate>Wed, 04 Jan 2023 16:52:00 +0900</pubDate><guid>https://ikorihn.github.io/digitalgarden/note/shell%E3%81%AE%E6%A4%9C%E7%B4%A2%E3%81%97%E3%81%AB%E3%81%8F%E3%81%84%E6%A9%9F%E8%83%BD/</guid><description>bashやzshでリダイレクトの機能など検索がしにくいので、ここにメモっていく shellのプロセス置換Process Substitution shellのリダイレク</description></item><item><title>shellのプロセス置換Process Substitution</title><link>https://ikorihn.github.io/digitalgarden/note/shell%E3%81%AE%E3%83%97%E3%83%AD%E3%82%BB%E3%82%B9%E7%BD%AE%E6%8F%9BProcess-Substitution/</link><pubDate>Wed, 04 Jan 2023 16:49:00 +0900</pubDate><guid>https://ikorihn.github.io/digitalgarden/note/shell%E3%81%AE%E3%83%97%E3%83%AD%E3%82%BB%E3%82%B9%E7%BD%AE%E6%8F%9BProcess-Substitution/</guid><description>プロセス置換 (Process Substitution)について - 一から勉強させてください zsh: 14 Expansion diffとかで見るこの書き方 1 $ diff &amp;lt;(ls one.txt) &amp;lt;(ls two.txt) コマンドの結果をi</description></item><item><title>AWS Dev Day 2022 1109-1110</title><link>https://ikorihn.github.io/digitalgarden/note/AWS-Dev-Day-2022-1109-1110/</link><pubDate>Wed, 04 Jan 2023 16:36:00 +0900</pubDate><guid>https://ikorihn.github.io/digitalgarden/note/AWS-Dev-Day-2022-1109-1110/</guid><description>EKS on Fargate スタートアップの ‘次の3年’ を支えるためのインフラ技術 mBaaSからEKS on Fargateに移行した Go gRPC、Protocol Buffers サー</description></item><item><title>Docker build時にhostのsshキーを使う</title><link>https://ikorihn.github.io/digitalgarden/note/Docker-build%E6%99%82%E3%81%ABhost%E3%81%AEssh%E3%82%AD%E3%83%BC%E3%82%92%E4%BD%BF%E3%81%86/</link><pubDate>Thu, 29 Dec 2022 12:06:00 +0900</pubDate><guid>https://ikorihn.github.io/digitalgarden/note/Docker-build%E6%99%82%E3%81%ABhost%E3%81%AEssh%E3%82%AD%E3%83%BC%E3%82%92%E4%BD%BF%E3%81%86/</guid><description>#Docker #git 参考 BuildKit でイメージ構築 — Docker-docs-ja 20.10 ドキュメント docker buildする際にhost側のssh keyを使ってbuildする - Qiita Docker の BuildKit を使ってセキュアなビル</description></item><item><title>Go プライベートリポジトリに対してsshを使ってgo getする</title><link>https://ikorihn.github.io/digitalgarden/note/Go-%E3%83%97%E3%83%A9%E3%82%A4%E3%83%99%E3%83%BC%E3%83%88%E3%83%AA%E3%83%9D%E3%82%B8%E3%83%88%E3%83%AA%E3%81%AB%E5%AF%BE%E3%81%97%E3%81%A6ssh%E3%82%92%E4%BD%BF%E3%81%A3%E3%81%A6go-get%E3%81%99%E3%82%8B/</link><pubDate>Wed, 28 Dec 2022 18:05:00 +0900</pubDate><guid>https://ikorihn.github.io/digitalgarden/note/Go-%E3%83%97%E3%83%A9%E3%82%A4%E3%83%99%E3%83%BC%E3%83%88%E3%83%AA%E3%83%9D%E3%82%B8%E3%83%88%E3%83%AA%E3%81%AB%E5%AF%BE%E3%81%97%E3%81%A6ssh%E3%82%92%E4%BD%BF%E3%81%A3%E3%81%A6go-get%E3%81%99%E3%82%8B/</guid><description>#Go #git go get 時にはgit cloneが動いているのでgitの設定でコントロールできる。 tl;dr 環境変数 GOPRIVATE=&amp;lt;private repository&amp;gt; を設定する 例 export GOPRIVATE=github.com/PRIVATE 秘密鍵などsshの設定をしたい</description></item><item><title>Git fatal detected dubious ownership in repositoryエラー</title><link>https://ikorihn.github.io/digitalgarden/note/Git-fatal-detected-dubious-ownership-in-repository%E3%82%A8%E3%83%A9%E3%83%BC/</link><pubDate>Wed, 28 Dec 2022 16:39:00 +0900</pubDate><guid>https://ikorihn.github.io/digitalgarden/note/Git-fatal-detected-dubious-ownership-in-repository%E3%82%A8%E3%83%A9%E3%83%BC/</guid><description>#git 事象 gitの操作時に以下のメッセージが出て困った。 1 2 3 4 5 $ git fetch fatal: detected dubious ownership in repository at &amp;#39;/path/to/repo&amp;#39; To add an exception for this directory, call: git config --global --add safe.directory /path/to/repo 原因 CVE-2022-24765 の脆弱性への対応として</description></item><item><title>Go Sentryに送信する</title><link>https://ikorihn.github.io/digitalgarden/note/Go-Sentry%E3%81%AB%E9%80%81%E4%BF%A1%E3%81%99%E3%82%8B/</link><pubDate>Tue, 27 Dec 2022 10:12:00 +0900</pubDate><guid>https://ikorihn.github.io/digitalgarden/note/Go-Sentry%E3%81%AB%E9%80%81%E4%BF%A1%E3%81%99%E3%82%8B/</guid><description>#Go GoのコードでSentryにメッセージを送信するやり方 普通のGoのコード GoでSentryにエラーを送信する場合、 https://github.com/getsentry/sentry-go を使う。 以前はrave</description></item><item><title>aws cliでIAM情報を取得する</title><link>https://ikorihn.github.io/digitalgarden/note/aws-cli%E3%81%A7IAM%E6%83%85%E5%A0%B1%E3%82%92%E5%8F%96%E5%BE%97%E3%81%99%E3%82%8B/</link><pubDate>Mon, 26 Dec 2022 19:11:00 +0900</pubDate><guid>https://ikorihn.github.io/digitalgarden/note/aws-cli%E3%81%A7IAM%E6%83%85%E5%A0%B1%E3%82%92%E5%8F%96%E5%BE%97%E3%81%99%E3%82%8B/</guid><description>#AWS 【AWS CLI】IAM関連の情報取得編 - サーバーワークスエンジニアブログ 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 function describe_role() { local</description></item><item><title>Kubernetes Krew</title><link>https://ikorihn.github.io/digitalgarden/note/Kubernetes-Krew/</link><pubDate>Thu, 22 Dec 2022 11:18:00 +0900</pubDate><guid>https://ikorihn.github.io/digitalgarden/note/Kubernetes-Krew/</guid><description>https://krew.sigs.k8s.io/docs/user-guide/setup/install/ kubectl 向けのパッケージマネージャーツール</description></item><item><title>Go vscode-goでgoimports時にlocalを指定する</title><link>https://ikorihn.github.io/digitalgarden/note/Go-vscode-go%E3%81%A7goimports%E6%99%82%E3%81%ABlocal%E3%82%92%E6%8C%87%E5%AE%9A%E3%81%99%E3%82%8B/</link><pubDate>Thu, 22 Dec 2022 11:12:00 +0900</pubDate><guid>https://ikorihn.github.io/digitalgarden/note/Go-vscode-go%E3%81%A7goimports%E6%99%82%E3%81%ABlocal%E3%82%92%E6%8C%87%E5%AE%9A%E3%81%99%E3%82%8B/</guid><description>vscodeでGoのコードフォーマットに &amp;quot;go.formatTool&amp;quot;: &amp;quot;goimports&amp;quot; を指定していて、-local オプションが効かなかったので調べた。 -local は、-local &amp;quot;github.com/my/module&amp;quot; のように指定</description></item><item><title>Go http.ClientのConnection設定値について調査</title><link>https://ikorihn.github.io/digitalgarden/note/Go-http.Client%E3%81%AEConnection%E8%A8%AD%E5%AE%9A%E5%80%A4%E3%81%AB%E3%81%A4%E3%81%84%E3%81%A6%E8%AA%BF%E6%9F%BB/</link><pubDate>Tue, 20 Dec 2022 18:17:00 +0900</pubDate><guid>https://ikorihn.github.io/digitalgarden/note/Go-http.Client%E3%81%AEConnection%E8%A8%AD%E5%AE%9A%E5%80%A4%E3%81%AB%E3%81%A4%E3%81%84%E3%81%A6%E8%AA%BF%E6%9F%BB/</guid><description>#Go Go言語: http.Client のコネクション管理 (HTTP/1.x) - Qiita [Go] 前方互換性を保ちながらhttp.DefaultTransportからチューニングしたhttp.Tra</description></item><item><title>Go http.ServerのGraceful shutdown</title><link>https://ikorihn.github.io/digitalgarden/note/Go-http.Server%E3%81%AEGraceful-shutdown/</link><pubDate>Sun, 18 Dec 2022 13:42:00 +0900</pubDate><guid>https://ikorihn.github.io/digitalgarden/note/Go-http.Server%E3%81%AEGraceful-shutdown/</guid><description>#Go Go 1.8 からはhttp.ServerにGraceful Shutdownを行うための仕組みが備わっている context.Contextを渡すこと</description></item><item><title>Go Revel入門</title><link>https://ikorihn.github.io/digitalgarden/note/Go-Revel%E5%85%A5%E9%96%80/</link><pubDate>Wed, 14 Dec 2022 14:34:00 +0900</pubDate><guid>https://ikorihn.github.io/digitalgarden/note/Go-Revel%E5%85%A5%E9%96%80/</guid><description>https://revel.github.io/tutorial/index.html 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 # revelコマンドをインストール $ go install github.com/revel/cmd/revel@latest $ revel Usage: revel [OPTIONS] &amp;lt;command&amp;gt; Application Options: -v, --debug If set the logger is set to verbose --historic-run-mode If set the runmode is passed a string not</description></item><item><title>Go Ginに入門してみる</title><link>https://ikorihn.github.io/digitalgarden/note/Go-Gin%E3%81%AB%E5%85%A5%E9%96%80%E3%81%97%E3%81%A6%E3%81%BF%E3%82%8B/</link><pubDate>Tue, 13 Dec 2022 15:13:00 +0900</pubDate><guid>https://ikorihn.github.io/digitalgarden/note/Go-Gin%E3%81%AB%E5%85%A5%E9%96%80%E3%81%97%E3%81%A6%E3%81%BF%E3%82%8B/</guid><description>#Go Quickstart | Gin Web Framework 1 go get -u github.com/gin-gonic/gin main.go 1 2 3 4 5 6 7 8 9 10 11 12 13 package main import &amp;#34;github.com/gin-gonic/gin&amp;#34; func main() { r := gin.Default() r.GET(&amp;#34;/ping&amp;#34;, func(c *gin.Context) { c.JSON(200, gin.H{ &amp;#34;message&amp;#34;: &amp;#34;pong&amp;#34;, }) }) r.Run() // listen and serve on 0.0.0.0:8080 } Graceful shutdownを実装する https://gin-gonic.com/docs/examples/graceful-restart-or-stop/ Go h</description></item><item><title>Jenkins Jenkinsfileをcloneするディレクトリをclean upする</title><link>https://ikorihn.github.io/digitalgarden/note/Jenkins-Jenkinsfile%E3%82%92clone%E3%81%99%E3%82%8B%E3%83%87%E3%82%A3%E3%83%AC%E3%82%AF%E3%83%88%E3%83%AA%E3%82%92clean-up%E3%81%99%E3%82%8B/</link><pubDate>Mon, 12 Dec 2022 19:02:00 +0900</pubDate><guid>https://ikorihn.github.io/digitalgarden/note/Jenkins-Jenkinsfile%E3%82%92clone%E3%81%99%E3%82%8B%E3%83%87%E3%82%A3%E3%83%AC%E3%82%AF%E3%83%88%E3%83%AA%E3%82%92clean-up%E3%81%99%E3%82%8B/</guid><description>経緯 Pipelineジョブを途中でabortしたあと再実行したら、gitのindex.lockがあるためfetchができないというエラーが出</description></item><item><title>Squidで多段proxyを構成する</title><link>https://ikorihn.github.io/digitalgarden/note/Squid%E3%81%A7%E5%A4%9A%E6%AE%B5proxy%E3%82%92%E6%A7%8B%E6%88%90%E3%81%99%E3%82%8B/</link><pubDate>Mon, 12 Dec 2022 18:45:00 +0900</pubDate><guid>https://ikorihn.github.io/digitalgarden/note/Squid%E3%81%A7%E5%A4%9A%E6%AE%B5proxy%E3%82%92%E6%A7%8B%E6%88%90%E3%81%99%E3%82%8B/</guid><description>dockerコンテナ内からproxyを経由して接続したい場合、 HTTP_PROXY や HTTPS_PROXY を設定すると思う。 これはコンテナ内からproxyサーバーに疎通できるとき</description></item><item><title>kubernetes周辺の便利ツール</title><link>https://ikorihn.github.io/digitalgarden/note/kubernetes%E5%91%A8%E8%BE%BA%E3%81%AE%E4%BE%BF%E5%88%A9%E3%83%84%E3%83%BC%E3%83%AB/</link><pubDate>Sun, 11 Dec 2022 23:47:00 +0900</pubDate><guid>https://ikorihn.github.io/digitalgarden/note/kubernetes%E5%91%A8%E8%BE%BA%E3%81%AE%E4%BE%BF%E5%88%A9%E3%83%84%E3%83%BC%E3%83%AB/</guid><description>ワイがお世話になっているKubernetes関連のツール達 - 守りたい、この睡眠時間 Kubernetesを使う上で知っておきたいツールやプラグ</description></item><item><title>git shallow cloneとsparse checkoutを活用</title><link>https://ikorihn.github.io/digitalgarden/note/git-shallow-clone%E3%81%A8sparse-checkout%E3%82%92%E6%B4%BB%E7%94%A8/</link><pubDate>Fri, 09 Dec 2022 15:11:00 +0900</pubDate><guid>https://ikorihn.github.io/digitalgarden/note/git-shallow-clone%E3%81%A8sparse-checkout%E3%82%92%E6%B4%BB%E7%94%A8/</guid><description>#git Shallow clone depth を指定すると、その数のコミットログだけを取得するので、コミット数の多いリポジトリでデータ量を削減できる。 1 2 3 4 $ git clone --depth=1 git@github.com:git/git.git # -b &amp;lt;branch&amp;gt; でブ</description></item><item><title>dnsmasqをコンテナ内に立ててDNS問い合わせをキャッシュする</title><link>https://ikorihn.github.io/digitalgarden/note/dnsmasq%E3%82%92%E3%82%B3%E3%83%B3%E3%83%86%E3%83%8A%E5%86%85%E3%81%AB%E7%AB%8B%E3%81%A6%E3%81%A6DNS%E5%95%8F%E3%81%84%E5%90%88%E3%82%8F%E3%81%9B%E3%82%92%E3%82%AD%E3%83%A3%E3%83%83%E3%82%B7%E3%83%A5%E3%81%99%E3%82%8B/</link><pubDate>Wed, 07 Dec 2022 12:37:00 +0900</pubDate><guid>https://ikorihn.github.io/digitalgarden/note/dnsmasq%E3%82%92%E3%82%B3%E3%83%B3%E3%83%86%E3%83%8A%E5%86%85%E3%81%AB%E7%AB%8B%E3%81%A6%E3%81%A6DNS%E5%95%8F%E3%81%84%E5%90%88%E3%82%8F%E3%81%9B%E3%82%92%E3%82%AD%E3%83%A3%E3%83%83%E3%82%B7%E3%83%A5%E3%81%99%E3%82%8B/</guid><description>dnsmasq は小規模なネットワーク向けのDNS、DHCPサーバー。 DNSのキャッシュくらい、デフォルトであるものだと思っていたけどLinuxはそうでは</description></item><item><title>負荷試験 k6について</title><link>https://ikorihn.github.io/digitalgarden/note/%E8%B2%A0%E8%8D%B7%E8%A9%A6%E9%A8%93-k6%E3%81%AB%E3%81%A4%E3%81%84%E3%81%A6/</link><pubDate>Mon, 05 Dec 2022 18:09:00 +0900</pubDate><guid>https://ikorihn.github.io/digitalgarden/note/%E8%B2%A0%E8%8D%B7%E8%A9%A6%E9%A8%93-k6%E3%81%AB%E3%81%A4%E3%81%84%E3%81%A6/</guid><description>locust を使っているが、パフォーマンスがあまりよくなくてslaveを起動しないといけないのが微妙に思ったので他のツールがないかを調べてみた。 要件と</description></item><item><title>zsh 呼び出し元のfunction名を取得する</title><link>https://ikorihn.github.io/digitalgarden/note/zsh-%E5%91%BC%E3%81%B3%E5%87%BA%E3%81%97%E5%85%83%E3%81%AEfunction%E5%90%8D%E3%82%92%E5%8F%96%E5%BE%97%E3%81%99%E3%82%8B/</link><pubDate>Wed, 30 Nov 2022 19:34:00 +0900</pubDate><guid>https://ikorihn.github.io/digitalgarden/note/zsh-%E5%91%BC%E3%81%B3%E5%87%BA%E3%81%97%E5%85%83%E3%81%AEfunction%E5%90%8D%E3%82%92%E5%8F%96%E5%BE%97%E3%81%99%E3%82%8B/</guid><description>https://stackoverflow.com/questions/31426565/get-name-of-calling-function-in-zsh 1 2 3 4 5 6 7 8 9 10 11 12 function a(){ c } function b(){ c } function c(){ #if a call me; then... #if b call me; then... } bash ${FUNCNAME[1]} is a (caller name) ${FUNCNAME[0]} is c (current name) zsh $funcstack ${funcstack[2]} is a (caller name) ${funcstack[1]} is c (current name)</description></item><item><title>AWS Lambdaでtmpを使うときの注意</title><link>https://ikorihn.github.io/digitalgarden/note/AWS-Lambda%E3%81%A7tmp%E3%82%92%E4%BD%BF%E3%81%86%E3%81%A8%E3%81%8D%E3%81%AE%E6%B3%A8%E6%84%8F/</link><pubDate>Wed, 30 Nov 2022 19:13:00 +0900</pubDate><guid>https://ikorihn.github.io/digitalgarden/note/AWS-Lambda%E3%81%A7tmp%E3%82%92%E4%BD%BF%E3%81%86%E3%81%A8%E3%81%8D%E3%81%AE%E6%B3%A8%E6%84%8F/</guid><description>#Go #Lambda https://aws.amazon.com/jp/about-aws/whats-new/2022/03/aws-lambda-configure-ephemeral-storage/ https://cloud5.jp/lambda_tmp_directory/ /tmp を一時領域として10GBまで使うことができる。 Lambdaは一定期間同じインスタンスが再利用され、/tmp 領域も使い回される。 zi</description></item><item><title>GoのメトリクスをPrometheusで収集する</title><link>https://ikorihn.github.io/digitalgarden/note/Go%E3%81%AE%E3%83%A1%E3%83%88%E3%83%AA%E3%82%AF%E3%82%B9%E3%82%92Prometheus%E3%81%A7%E5%8F%8E%E9%9B%86%E3%81%99%E3%82%8B/</link><pubDate>Tue, 22 Nov 2022 16:48:00 +0900</pubDate><guid>https://ikorihn.github.io/digitalgarden/note/Go%E3%81%AE%E3%83%A1%E3%83%88%E3%83%AA%E3%82%AF%E3%82%B9%E3%82%92Prometheus%E3%81%A7%E5%8F%8E%E9%9B%86%E3%81%99%E3%82%8B/</guid><description>http.ServerのメトリクスをPrometheusで出力する https://prometheus.io/docs/tutorials/instrumenting_http_server_in_go/ 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 package main import ( &amp;#34;fmt&amp;#34; &amp;#34;net/http&amp;#34; &amp;#34;github.com/prometheus/client_golang/prometheus&amp;#34;</description></item><item><title>Go echoサーバーのテスト</title><link>https://ikorihn.github.io/digitalgarden/note/Go-echo%E3%82%B5%E3%83%BC%E3%83%90%E3%83%BC%E3%81%AE%E3%83%86%E3%82%B9%E3%83%88/</link><pubDate>Tue, 22 Nov 2022 16:42:00 +0900</pubDate><guid>https://ikorihn.github.io/digitalgarden/note/Go-echo%E3%82%B5%E3%83%BC%E3%83%90%E3%83%BC%E3%81%AE%E3%83%86%E3%82%B9%E3%83%88/</guid><description>#Go echoのHandlerのテストは基本公式ドキュメントの通りにやればできる https://echo.labstack.com/guide/testing/ ファイルのアップロードとテキストのパラメータを同時に送る https://stackoverflow.com/questions/7223616/http-post-file-multipart 1 2</description></item><item><title>Go circuit breakerパターンを実装する</title><link>https://ikorihn.github.io/digitalgarden/note/Go-circuit-breaker%E3%83%91%E3%82%BF%E3%83%BC%E3%83%B3%E3%82%92%E5%AE%9F%E8%A3%85%E3%81%99%E3%82%8B/</link><pubDate>Fri, 18 Nov 2022 10:01:00 +0900</pubDate><guid>https://ikorihn.github.io/digitalgarden/note/Go-circuit-breaker%E3%83%91%E3%82%BF%E3%83%BC%E3%83%B3%E3%82%92%E5%AE%9F%E8%A3%85%E3%81%99%E3%82%8B/</guid><description>#Go https://learn.microsoft.com/en-us/azure/architecture/framework/resiliency/reliability-patterns Make resilient Go net/http servers using timeouts, deadlines and context cancellation · Ilija Eftimov 👨‍🚀 マイクロサービスにおいてサービスがダウンしているときに一定時間アクセスを行わないようにすることで回復さ</description></item><item><title>Go gomock を使ったテスト</title><link>https://ikorihn.github.io/digitalgarden/note/Go-gomock-%E3%82%92%E4%BD%BF%E3%81%A3%E3%81%9F%E3%83%86%E3%82%B9%E3%83%88/</link><pubDate>Thu, 17 Nov 2022 13:50:00 +0900</pubDate><guid>https://ikorihn.github.io/digitalgarden/note/Go-gomock-%E3%82%92%E4%BD%BF%E3%81%A3%E3%81%9F%E3%83%86%E3%82%B9%E3%83%88/</guid><description>#Go https://github.com/golang/mock Goのinterfaceからmockを生成するツール + 生成したコードをテストコード内で利用するためのライブラリ s3api.go 1 2 3 4 5 type S3Api interface { DeleteObject(ctx context.Context, params</description></item><item><title>Kubernetes configMapGeneratorを使う</title><link>https://ikorihn.github.io/digitalgarden/note/Kubernetes-configMapGenerator%E3%82%92%E4%BD%BF%E3%81%86/</link><pubDate>Tue, 08 Nov 2022 16:08:00 +0900</pubDate><guid>https://ikorihn.github.io/digitalgarden/note/Kubernetes-configMapGenerator%E3%82%92%E4%BD%BF%E3%81%86/</guid><description>#Kubernetes Kustomize の場合、ConfigMapを直接指定する代わりにconfigMapGeneratorを使用して作成できる https://kubernetes.io/docs/tasks/manage-kubernetes-objects/kustomization/ https://github.com/kubernetes-sigs/kustomize/blob/master/examples/configGeneration.md literals: key-valueを指定す</description></item><item><title>Node.js Docker buildのベストプラクティス</title><link>https://ikorihn.github.io/digitalgarden/note/Node.js-Docker-build%E3%81%AE%E3%83%99%E3%82%B9%E3%83%88%E3%83%97%E3%83%A9%E3%82%AF%E3%83%86%E3%82%A3%E3%82%B9/</link><pubDate>Thu, 27 Oct 2022 18:42:00 +0900</pubDate><guid>https://ikorihn.github.io/digitalgarden/note/Node.js-Docker-build%E3%81%AE%E3%83%99%E3%82%B9%E3%83%88%E3%83%97%E3%83%A9%E3%82%AF%E3%83%86%E3%82%A3%E3%82%B9/</guid><description>#Nodejs #Docker Node.jsのDockerfile作成のベストプラクティス DockerでNode.jsを動かすときのベストプラクティス マルチステージビ</description></item><item><title>Node.js npm installを早くしたい</title><link>https://ikorihn.github.io/digitalgarden/note/Node.js-npm-install%E3%82%92%E6%97%A9%E3%81%8F%E3%81%97%E3%81%9F%E3%81%84/</link><pubDate>Thu, 27 Oct 2022 18:42:00 +0900</pubDate><guid>https://ikorihn.github.io/digitalgarden/note/Node.js-npm-install%E3%82%92%E6%97%A9%E3%81%8F%E3%81%97%E3%81%9F%E3%81%84/</guid><description>#Nodejs #Docker 依存関係解決を早くしたい npm ci を使う CI/CDでnpm ciする際は ~/.npm をキャッシュしよう | DevelopersIO npm ciを使おう あるいはより速く - Qiita package-lock.json のみを見て依</description></item><item><title>Jenkins bitbucket-pipelinesで動かす</title><link>https://ikorihn.github.io/digitalgarden/note/Jenkins-bitbucket-pipelines%E3%81%A7%E5%8B%95%E3%81%8B%E3%81%99/</link><pubDate>Sun, 23 Oct 2022 22:18:00 +0900</pubDate><guid>https://ikorihn.github.io/digitalgarden/note/Jenkins-bitbucket-pipelines%E3%81%A7%E5%8B%95%E3%81%8B%E3%81%99/</guid><description>Jenkinsをhelm chartを使ってk8sで動かしていて、JCasCのコードをGitで管理していて、設定が正しいのかどうかは反映される</description></item><item><title>Confluence REST APIでページをまとめて移動</title><link>https://ikorihn.github.io/digitalgarden/note/Confluence-REST-API%E3%81%A7%E3%83%9A%E3%83%BC%E3%82%B8%E3%82%92%E3%81%BE%E3%81%A8%E3%82%81%E3%81%A6%E7%A7%BB%E5%8B%95/</link><pubDate>Thu, 20 Oct 2022 16:03:00 +0900</pubDate><guid>https://ikorihn.github.io/digitalgarden/note/Confluence-REST-API%E3%81%A7%E3%83%9A%E3%83%BC%E3%82%B8%E3%82%92%E3%81%BE%E3%81%A8%E3%82%81%E3%81%A6%E7%A7%BB%E5%8B%95/</guid><description>2022-10-20現在、Confluenceのページを一括で移動するような機能はないみたい https://community.atlassian.com/t5/Confluence-questions/How-do-I-bulk-delete-or-move-pages-in-cloud-Confluence/qaq-p/1634378 なので作った 1 2 3 4 5 6 7 parent_page_id=$1 target_page_id=$2 child_pages=$(curl -u ${user_email}:${password} &amp;#34;${CONFLUENCE_BASE_URL}/content/${parent_page_id}/child/page&amp;#34;) echo $child_pages | jq</description></item><item><title>Confluence REST APIでページをコピー</title><link>https://ikorihn.github.io/digitalgarden/note/Confluence-REST-API%E3%81%A7%E3%83%9A%E3%83%BC%E3%82%B8%E3%82%92%E3%82%B3%E3%83%94%E3%83%BC/</link><pubDate>Thu, 20 Oct 2022 15:19:00 +0900</pubDate><guid>https://ikorihn.github.io/digitalgarden/note/Confluence-REST-API%E3%81%A7%E3%83%9A%E3%83%BC%E3%82%B8%E3%82%92%E3%82%B3%E3%83%94%E3%83%BC/</guid><description>#confluence 定期開催されるミーティングの議事録を作るのを簡略化したかった。 前回の議事録をコピーして追記していくスタイルだったため、 あるページ配下の最新</description></item><item><title>CIプラットフォームのDaggerを試す</title><link>https://ikorihn.github.io/digitalgarden/note/CI%E3%83%97%E3%83%A9%E3%83%83%E3%83%88%E3%83%95%E3%82%A9%E3%83%BC%E3%83%A0%E3%81%AEDagger%E3%82%92%E8%A9%A6%E3%81%99/</link><pubDate>Mon, 17 Oct 2022 14:16:00 +0900</pubDate><guid>https://ikorihn.github.io/digitalgarden/note/CI%E3%83%97%E3%83%A9%E3%83%83%E3%83%88%E3%83%95%E3%82%A9%E3%83%BC%E3%83%A0%E3%81%AEDagger%E3%82%92%E8%A9%A6%E3%81%99/</guid><description>#CICD Overview | Dagger CI・CD界隈期待の星!!Daggerに入門してローカルとGithubActionsでCIを動かしてみた | DevelopersIO ポータブルなCI/CDパ</description></item><item><title>kibana 正規表現でクエリを書く</title><link>https://ikorihn.github.io/digitalgarden/note/kibana-%E6%AD%A3%E8%A6%8F%E8%A1%A8%E7%8F%BE%E3%81%A7%E3%82%AF%E3%82%A8%E3%83%AA%E3%82%92%E6%9B%B8%E3%81%8F/</link><pubDate>Thu, 13 Oct 2022 15:16:00 +0900</pubDate><guid>https://ikorihn.github.io/digitalgarden/note/kibana-%E6%AD%A3%E8%A6%8F%E8%A1%A8%E7%8F%BE%E3%81%A7%E3%82%AF%E3%82%A8%E3%83%AA%E3%82%92%E6%9B%B8%E3%81%8F/</guid><description>KibanaはElasticsearchの記法でクエリを書くので、こちらのドキュメントを参照する Regexp query | Elasticsearch Guide [8.4] | Elastic 1 2 3 4 5 6 7 8 9 10 11 12 13 {</description></item><item><title>記事メモ ZOZOTOWNのGo言語におけるマイクロサービス開発の共通規約を守るための取り組み</title><link>https://ikorihn.github.io/digitalgarden/note/%E8%A8%98%E4%BA%8B%E3%83%A1%E3%83%A2-ZOZOTOWN%E3%81%AEGo%E8%A8%80%E8%AA%9E%E3%81%AB%E3%81%8A%E3%81%91%E3%82%8B%E3%83%9E%E3%82%A4%E3%82%AF%E3%83%AD%E3%82%B5%E3%83%BC%E3%83%93%E3%82%B9%E9%96%8B%E7%99%BA%E3%81%AE%E5%85%B1%E9%80%9A%E8%A6%8F%E7%B4%84%E3%82%92%E5%AE%88%E3%82%8B%E3%81%9F%E3%82%81%E3%81%AE%E5%8F%96%E3%82%8A%E7%B5%84%E3%81%BF/</link><pubDate>Tue, 04 Oct 2022 23:31:00 +0900</pubDate><guid>https://ikorihn.github.io/digitalgarden/note/%E8%A8%98%E4%BA%8B%E3%83%A1%E3%83%A2-ZOZOTOWN%E3%81%AEGo%E8%A8%80%E8%AA%9E%E3%81%AB%E3%81%8A%E3%81%91%E3%82%8B%E3%83%9E%E3%82%A4%E3%82%AF%E3%83%AD%E3%82%B5%E3%83%BC%E3%83%93%E3%82%B9%E9%96%8B%E7%99%BA%E3%81%AE%E5%85%B1%E9%80%9A%E8%A6%8F%E7%B4%84%E3%82%92%E5%AE%88%E3%82%8B%E3%81%9F%E3%82%81%E3%81%AE%E5%8F%96%E3%82%8A%E7%B5%84%E3%81%BF/</guid><description>ZOZOTOWNのGo言語におけるマイクロサービス開発の共通規約を守るための取り組み - ZOZO TECH BLOG 開発テンプレートを用意しておいて、各マイクロサー</description></item><item><title>RustでCLIを作る</title><link>https://ikorihn.github.io/digitalgarden/note/Rust%E3%81%A7CLI%E3%82%92%E4%BD%9C%E3%82%8B/</link><pubDate>Wed, 21 Sep 2022 22:47:00 +0900</pubDate><guid>https://ikorihn.github.io/digitalgarden/note/Rust%E3%81%A7CLI%E3%82%92%E4%BD%9C%E3%82%8B/</guid><description>neovimでrustを使えるようにする LSPはrust-analyzerを使う 1 brew install rust-analyzer もしくはneovimでmasonを使っている場合は :MasonInstall</description></item><item><title>数時間で完全理解！わりとゴツいKubernetesハンズオン！！をやってみる</title><link>https://ikorihn.github.io/digitalgarden/note/%E6%95%B0%E6%99%82%E9%96%93%E3%81%A7%E5%AE%8C%E5%85%A8%E7%90%86%E8%A7%A3%E3%82%8F%E3%82%8A%E3%81%A8%E3%82%B4%E3%83%84%E3%81%84Kubernetes%E3%83%8F%E3%83%B3%E3%82%BA%E3%82%AA%E3%83%B3%E3%82%92%E3%82%84%E3%81%A3%E3%81%A6%E3%81%BF%E3%82%8B/</link><pubDate>Mon, 19 Sep 2022 23:27:00 +0900</pubDate><guid>https://ikorihn.github.io/digitalgarden/note/%E6%95%B0%E6%99%82%E9%96%93%E3%81%A7%E5%AE%8C%E5%85%A8%E7%90%86%E8%A7%A3%E3%82%8F%E3%82%8A%E3%81%A8%E3%82%B4%E3%83%84%E3%81%84Kubernetes%E3%83%8F%E3%83%B3%E3%82%BA%E3%82%AA%E3%83%B3%E3%82%92%E3%82%84%E3%81%A3%E3%81%A6%E3%81%BF%E3%82%8B/</guid><description>数時間で完全理解！わりとゴツいKubernetesハンズオン！！ - Qiita ちょっと古いけど一通り体験するのによさそう 下準備 docker-deskt</description></item><item><title>Go cognitoのjwtを検証する</title><link>https://ikorihn.github.io/digitalgarden/note/Go-cognito%E3%81%AEjwt%E3%82%92%E6%A4%9C%E8%A8%BC%E3%81%99%E3%82%8B/</link><pubDate>Fri, 16 Sep 2022 12:26:00 +0900</pubDate><guid>https://ikorihn.github.io/digitalgarden/note/Go-cognito%E3%81%AEjwt%E3%82%92%E6%A4%9C%E8%A8%BC%E3%81%99%E3%82%8B/</guid><description>#Go CognitoのJWTの検証は公式ドキュメントの通りに行う JSON web トークンの検証 - Amazon Cognito 今回は https://github.com/lestrrat-go/jwx を使う 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21</description></item><item><title>xcode-selectのバージョンが古いとエラーがでる</title><link>https://ikorihn.github.io/digitalgarden/note/xcode-select%E3%81%AE%E3%83%90%E3%83%BC%E3%82%B8%E3%83%A7%E3%83%B3%E3%81%8C%E5%8F%A4%E3%81%84%E3%81%A8%E3%82%A8%E3%83%A9%E3%83%BC%E3%81%8C%E3%81%A7%E3%82%8B/</link><pubDate>Wed, 14 Sep 2022 23:36:00 +0900</pubDate><guid>https://ikorihn.github.io/digitalgarden/note/xcode-select%E3%81%AE%E3%83%90%E3%83%BC%E3%82%B8%E3%83%A7%E3%83%B3%E3%81%8C%E5%8F%A4%E3%81%84%E3%81%A8%E3%82%A8%E3%83%A9%E3%83%BC%E3%81%8C%E3%81%A7%E3%82%8B/</guid><description>1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 $ /usr/bin/git 2022-09-14 19:57:46.548 xcodebuild[4220:18896] [MT] DVTPlugInLoading: Failed to load code for plug-in com.apple.dt.IDESimulatorAvailability (/Applications/Xcode.app/Contents/PlugIns/IDESimulatorAvailability.ideplugin), error = Error Domain=NSCocoaErrorDomain Code=3588 &amp;#34;dlopen(/Applications/Xcode.app/Contents/PlugIns/IDESimulatorAvailability.ideplugin/Contents/MacOS/IDESimulatorAvailability, 0x0109): Symbol not found: (_OBJC_CLASS_$_SimDiskImage) Referenced</description></item><item><title>Jenkins helm SecretsManagerからSecretを取得してセットする</title><link>https://ikorihn.github.io/digitalgarden/note/Jenkins-helm-SecretsManager%E3%81%8B%E3%82%89Secret%E3%82%92%E5%8F%96%E5%BE%97%E3%81%97%E3%81%A6%E3%82%BB%E3%83%83%E3%83%88%E3%81%99%E3%82%8B/</link><pubDate>Tue, 13 Sep 2022 12:39:00 +0900</pubDate><guid>https://ikorihn.github.io/digitalgarden/note/Jenkins-helm-SecretsManager%E3%81%8B%E3%82%89Secret%E3%82%92%E5%8F%96%E5%BE%97%E3%81%97%E3%81%A6%E3%82%BB%E3%83%83%E3%83%88%E3%81%99%E3%82%8B/</guid><description>additionalExternalSecrets を使うのがよさそう https://github.com/jenkinsci/helm-charts/tree/main/charts/jenkins#additional-secrets additionalSecrets は3.3.1で追加されている https://github.com/jenkinsci/helm-charts/commit/f6316c95d264dbf064d0c3cc51836b364650273e ドキュメントもこのタイミングで更新されている。 https://github.com/jenkinsci/helm-charts/commit/6773a7ff4868a579f54fd6f57d01e2fd3b81e6e6 以前の書き方だと、volumes でse</description></item><item><title>kubernetes external secrets</title><link>https://ikorihn.github.io/digitalgarden/note/kubernetes-external-secrets/</link><pubDate>Tue, 13 Sep 2022 12:37:00 +0900</pubDate><guid>https://ikorihn.github.io/digitalgarden/note/kubernetes-external-secrets/</guid><description>#Kubernetes AWS Secrets Managerを使用したKubernetes Secret管理 | BTC Cloud External Secretsを試してみる - TECHSTEP</description></item><item><title>SecretsManagerをCLIで更新する</title><link>https://ikorihn.github.io/digitalgarden/note/SecretsManager%E3%82%92CLI%E3%81%A7%E6%9B%B4%E6%96%B0%E3%81%99%E3%82%8B/</link><pubDate>Mon, 12 Sep 2022 19:15:00 +0900</pubDate><guid>https://ikorihn.github.io/digitalgarden/note/SecretsManager%E3%82%92CLI%E3%81%A7%E6%9B%B4%E6%96%B0%E3%81%99%E3%82%8B/</guid><description>#AWS aws cli(v1) secretsmanager コマンドで取得、更新したい https://docs.aws.amazon.com/cli/latest/reference/secretsmanager/index.html 必要権限 GetSecretValue PutSecretValue コマンド 取得 1 2 3 4 5 6 7 8 9 10 11 $ aws --region ap-northeast-1 secretsmanager get-secret-value --secret-id my_secret { &amp;#34;ARN&amp;#34;: &amp;#34;arn:aws:secretsmanager:ap-northeast-1:xxxxxxxxx:secret:my_secret_xxxxxxx&amp;#34;, &amp;#34;Name&amp;#34;: &amp;#34;my_secret&amp;#34;, &amp;#34;VersionId&amp;#34;: &amp;#34;&amp;lt;UUID&amp;gt;&amp;#34;, &amp;#34;SecretString&amp;#34;: &amp;#34;{\n \&amp;#34;user\&amp;#34;: \&amp;#34;foo\&amp;#34;,\n \&amp;#34;password\&amp;#34;: \&amp;#34;bar\&amp;#34; }&amp;#34;, &amp;#34;VersionStages&amp;#34;: [ &amp;#34;AWSCURRENT&amp;#34; ], &amp;#34;CreatedDate&amp;#34;: 16620000000 }</description></item><item><title>jq</title><link>https://ikorihn.github.io/digitalgarden/note/jq/</link><pubDate>Mon, 29 Aug 2022 14:39:00 +0900</pubDate><guid>https://ikorihn.github.io/digitalgarden/note/jq/</guid><description>vimでjqコマンドを使いやすくする 1 2 3 4 5 6 7 8 9 10 &amp;#34; jq command command! -nargs=? Jq call s:Jq(&amp;lt;f-args&amp;gt;) function! s:Jq(...) if 0 == a:0 let l:arg = &amp;#34;.&amp;#34; else let l:arg = a:1 endif execute &amp;#34;%! jq &amp;#34; . l:arg endfunction 配列の長さを調べる 1 jq</description></item><item><title>Jenkins shared library</title><link>https://ikorihn.github.io/digitalgarden/note/Jenkins-shared-library/</link><pubDate>Fri, 26 Aug 2022 19:13:00 +0900</pubDate><guid>https://ikorihn.github.io/digitalgarden/note/Jenkins-shared-library/</guid><description>note/Jenkins で複数のプロジェクトがあって、それぞれにビルドやデプロイのジョブを作成している。 同じようなステップを実行するので、共通処理をまとめてメンテ</description></item><item><title>Alpineにglibcをインストールする</title><link>https://ikorihn.github.io/digitalgarden/note/Alpine%E3%81%ABglibc%E3%82%92%E3%82%A4%E3%83%B3%E3%82%B9%E3%83%88%E3%83%BC%E3%83%AB%E3%81%99%E3%82%8B/</link><pubDate>Mon, 22 Aug 2022 12:53:00 +0900</pubDate><guid>https://ikorihn.github.io/digitalgarden/note/Alpine%E3%81%ABglibc%E3%82%92%E3%82%A4%E3%83%B3%E3%82%B9%E3%83%88%E3%83%BC%E3%83%AB%E3%81%99%E3%82%8B/</guid><description>#Docker Alpine Linuxにインストールされているのは glibc ではなくて musl-libc なので、適当にソフトウェアをインストールしても動かないということがたびたび発生する。</description></item><item><title>Neovimの設定をluaに移行する</title><link>https://ikorihn.github.io/digitalgarden/note/Neovim%E3%81%AE%E8%A8%AD%E5%AE%9A%E3%82%92lua%E3%81%AB%E7%A7%BB%E8%A1%8C%E3%81%99%E3%82%8B/</link><pubDate>Sun, 21 Aug 2022 18:38:00 +0900</pubDate><guid>https://ikorihn.github.io/digitalgarden/note/Neovim%E3%81%AE%E8%A8%AD%E5%AE%9A%E3%82%92lua%E3%81%AB%E7%A7%BB%E8%A1%8C%E3%81%99%E3%82%8B/</guid><description>Neovim 0.5からは init.lua にlua言語で書くことができるようになっている。 最近のpluginの説明文を見るとluaで書かれていることが増えてきた。 plugin m</description></item><item><title>wezterm</title><link>https://ikorihn.github.io/digitalgarden/note/wezterm/</link><pubDate>Sat, 20 Aug 2022 22:21:00 +0900</pubDate><guid>https://ikorihn.github.io/digitalgarden/note/wezterm/</guid><description>tab title, pane titleにcurrent pathを設定する OSC https://wezfurlong.org/wezterm/shell-integration.html のページに OSC 133 という単語が出てくる。 エスケープシーケンスで意味のあるマークを挿入して、</description></item><item><title>zshの起動が遅いのを解消した</title><link>https://ikorihn.github.io/digitalgarden/note/zsh%E3%81%AE%E8%B5%B7%E5%8B%95%E3%81%8C%E9%81%85%E3%81%84%E3%81%AE%E3%82%92%E8%A7%A3%E6%B6%88%E3%81%97%E3%81%9F/</link><pubDate>Thu, 21 Jul 2022 15:13:00 +0900</pubDate><guid>https://ikorihn.github.io/digitalgarden/note/zsh%E3%81%AE%E8%B5%B7%E5%8B%95%E3%81%8C%E9%81%85%E3%81%84%E3%81%AE%E3%82%92%E8%A7%A3%E6%B6%88%E3%81%97%E3%81%9F/</guid><description>zsh Zinitに変える をしたけど遅くなってきたので調査した 調査方法 〇〇envのせいでzshの起動が遅いからチューニングした - Qiita 起動速度の計測 1</description></item><item><title>Jenkins スクリプトコンソールでpluginやジョブを一覧で出力する</title><link>https://ikorihn.github.io/digitalgarden/note/Jenkins-%E3%82%B9%E3%82%AF%E3%83%AA%E3%83%97%E3%83%88%E3%82%B3%E3%83%B3%E3%82%BD%E3%83%BC%E3%83%AB%E3%81%A7plugin%E3%82%84%E3%82%B8%E3%83%A7%E3%83%96%E3%82%92%E4%B8%80%E8%A6%A7%E3%81%A7%E5%87%BA%E5%8A%9B%E3%81%99%E3%82%8B/</link><pubDate>Wed, 20 Jul 2022 15:22:00 +0900</pubDate><guid>https://ikorihn.github.io/digitalgarden/note/Jenkins-%E3%82%B9%E3%82%AF%E3%83%AA%E3%83%97%E3%83%88%E3%82%B3%E3%83%B3%E3%82%BD%E3%83%BC%E3%83%AB%E3%81%A7plugin%E3%82%84%E3%82%B8%E3%83%A7%E3%83%96%E3%82%92%E4%B8%80%E8%A6%A7%E3%81%A7%E5%87%BA%E5%8A%9B%E3%81%99%E3%82%8B/</guid><description>plugin一覧を出力する 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 def pluginList = new ArrayList(Jenkins.instance.pluginManager.plugins) pluginList.sort { it.getShortName() }.each{ plugin -&amp;gt; println (&amp;#34;${plugin.getShortName()}:${plugin.getVersion()}&amp;#34;) } // アップデート一覧 UpdateCenter uc = Jenkins.get().updateCenter def plugins = Jenkins.get().pluginManager.plugins plugins.toSorted</description></item><item><title>Jenkins PluginをM1 Macで開発する</title><link>https://ikorihn.github.io/digitalgarden/note/Jenkins-Plugin%E3%82%92M1-Mac%E3%81%A7%E9%96%8B%E7%99%BA%E3%81%99%E3%82%8B/</link><pubDate>Tue, 12 Jul 2022 12:23:00 +0900</pubDate><guid>https://ikorihn.github.io/digitalgarden/note/Jenkins-Plugin%E3%82%92M1-Mac%E3%81%A7%E9%96%8B%E7%99%BA%E3%81%99%E3%82%8B/</guid><description>note/Jenkins のプラグインを開発する Java8が必要 mvn hpi:hpi でビルドするだけならJDK8がインストールされていればOK Jenkins上で確認したい Docke</description></item><item><title>M1Macでdockerのvolumeはどこにあるの</title><link>https://ikorihn.github.io/digitalgarden/note/M1Mac%E3%81%A7docker%E3%81%AEvolume%E3%81%AF%E3%81%A9%E3%81%93%E3%81%AB%E3%81%82%E3%82%8B%E3%81%AE/</link><pubDate>Tue, 12 Jul 2022 11:33:00 +0900</pubDate><guid>https://ikorihn.github.io/digitalgarden/note/M1Mac%E3%81%A7docker%E3%81%AEvolume%E3%81%AF%E3%81%A9%E3%81%93%E3%81%AB%E3%81%82%E3%82%8B%E3%81%AE/</guid><description>#Docker ほぼこれの通り Docker Desktop for MacのHyperKit VMに入る 1 $ docker run -it --rm --name volume-test-container -v test-volume:/volume_dir alpine:latest /bin/ash 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 $ docker inspect volume-test-container [ { &amp;#34;Id&amp;#34;: &amp;#34;625a47db9275478db8235dc85f8711cc6a50fe5924f9e42f7f7ec23434f934e9&amp;#34;, &amp;#34;Mounts&amp;#34;: [ {</description></item><item><title>Jenkins Configuration as Code</title><link>https://ikorihn.github.io/digitalgarden/note/Jenkins-Configuration-as-Code/</link><pubDate>Thu, 07 Jul 2022 19:51:00 +0900</pubDate><guid>https://ikorihn.github.io/digitalgarden/note/Jenkins-Configuration-as-Code/</guid><description>JCasC Jenkinsの設定をコード化するプラグイン https://github.com/jenkinsci/configuration-as-code-plugin Kubernetesで使用する helmを使う https://github.com/jenkinsci/helm-charts CASC_JENKINS_CONFIG=/var/jenkins_home/casc_config が設定されているので、ここに設定が置かれるよ</description></item><item><title>Jenkins JobDSL Tips 外部ファイルをimportするなど</title><link>https://ikorihn.github.io/digitalgarden/note/Jenkins-JobDSL-Tips-%E5%A4%96%E9%83%A8%E3%83%95%E3%82%A1%E3%82%A4%E3%83%AB%E3%82%92import%E3%81%99%E3%82%8B%E3%81%AA%E3%81%A9/</link><pubDate>Thu, 07 Jul 2022 19:20:00 +0900</pubDate><guid>https://ikorihn.github.io/digitalgarden/note/Jenkins-JobDSL-Tips-%E5%A4%96%E9%83%A8%E3%83%95%E3%82%A1%E3%82%A4%E3%83%AB%E3%82%92import%E3%81%99%E3%82%8B%E3%81%AA%E3%81%A9/</guid><description>Jenkins Job DSL Plugin のTIPS job DSLのサンプル集 https://github.com/edx/jenkins-job-dsl https://github.com/sheehan/job-dsl-gradle-example https://github.com/unguiculus/job-dsl-sample 上級者向けオプション https://github.com/jenkinsci/job-dsl-plugin/blob/master/docs/User-Power-Moves.md JCasCとの連携 https://github.com/jenkinsci/job-dsl-plugin/blob/master/docs/JCasC.md You can pass values from the YAML file to the Job DSL script. 共通で使える変数を定義する 1</description></item><item><title>Jenkins JobDSLをCIでvalidateしたい</title><link>https://ikorihn.github.io/digitalgarden/note/Jenkins-JobDSL%E3%82%92CI%E3%81%A7validate%E3%81%97%E3%81%9F%E3%81%84/</link><pubDate>Thu, 07 Jul 2022 19:17:00 +0900</pubDate><guid>https://ikorihn.github.io/digitalgarden/note/Jenkins-JobDSL%E3%82%92CI%E3%81%A7validate%E3%81%97%E3%81%9F%E3%81%84/</guid><description>Jenkins Job DSL Plugin job-dsl-plugin/Testing-DSL-Scripts.md at master · jenkinsci/job-dsl-plugin · GitHub 公式でtestの方法書いてくれたのでまずはこれを試してみる gradle初期化 1 gradle init サンプルはバージョン古くて動かなかっ</description></item><item><title>JenkinfsfileをCIでvalidateしたい</title><link>https://ikorihn.github.io/digitalgarden/note/Jenkinfsfile%E3%82%92CI%E3%81%A7validate%E3%81%97%E3%81%9F%E3%81%84/</link><pubDate>Thu, 07 Jul 2022 11:27:00 +0900</pubDate><guid>https://ikorihn.github.io/digitalgarden/note/Jenkinfsfile%E3%82%92CI%E3%81%A7validate%E3%81%97%E3%81%9F%E3%81%84/</guid><description>Jenkins: How do I lint Jenkins pipelines from the command line? - Stack Overflow https://www.jenkins.io/doc/book/pipeline/development/ 起動中の note/Jenkins にcurlやsshしてvalidateのAPIを叩くとチェックできる Linting via the CLI with SSH 1 2 3 4 # ssh (Jenkins CLI) # JENKINS_SSHD_PORT=[sshd</description></item><item><title>sam deployでcloudformationのstackがROLLBACK_COMPLETEになって再デプロイできなくなったとき</title><link>https://ikorihn.github.io/digitalgarden/note/sam-deploy%E3%81%A7cloudformation%E3%81%AEstack%E3%81%8CROLLBACK_COMPLETE%E3%81%AB%E3%81%AA%E3%81%A3%E3%81%A6%E5%86%8D%E3%83%87%E3%83%97%E3%83%AD%E3%82%A4%E3%81%A7%E3%81%8D%E3%81%AA%E3%81%8F%E3%81%AA%E3%81%A3%E3%81%9F%E3%81%A8%E3%81%8D/</link><pubDate>Wed, 06 Jul 2022 14:32:00 +0900</pubDate><guid>https://ikorihn.github.io/digitalgarden/note/sam-deploy%E3%81%A7cloudformation%E3%81%AEstack%E3%81%8CROLLBACK_COMPLETE%E3%81%AB%E3%81%AA%E3%81%A3%E3%81%A6%E5%86%8D%E3%83%87%E3%83%97%E3%83%AD%E3%82%A4%E3%81%A7%E3%81%8D%E3%81%AA%E3%81%8F%E3%81%AA%E3%81%A3%E3%81%9F%E3%81%A8%E3%81%8D/</guid><description>#sam #AWS sam deploy(cloudformation deploy)に失敗したときに、以下のようなメッセージがでて再実行してもエラーになる 1 Error: Failed to create/update the stack: &amp;lt;stack_name&amp;gt;, Waiter StackCreateComplete failed: Waiter encountered a terminal failure state: For expression &amp;#34;Stacks[].StackStatus&amp;#34; we matched expected path:</description></item><item><title>Jenkins pipelineで他のジョブを停止する</title><link>https://ikorihn.github.io/digitalgarden/note/Jenkins-pipeline%E3%81%A7%E4%BB%96%E3%81%AE%E3%82%B8%E3%83%A7%E3%83%96%E3%82%92%E5%81%9C%E6%AD%A2%E3%81%99%E3%82%8B/</link><pubDate>Tue, 05 Jul 2022 18:16:00 +0900</pubDate><guid>https://ikorihn.github.io/digitalgarden/note/Jenkins-pipeline%E3%81%A7%E4%BB%96%E3%81%AE%E3%82%B8%E3%83%A7%E3%83%96%E3%82%92%E5%81%9C%E6%AD%A2%E3%81%99%E3%82%8B/</guid><description>Jenkins Pipeline 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 pipeline { stages { stage(&amp;#39;abort jobs&amp;#39;) { steps { script { Jenkins.instance.getAllItems(Job.class).collectMany { job -&amp;gt; // ビルド一覧にflattenする job.builds }.findAll { build -&amp;gt; // ビルド中のジョブに絞</description></item><item><title>alpineでAndroidアプリをビルドするイメージを作成</title><link>https://ikorihn.github.io/digitalgarden/note/alpine%E3%81%A7Android%E3%82%A2%E3%83%97%E3%83%AA%E3%82%92%E3%83%93%E3%83%AB%E3%83%89%E3%81%99%E3%82%8B%E3%82%A4%E3%83%A1%E3%83%BC%E3%82%B8%E3%82%92%E4%BD%9C%E6%88%90/</link><pubDate>Tue, 05 Jul 2022 18:10:00 +0900</pubDate><guid>https://ikorihn.github.io/digitalgarden/note/alpine%E3%81%A7Android%E3%82%A2%E3%83%97%E3%83%AA%E3%82%92%E3%83%93%E3%83%AB%E3%83%89%E3%81%99%E3%82%8B%E3%82%A4%E3%83%A1%E3%83%BC%E3%82%B8%E3%82%92%E4%BD%9C%E6%88%90/</guid><description>#Docker やったこと 以下を参考にDockerfileを作成 Androidのビルド用Dockerイメージダイエット計画 - dely tech blog Androidアプリのビ</description></item><item><title>Bazel</title><link>https://ikorihn.github.io/digitalgarden/note/Bazel/</link><pubDate>Mon, 27 Jun 2022 17:56:00 +0900</pubDate><guid>https://ikorihn.github.io/digitalgarden/note/Bazel/</guid><description>Googleが開発したビルドツール Starlark というBazelのためにデザインされた Python の方言を用いてビルドのルールを記述するのが特徴で、 コンパイラの呼</description></item><item><title>Jenkinsで重いリポジトリをcloneするときに使えるテクニック</title><link>https://ikorihn.github.io/digitalgarden/note/Jenkins%E3%81%A7%E9%87%8D%E3%81%84%E3%83%AA%E3%83%9D%E3%82%B8%E3%83%88%E3%83%AA%E3%82%92clone%E3%81%99%E3%82%8B%E3%81%A8%E3%81%8D%E3%81%AB%E4%BD%BF%E3%81%88%E3%82%8B%E3%83%86%E3%82%AF%E3%83%8B%E3%83%83%E3%82%AF/</link><pubDate>Thu, 26 May 2022 14:45:00 +0900</pubDate><guid>https://ikorihn.github.io/digitalgarden/note/Jenkins%E3%81%A7%E9%87%8D%E3%81%84%E3%83%AA%E3%83%9D%E3%82%B8%E3%83%88%E3%83%AA%E3%82%92clone%E3%81%99%E3%82%8B%E3%81%A8%E3%81%8D%E3%81%AB%E4%BD%BF%E3%81%88%E3%82%8B%E3%83%86%E3%82%AF%E3%83%8B%E3%83%83%E3%82%AF/</guid><description>shallow clone, sparse checkoutを使うことで、容量を軽くしてローカルに落とすことができる Job DSLの場合 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24</description></item><item><title>vue-property-decoratorを使ったTypeScriptなVueファイルをCompositionAPIに移行する</title><link>https://ikorihn.github.io/digitalgarden/note/vue-property-decorator%E3%82%92%E4%BD%BF%E3%81%A3%E3%81%9FTypeScript%E3%81%AAVue%E3%83%95%E3%82%A1%E3%82%A4%E3%83%AB%E3%82%92CompositionAPI%E3%81%AB%E7%A7%BB%E8%A1%8C%E3%81%99%E3%82%8B/</link><pubDate>Fri, 13 May 2022 12:26:00 +0900</pubDate><guid>https://ikorihn.github.io/digitalgarden/note/vue-property-decorator%E3%82%92%E4%BD%BF%E3%81%A3%E3%81%9FTypeScript%E3%81%AAVue%E3%83%95%E3%82%A1%E3%82%A4%E3%83%AB%E3%82%92CompositionAPI%E3%81%AB%E7%A7%BB%E8%A1%8C%E3%81%99%E3%82%8B/</guid><description>class componentは非推奨になったわけではなくて今後も使えるそうですが、 TypeScriptで書く場合にVolarの恩恵を最大限受けるため</description></item><item><title>VoltaでNode.jsのバージョン管理する</title><link>https://ikorihn.github.io/digitalgarden/note/Volta%E3%81%A7Node.js%E3%81%AE%E3%83%90%E3%83%BC%E3%82%B8%E3%83%A7%E3%83%B3%E7%AE%A1%E7%90%86%E3%81%99%E3%82%8B/</link><pubDate>Fri, 13 May 2022 12:18:00 +0900</pubDate><guid>https://ikorihn.github.io/digitalgarden/note/Volta%E3%81%A7Node.js%E3%81%AE%E3%83%90%E3%83%BC%E3%82%B8%E3%83%A7%E3%83%B3%E7%AE%A1%E7%90%86%E3%81%99%E3%82%8B/</guid><description>nvm, nodenv, asdfなどいろいろバージョン管理のツールはあるがころころ移り変わるのが辛い… 現時点では Volta を使うのがよかった。 インストールしてPATHに</description></item><item><title>Goでhttpコネクションを再利用されるように書く</title><link>https://ikorihn.github.io/digitalgarden/note/Go%E3%81%A7http%E3%82%B3%E3%83%8D%E3%82%AF%E3%82%B7%E3%83%A7%E3%83%B3%E3%82%92%E5%86%8D%E5%88%A9%E7%94%A8%E3%81%95%E3%82%8C%E3%82%8B%E3%82%88%E3%81%86%E3%81%AB%E6%9B%B8%E3%81%8F/</link><pubDate>Fri, 06 May 2022 19:31:00 +0900</pubDate><guid>https://ikorihn.github.io/digitalgarden/note/Go%E3%81%A7http%E3%82%B3%E3%83%8D%E3%82%AF%E3%82%B7%E3%83%A7%E3%83%B3%E3%82%92%E5%86%8D%E5%88%A9%E7%94%A8%E3%81%95%E3%82%8C%E3%82%8B%E3%82%88%E3%81%86%E3%81%AB%E6%9B%B8%E3%81%8F/</guid><description>#Go responseを捨ててしまうと、resp.Body.Close() ができなくなるのでだめ 最後まで読み切ってCloseしてないとkeep-</description></item><item><title>vue-tsc</title><link>https://ikorihn.github.io/digitalgarden/note/vue-tsc/</link><pubDate>Tue, 26 Apr 2022 23:43:00 +0900</pubDate><guid>https://ikorihn.github.io/digitalgarden/note/vue-tsc/</guid><description>ViteでVue3のTypescript環境を構築する | miyauci.me vue-tsc を使った TypeScript Strict Mode の漸進的導入 - VisasQ Dev Blog volar/packages/vue-tsc at master · johnsoncodehk/volar · GitHub eslintだけではTypeSc</description></item><item><title>Go Conference 2022 Spring</title><link>https://ikorihn.github.io/digitalgarden/note/Go-Conference-2022-Spring/</link><pubDate>Sat, 23 Apr 2022 10:36:00 +0900</pubDate><guid>https://ikorihn.github.io/digitalgarden/note/Go-Conference-2022-Spring/</guid><description>#Go #meetup https://gocon.jp/2022spring/schedule/#day_2022-04-23 資料まとめ Go Conference 2022 Spring参加メモ 静的解析 go/ast めっちゃ便利じゃん、意外と難しくない ファイルを読み込んでastでパースするといい感じにツ</description></item><item><title>lodashを使いたくないでござる</title><link>https://ikorihn.github.io/digitalgarden/note/lodash%E3%82%92%E4%BD%BF%E3%81%84%E3%81%9F%E3%81%8F%E3%81%AA%E3%81%84%E3%81%A7%E3%81%94%E3%81%96%E3%82%8B/</link><pubDate>Mon, 18 Apr 2022 19:58:00 +0900</pubDate><guid>https://ikorihn.github.io/digitalgarden/note/lodash%E3%82%92%E4%BD%BF%E3%81%84%E3%81%9F%E3%81%8F%E3%81%AA%E3%81%84%E3%81%A7%E3%81%94%E3%81%96%E3%82%8B/</guid><description>#JavaScript lodash やめ方 - Qiita だいたいはES6標準の書き方で書けるようになっているが、どうしてもlodashの関数を使いたいときがある。 そんなときは https://github.com/angus-c/just/ を使っ</description></item><item><title>go-taskを使ってGo,Echoの環境でホットリロードする</title><link>https://ikorihn.github.io/digitalgarden/note/go-task%E3%82%92%E4%BD%BF%E3%81%A3%E3%81%A6GoEcho%E3%81%AE%E7%92%B0%E5%A2%83%E3%81%A7%E3%83%9B%E3%83%83%E3%83%88%E3%83%AA%E3%83%AD%E3%83%BC%E3%83%89%E3%81%99%E3%82%8B/</link><pubDate>Mon, 18 Apr 2022 13:07:00 +0900</pubDate><guid>https://ikorihn.github.io/digitalgarden/note/go-task%E3%82%92%E4%BD%BF%E3%81%A3%E3%81%A6GoEcho%E3%81%AE%E7%92%B0%E5%A2%83%E3%81%A7%E3%83%9B%E3%83%83%E3%83%88%E3%83%AA%E3%83%AD%E3%83%BC%E3%83%89%E3%81%99%E3%82%8B/</guid><description>#Go GoのホットリロードはRealizeやAirを使っていたが、 go-task がいい感じにMakefileを置き換えてくれてホットリロードも実現できるので</description></item><item><title>CPUのx86やarmってなに</title><link>https://ikorihn.github.io/digitalgarden/note/CPU%E3%81%AEx86%E3%82%84arm%E3%81%A3%E3%81%A6%E3%81%AA%E3%81%AB/</link><pubDate>Sun, 17 Apr 2022 23:26:00 +0900</pubDate><guid>https://ikorihn.github.io/digitalgarden/note/CPU%E3%81%AEx86%E3%82%84arm%E3%81%A3%E3%81%A6%E3%81%AA%E3%81%AB/</guid><description>CPU と命令セットってなに？｜M1 Mac ってなに？ ぼくにも使える？ アーキテクチャ、命令セット x86: Intel,AMDの32bitアーキテクチャ x64(x86_64): x86を</description></item><item><title>OpenAPI仕様書からGoの構造体を作る</title><link>https://ikorihn.github.io/digitalgarden/note/OpenAPI%E4%BB%95%E6%A7%98%E6%9B%B8%E3%81%8B%E3%82%89Go%E3%81%AE%E6%A7%8B%E9%80%A0%E4%BD%93%E3%82%92%E4%BD%9C%E3%82%8B/</link><pubDate>Fri, 08 Apr 2022 16:28:00 +0900</pubDate><guid>https://ikorihn.github.io/digitalgarden/note/OpenAPI%E4%BB%95%E6%A7%98%E6%9B%B8%E3%81%8B%E3%82%89Go%E3%81%AE%E6%A7%8B%E9%80%A0%E4%BD%93%E3%82%92%E4%BD%9C%E3%82%8B/</guid><description>https://github.com/OpenAPITools/openapi-generator https://github.com/deepmap/oapi-codegen 1 $ oapi-codegen -generate &amp;#34;types,server&amp;#34; -package &amp;#34;openapi&amp;#34; openapi.yaml &amp;gt; openapi.gen.go oapi-codegen で生成したstructにURLパラメータをバインドできない https://github.com/deepmap/oapi-codegen/issues/500 oapi-codegen -generate &amp;quot;types&amp;quot; -package &amp;quot;openapi&amp;quot; openapi.yaml で以下のようなコードが生成される 1 2 3 4 5</description></item><item><title>jenkins JobDSLでclosure内からfunctionを呼ぶ</title><link>https://ikorihn.github.io/digitalgarden/note/jenkins-JobDSL%E3%81%A7closure%E5%86%85%E3%81%8B%E3%82%89function%E3%82%92%E5%91%BC%E3%81%B6/</link><pubDate>Wed, 30 Mar 2022 16:29:00 +0900</pubDate><guid>https://ikorihn.github.io/digitalgarden/note/jenkins-JobDSL%E3%81%A7closure%E5%86%85%E3%81%8B%E3%82%89function%E3%82%92%E5%91%BC%E3%81%B6/</guid><description>Jenkins Job DSL Plugin でいい感じに書くためのテクニック 素直に書いた場合は以下のようにそれぞれにジョブの定義を書くことになるが、共通化したい部分が出てくるこ</description></item><item><title>XDG_BASE_DIRECTORYでホームディレクトリを整理する</title><link>https://ikorihn.github.io/digitalgarden/note/XDG_BASE_DIRECTORY%E3%81%A7%E3%83%9B%E3%83%BC%E3%83%A0%E3%83%87%E3%82%A3%E3%83%AC%E3%82%AF%E3%83%88%E3%83%AA%E3%82%92%E6%95%B4%E7%90%86%E3%81%99%E3%82%8B/</link><pubDate>Mon, 21 Mar 2022 22:26:00 +0900</pubDate><guid>https://ikorihn.github.io/digitalgarden/note/XDG_BASE_DIRECTORY%E3%81%A7%E3%83%9B%E3%83%BC%E3%83%A0%E3%83%87%E3%82%A3%E3%83%AC%E3%82%AF%E3%83%88%E3%83%AA%E3%82%92%E6%95%B4%E7%90%86%E3%81%99%E3%82%8B/</guid><description>参考 ホームディレクトリのドットファイルを整理する。 XDG_CONFIG_HOMEとは https://wiki.archlinux.org/title/XDG_Base_Directory に則って、 ~/.config に設定ファイルを置くとHOMEフォルダがご</description></item><item><title>vimでマーカー文字列を埋め込んでファイルを折りたたむ</title><link>https://ikorihn.github.io/digitalgarden/note/vim%E3%81%A7%E3%83%9E%E3%83%BC%E3%82%AB%E3%83%BC%E6%96%87%E5%AD%97%E5%88%97%E3%82%92%E5%9F%8B%E3%82%81%E8%BE%BC%E3%82%93%E3%81%A7%E3%83%95%E3%82%A1%E3%82%A4%E3%83%AB%E3%82%92%E6%8A%98%E3%82%8A%E3%81%9F%E3%81%9F%E3%82%80/</link><pubDate>Fri, 18 Mar 2022 12:17:00 +0900</pubDate><guid>https://ikorihn.github.io/digitalgarden/note/vim%E3%81%A7%E3%83%9E%E3%83%BC%E3%82%AB%E3%83%BC%E6%96%87%E5%AD%97%E5%88%97%E3%82%92%E5%9F%8B%E3%82%81%E8%BE%BC%E3%82%93%E3%81%A7%E3%83%95%E3%82%A1%E3%82%A4%E3%83%AB%E3%82%92%E6%8A%98%E3%82%8A%E3%81%9F%E3%81%9F%E3%82%80/</guid><description>Vim の折りたたみ機能を使って、markerを埋め込み大きなファイルを移動しやすくすることができます。 マーカー文字列を埋め込んで、ソースコードを</description></item><item><title>Nuxt Bridge</title><link>https://ikorihn.github.io/digitalgarden/note/Nuxt-Bridge/</link><pubDate>Wed, 16 Mar 2022 22:42:00 +0900</pubDate><guid>https://ikorihn.github.io/digitalgarden/note/Nuxt-Bridge/</guid><description>#Nuxtjs https://v3.nuxtjs.org/getting-started/bridge/ Feature / Version Nuxt 2 Nuxt Bridge Nuxt 3 Vue 2 2 3 Stability 😊 Stable 😌 Semi-stable 😬 Unstable Performance 🏎 Fast ✈️ Faster 🚀 Fastest Nitro Engine ❌ ✅ ✅ ESM support 🌙 Partial 👍 Better ✅ TypeScript ☑️ Opt-in 🚧 Partial ✅ Composition API ❌ 🚧 Partial ✅ Options API ✅ ✅ ✅ Components Auto Import ✅ ✅ ✅ &amp;lt;script setup&amp;gt; syntax ❌</description></item><item><title>Nuxt Bridgeでtailwindcssを使う</title><link>https://ikorihn.github.io/digitalgarden/note/Nuxt-Bridge%E3%81%A7tailwindcss%E3%82%92%E4%BD%BF%E3%81%86/</link><pubDate>Wed, 16 Mar 2022 22:39:00 +0900</pubDate><guid>https://ikorihn.github.io/digitalgarden/note/Nuxt-Bridge%E3%81%A7tailwindcss%E3%82%92%E4%BD%BF%E3%81%86/</guid><description>#Nuxtjs Nuxt2を使っているプロジェクトに、 Nuxt Bridge をインストールすると TailwindCSS がうまく動かなかったのでメモを残します。 Nuxt 2に @nuxtjs/tailwindcss を入れる こちらでpostc</description></item><item><title>vimテクニック</title><link>https://ikorihn.github.io/digitalgarden/note/vim%E3%83%86%E3%82%AF%E3%83%8B%E3%83%83%E3%82%AF/</link><pubDate>Wed, 16 Mar 2022 12:59:00 +0900</pubDate><guid>https://ikorihn.github.io/digitalgarden/note/vim%E3%83%86%E3%82%AF%E3%83%8B%E3%83%83%E3%82%AF/</guid><description>現在のファイル内をgrepする QuickFixにわたすといい感じ :grep /pattern/ % | cw vimgrepをripgrepで行う .vimrcに以下を書く 1 2 3</description></item><item><title>愛用しているvimプラグイン</title><link>https://ikorihn.github.io/digitalgarden/blog/%E6%84%9B%E7%94%A8%E3%81%97%E3%81%A6%E3%81%84%E3%82%8Bvim%E3%83%97%E3%83%A9%E3%82%B0%E3%82%A4%E3%83%B3/</link><pubDate>Wed, 16 Mar 2022 12:55:00 +0900</pubDate><guid>https://ikorihn.github.io/digitalgarden/blog/%E6%84%9B%E7%94%A8%E3%81%97%E3%81%A6%E3%81%84%E3%82%8Bvim%E3%83%97%E3%83%A9%E3%82%B0%E3%82%A4%E3%83%B3/</guid><description>gina https://github.com/lambdalisue/gina.vim gina.vimとGitHubの連携を向上させる | Input中心のブログ fugitiveのほうが :Git log などが見やすい気がする :Gina! log で同じよう</description></item><item><title>M1 Macbook Air セットアップ2022-03</title><link>https://ikorihn.github.io/digitalgarden/note/M1-Macbook-Air-%E3%82%BB%E3%83%83%E3%83%88%E3%82%A2%E3%83%83%E3%83%972022-03/</link><pubDate>Sun, 13 Mar 2022 11:26:00 +0900</pubDate><guid>https://ikorihn.github.io/digitalgarden/note/M1-Macbook-Air-%E3%82%BB%E3%83%83%E3%83%88%E3%82%A2%E3%83%83%E3%83%972022-03/</guid><description>#Mac US配列 karbiner Obsidian defaults brew IME pyenvをやめた pythonのバージョンを切り替えて使うことがそんなにないので、 特定のバージョンを使いたくなったらdo</description></item><item><title>マイクのミュート・アンミュートを切り替える</title><link>https://ikorihn.github.io/digitalgarden/blog/%E3%83%9E%E3%82%A4%E3%82%AF%E3%81%AE%E3%83%9F%E3%83%A5%E3%83%BC%E3%83%88%E3%82%A2%E3%83%B3%E3%83%9F%E3%83%A5%E3%83%BC%E3%83%88%E3%82%92%E5%88%87%E3%82%8A%E6%9B%BF%E3%81%88%E3%82%8B/</link><pubDate>Fri, 11 Mar 2022 12:23:00 +0900</pubDate><guid>https://ikorihn.github.io/digitalgarden/blog/%E3%83%9E%E3%82%A4%E3%82%AF%E3%81%AE%E3%83%9F%E3%83%A5%E3%83%BC%E3%83%88%E3%82%A2%E3%83%B3%E3%83%9F%E3%83%A5%E3%83%BC%E3%83%88%E3%82%92%E5%88%87%E3%82%8A%E6%9B%BF%E3%81%88%E3%82%8B/</guid><description>#Mac 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 set micVolume to toggleMic() display notification micVolume with title &amp;#34;Mic&amp;#34; return micVolume on toggleMic() set inputVolume to input volume of (get volume settings) if inputVolume ≤ 5 then set inputVolume to 100 set micVal to &amp;#34;🔈 unmuted&amp;#34; else set inputVolume to 0 set micVal to &amp;#3</description></item><item><title>Raycastでマイクのミュートを切り替える</title><link>https://ikorihn.github.io/digitalgarden/blog/Raycast%E3%81%A7%E3%83%9E%E3%82%A4%E3%82%AF%E3%81%AE%E3%83%9F%E3%83%A5%E3%83%BC%E3%83%88%E3%82%92%E5%88%87%E3%82%8A%E6%9B%BF%E3%81%88%E3%82%8B/</link><pubDate>Fri, 11 Mar 2022 12:19:00 +0900</pubDate><guid>https://ikorihn.github.io/digitalgarden/blog/Raycast%E3%81%A7%E3%83%9E%E3%82%A4%E3%82%AF%E3%81%AE%E3%83%9F%E3%83%A5%E3%83%BC%E3%83%88%E3%82%92%E5%88%87%E3%82%8A%E6%9B%BF%E3%81%88%E3%82%8B/</guid><description>Raycast を使ってマイクのミュートを切り替えます Raycastの設定 &amp;gt; Extensions &amp;gt; +ボタン &amp;gt; Create Script Command &amp;gt; templateをApple Scriptにして任意の場所</description></item><item><title>Jacksonでdeserializeをカスタマイズする</title><link>https://ikorihn.github.io/digitalgarden/note/Jackson%E3%81%A7deserialize%E3%82%92%E3%82%AB%E3%82%B9%E3%82%BF%E3%83%9E%E3%82%A4%E3%82%BA%E3%81%99%E3%82%8B/</link><pubDate>Mon, 07 Mar 2022 19:30:00 +0900</pubDate><guid>https://ikorihn.github.io/digitalgarden/note/Jackson%E3%81%A7deserialize%E3%82%92%E3%82%AB%E3%82%B9%E3%82%BF%E3%83%9E%E3%82%A4%E3%82%BA%E3%81%99%E3%82%8B/</guid><description>#Kotlin #Java JSONの特定の値に応じてパースする型を変えたい JSONのtypeというパラメータによって、使うフィールドが異なる場合にパッと思いつくや</description></item><item><title>Jenkins Job DSL Plugin</title><link>https://ikorihn.github.io/digitalgarden/note/Jenkins-Job-DSL-Plugin/</link><pubDate>Mon, 07 Mar 2022 18:52:00 +0900</pubDate><guid>https://ikorihn.github.io/digitalgarden/note/Jenkins-Job-DSL-Plugin/</guid><description>note/Jenkins の設定やジョブをJob DSLという Groovy のDSLで定義することができるようになる https://plugins.jenkins.io/job-dsl/ https://github.com/jenkinsci/job-dsl-plugin 普通にプラグイン設定画面からインストール可能 Groovyの</description></item><item><title>Jenkins-job-dslで少しだけ違うジョブをまとめて定義する</title><link>https://ikorihn.github.io/digitalgarden/note/Jenkins-job-dsl%E3%81%A7%E5%B0%91%E3%81%97%E3%81%A0%E3%81%91%E9%81%95%E3%81%86%E3%82%B8%E3%83%A7%E3%83%96%E3%82%92%E3%81%BE%E3%81%A8%E3%82%81%E3%81%A6%E5%AE%9A%E7%BE%A9%E3%81%99%E3%82%8B/</link><pubDate>Mon, 07 Mar 2022 17:45:00 +0900</pubDate><guid>https://ikorihn.github.io/digitalgarden/note/Jenkins-job-dsl%E3%81%A7%E5%B0%91%E3%81%97%E3%81%A0%E3%81%91%E9%81%95%E3%81%86%E3%82%B8%E3%83%A7%E3%83%96%E3%82%92%E3%81%BE%E3%81%A8%E3%82%81%E3%81%A6%E5%AE%9A%E7%BE%A9%E3%81%99%E3%82%8B/</guid><description>Jenkins Job DSL Plugin で環境ごとにジョブが分かれていて微妙にパラメータが異なる場合や、異なるサービスで似たジョブを複製したいときはままあると思いますが。 G</description></item><item><title>WindowsでEmacsキーバインドをつかえるようにする</title><link>https://ikorihn.github.io/digitalgarden/note/Windows%E3%81%A7Emacs%E3%82%AD%E3%83%BC%E3%83%90%E3%82%A4%E3%83%B3%E3%83%89%E3%82%92%E3%81%A4%E3%81%8B%E3%81%88%E3%82%8B%E3%82%88%E3%81%86%E3%81%AB%E3%81%99%E3%82%8B/</link><pubDate>Sun, 06 Mar 2022 18:17:00 +0900</pubDate><guid>https://ikorihn.github.io/digitalgarden/note/Windows%E3%81%A7Emacs%E3%82%AD%E3%83%BC%E3%83%90%E3%82%A4%E3%83%B3%E3%83%89%E3%82%92%E3%81%A4%E3%81%8B%E3%81%88%E3%82%8B%E3%82%88%E3%81%86%E3%81%AB%E3%81%99%E3%82%8B/</guid><description>Windows 10でも「Emacs風キーバインド」を使おう【AutoHotKey】 | LFI https://github.com/lintaro-jp/gtk-emacs-theme-like.ahk を使うとemacs風のカーソル移動、文字削除ができるようになる シ</description></item><item><title>ファイル同士の比較をvimdiffで取る</title><link>https://ikorihn.github.io/digitalgarden/note/%E3%83%95%E3%82%A1%E3%82%A4%E3%83%AB%E5%90%8C%E5%A3%AB%E3%81%AE%E6%AF%94%E8%BC%83%E3%82%92vimdiff%E3%81%A7%E5%8F%96%E3%82%8B/</link><pubDate>Fri, 04 Mar 2022 13:27:00 +0900</pubDate><guid>https://ikorihn.github.io/digitalgarden/note/%E3%83%95%E3%82%A1%E3%82%A4%E3%83%AB%E5%90%8C%E5%A3%AB%E3%81%AE%E6%AF%94%E8%BC%83%E3%82%92vimdiff%E3%81%A7%E5%8F%96%E3%82%8B/</guid><description>ファイル同士の比較をvimdiffで取る 1 2 3 $ vimdiff text.txt another.txt # またはvim -d $ vim -d text.txt another.txt 現在vimで開いているファイルと指定したファイルとの差分 1 :vertical</description></item><item><title>vimでbuffer同士のdiffを取る</title><link>https://ikorihn.github.io/digitalgarden/note/vim%E3%81%A7buffer%E5%90%8C%E5%A3%AB%E3%81%AEdiff%E3%82%92%E5%8F%96%E3%82%8B/</link><pubDate>Fri, 04 Mar 2022 13:22:00 +0900</pubDate><guid>https://ikorihn.github.io/digitalgarden/note/vim%E3%81%A7buffer%E5%90%8C%E5%A3%AB%E3%81%AEdiff%E3%82%92%E5%8F%96%E3%82%8B/</guid><description>vimを開く テキストを貼り付ける :vnew でウィンドウを開く 比較したいテキストを開いたウィンドウに貼り付け :windo diffthis :diffoff で終了 ファイル同士の比較をvimdi</description></item><item><title>ネットワークに応じて処理を振り分けるスクリプト</title><link>https://ikorihn.github.io/digitalgarden/blog/%E3%83%8D%E3%83%83%E3%83%88%E3%83%AF%E3%83%BC%E3%82%AF%E3%81%AB%E5%BF%9C%E3%81%98%E3%81%A6%E5%87%A6%E7%90%86%E3%82%92%E6%8C%AF%E3%82%8A%E5%88%86%E3%81%91%E3%82%8B%E3%82%B9%E3%82%AF%E3%83%AA%E3%83%97%E3%83%88/</link><pubDate>Fri, 04 Mar 2022 10:40:00 +0900</pubDate><guid>https://ikorihn.github.io/digitalgarden/blog/%E3%83%8D%E3%83%83%E3%83%88%E3%83%AF%E3%83%BC%E3%82%AF%E3%81%AB%E5%BF%9C%E3%81%98%E3%81%A6%E5%87%A6%E7%90%86%E3%82%92%E6%8C%AF%E3%82%8A%E5%88%86%E3%81%91%E3%82%8B%E3%82%B9%E3%82%AF%E3%83%AA%E3%83%97%E3%83%88/</guid><description>#shell ネットワークに応じて処理を振り分けるスクリプト 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46</description></item><item><title>terminalからアプリケーションを起動・終了する</title><link>https://ikorihn.github.io/digitalgarden/note/terminal%E3%81%8B%E3%82%89%E3%82%A2%E3%83%97%E3%83%AA%E3%82%B1%E3%83%BC%E3%82%B7%E3%83%A7%E3%83%B3%E3%82%92%E8%B5%B7%E5%8B%95%E7%B5%82%E4%BA%86%E3%81%99%E3%82%8B/</link><pubDate>Fri, 04 Mar 2022 10:37:00 +0900</pubDate><guid>https://ikorihn.github.io/digitalgarden/note/terminal%E3%81%8B%E3%82%89%E3%82%A2%E3%83%97%E3%83%AA%E3%82%B1%E3%83%BC%E3%82%B7%E3%83%A7%E3%83%B3%E3%82%92%E8%B5%B7%E5%8B%95%E7%B5%82%E4%BA%86%E3%81%99%E3%82%8B/</guid><description>#shell #Mac 起動 1 osascript -e &amp;#34;quit app &amp;#39;&amp;lt;アプリケーション名&amp;gt;&amp;#39;&amp;#34; 終了 1 open -a &amp;#34;&amp;lt;アプリケーション名&amp;gt;&amp;#</description></item><item><title>GitコミットログにJIRAのチケット番号を自動付与する</title><link>https://ikorihn.github.io/digitalgarden/note/Git%E3%82%B3%E3%83%9F%E3%83%83%E3%83%88%E3%83%AD%E3%82%B0%E3%81%ABJIRA%E3%81%AE%E3%83%81%E3%82%B1%E3%83%83%E3%83%88%E7%95%AA%E5%8F%B7%E3%82%92%E8%87%AA%E5%8B%95%E4%BB%98%E4%B8%8E%E3%81%99%E3%82%8B/</link><pubDate>Mon, 21 Feb 2022 16:57:00 +0900</pubDate><guid>https://ikorihn.github.io/digitalgarden/note/Git%E3%82%B3%E3%83%9F%E3%83%83%E3%83%88%E3%83%AD%E3%82%B0%E3%81%ABJIRA%E3%81%AE%E3%83%81%E3%82%B1%E3%83%83%E3%83%88%E7%95%AA%E5%8F%B7%E3%82%92%E8%87%AA%E5%8B%95%E4%BB%98%E4%B8%8E%E3%81%99%E3%82%8B/</guid><description>#git コミットメッセージにチケット番号を入れるのはよくある運用ですが、 手動で毎回入れると漏れがでやすいので、自動でチケット番号を入れたいです。 git</description></item><item><title>Nuxt.jsでRepositoryFactoryパターンを実装する</title><link>https://ikorihn.github.io/digitalgarden/note/Nuxt.js%E3%81%A7RepositoryFactory%E3%83%91%E3%82%BF%E3%83%BC%E3%83%B3%E3%82%92%E5%AE%9F%E8%A3%85%E3%81%99%E3%82%8B/</link><pubDate>Thu, 10 Feb 2022 13:01:00 +0900</pubDate><guid>https://ikorihn.github.io/digitalgarden/note/Nuxt.js%E3%81%A7RepositoryFactory%E3%83%91%E3%82%BF%E3%83%BC%E3%83%B3%E3%82%92%E5%AE%9F%E8%A3%85%E3%81%99%E3%82%8B/</guid><description>【フォースタ テックブログ】RepositoryFactoryパターンをVueのAPIリクエストに導入する - for Startups Tech blog Nuxt.js × typescriptで</description></item><item><title>ターミナル入門</title><link>https://ikorihn.github.io/digitalgarden/blog/%E3%82%BF%E3%83%BC%E3%83%9F%E3%83%8A%E3%83%AB%E5%85%A5%E9%96%80/</link><pubDate>Wed, 09 Feb 2022 10:18:00 +0900</pubDate><guid>https://ikorihn.github.io/digitalgarden/blog/%E3%82%BF%E3%83%BC%E3%83%9F%E3%83%8A%E3%83%AB%E5%85%A5%E9%96%80/</guid><description>私のターミナル歴 2015 新卒入社 Windows時代 まだコマンドプロンプトって黒い画面で怖いと思っていた コマンドプロンプトでantのbuildをする</description></item><item><title>Jenkinsfileをリロードする</title><link>https://ikorihn.github.io/digitalgarden/note/Jenkinsfile%E3%82%92%E3%83%AA%E3%83%AD%E3%83%BC%E3%83%89%E3%81%99%E3%82%8B/</link><pubDate>Thu, 27 Jan 2022 17:01:00 +0900</pubDate><guid>https://ikorihn.github.io/digitalgarden/note/Jenkinsfile%E3%82%92%E3%83%AA%E3%83%AD%E3%83%BC%E3%83%89%E3%81%99%E3%82%8B/</guid><description>Jenkinsfile 内でパラメータを parameters ブロックで定義しても、一度実行しないと反映されない。 https://stackoverflow.com/questions/44422691/how-to-force-jenkins-to-reload-a-jenkinsfile refresh用のパラメータを定義しておくのが常套手段 1 2 3 4 5 6</description></item><item><title>Jenkinsでraw htmlを説明文に書けるようにする</title><link>https://ikorihn.github.io/digitalgarden/note/Jenkins%E3%81%A7raw-html%E3%82%92%E8%AA%AC%E6%98%8E%E6%96%87%E3%81%AB%E6%9B%B8%E3%81%91%E3%82%8B%E3%82%88%E3%81%86%E3%81%AB%E3%81%99%E3%82%8B/</link><pubDate>Tue, 25 Jan 2022 23:08:00 +0900</pubDate><guid>https://ikorihn.github.io/digitalgarden/note/Jenkins%E3%81%A7raw-html%E3%82%92%E8%AA%AC%E6%98%8E%E6%96%87%E3%81%AB%E6%9B%B8%E3%81%91%E3%82%8B%E3%82%88%E3%81%86%E3%81%AB%E3%81%99%E3%82%8B/</guid><description>htmlタグがエスケープされずに装飾できるようになる OWASP Markup Formatter をインストール グローバルセキュリティの設定 &amp;gt; マークアップ記法 &amp;gt; Safe HTML に変更</description></item><item><title>Jenkins HTML Publisherで公開したHTMLにCSSが当たらない</title><link>https://ikorihn.github.io/digitalgarden/note/Jenkins-HTML-Publisher%E3%81%A7%E5%85%AC%E9%96%8B%E3%81%97%E3%81%9FHTML%E3%81%ABCSS%E3%81%8C%E5%BD%93%E3%81%9F%E3%82%89%E3%81%AA%E3%81%84/</link><pubDate>Thu, 20 Jan 2022 16:41:00 +0900</pubDate><guid>https://ikorihn.github.io/digitalgarden/note/Jenkins-HTML-Publisher%E3%81%A7%E5%85%AC%E9%96%8B%E3%81%97%E3%81%9FHTML%E3%81%ABCSS%E3%81%8C%E5%BD%93%E3%81%9F%E3%82%89%E3%81%AA%E3%81%84/</guid><description>事象 Jenkins - HTML Publisher Plugin - No CSS is displayed when report is viewed in Jenkins Server note/Jenkins HTML Publisher Pluginで公開したhtmlで、CSSが読み込まれずスタイルが当たらない。 ブラウザのコンソール</description></item><item><title>XMLをコマンドラインで操作する</title><link>https://ikorihn.github.io/digitalgarden/note/XML%E3%82%92%E3%82%B3%E3%83%9E%E3%83%B3%E3%83%89%E3%83%A9%E3%82%A4%E3%83%B3%E3%81%A7%E6%93%8D%E4%BD%9C%E3%81%99%E3%82%8B/</link><pubDate>Mon, 17 Jan 2022 19:19:00 +0900</pubDate><guid>https://ikorihn.github.io/digitalgarden/note/XML%E3%82%92%E3%82%B3%E3%83%9E%E3%83%B3%E3%83%89%E3%83%A9%E3%82%A4%E3%83%B3%E3%81%A7%E6%93%8D%E4%BD%9C%E3%81%99%E3%82%8B/</guid><description>xmlstarlet を使ってコマンドライン上で XPath を使ったselectやupdateが可能になる インストール Macの場合 Homebrew で 1 brew install xmlstarlet 使い方 以下のようなxmlを考</description></item><item><title>Alacritty</title><link>https://ikorihn.github.io/digitalgarden/note/Alacritty/</link><pubDate>Sun, 16 Jan 2022 14:26:00 +0900</pubDate><guid>https://ikorihn.github.io/digitalgarden/note/Alacritty/</guid><description>Alacritty はRust製の高速なターミナルエミュレータ。 OpenGLでGPUレンダリングを用いて描画するためとても高速 クロスプラットフォームに対応して</description></item><item><title>Vimでアルファベットを連番で入力する</title><link>https://ikorihn.github.io/digitalgarden/note/Vim%E3%81%A7%E3%82%A2%E3%83%AB%E3%83%95%E3%82%A1%E3%83%99%E3%83%83%E3%83%88%E3%82%92%E9%80%A3%E7%95%AA%E3%81%A7%E5%85%A5%E5%8A%9B%E3%81%99%E3%82%8B/</link><pubDate>Mon, 10 Jan 2022 18:14:00 +0900</pubDate><guid>https://ikorihn.github.io/digitalgarden/note/Vim%E3%81%A7%E3%82%A2%E3%83%AB%E3%83%95%E3%82%A1%E3%83%99%E3%83%83%E3%83%88%E3%82%92%E9%80%A3%E7%95%AA%E3%81%A7%E5%85%A5%E5%8A%9B%E3%81%99%E3%82%8B/</guid><description>Vimでは C-a や C-x で数字をカウントアップ/ダウンできる。 また、矩形選択 → g&amp;lt;C-a&amp;gt; で連番をふることができる。 1 2 3 4 0 -&amp;gt; 1 0 -&amp;gt; 2 0 -&amp;gt; 3 0 -&amp;gt; 4 アルファベ</description></item><item><title>mvndを使ってmavenビルドを高速化</title><link>https://ikorihn.github.io/digitalgarden/note/mvnd%E3%82%92%E4%BD%BF%E3%81%A3%E3%81%A6maven%E3%83%93%E3%83%AB%E3%83%89%E3%82%92%E9%AB%98%E9%80%9F%E5%8C%96/</link><pubDate>Wed, 05 Jan 2022 17:32:00 +0900</pubDate><guid>https://ikorihn.github.io/digitalgarden/note/mvnd%E3%82%92%E4%BD%BF%E3%81%A3%E3%81%A6maven%E3%83%93%E3%83%AB%E3%83%89%E3%82%92%E9%AB%98%E9%80%9F%E5%8C%96/</guid><description>#Java https://github.com/apache/maven-mvnd This project aims at providing faster Maven builds using techniques known from Gradle and Takari Gradleのようにdeamonを立てることでビルドを高速化するプロジェクト。 Java 8 では動かない https://github.com/apache/maven-mvnd/issues/547 jdk &amp;gt;= 11 であ</description></item><item><title>Svelte_TypeScriptでChrome拡張つくる</title><link>https://ikorihn.github.io/digitalgarden/note/Svelte_TypeScript%E3%81%A7Chrome%E6%8B%A1%E5%BC%B5%E3%81%A4%E3%81%8F%E3%82%8B/</link><pubDate>Tue, 04 Jan 2022 23:37:00 +0900</pubDate><guid>https://ikorihn.github.io/digitalgarden/note/Svelte_TypeScript%E3%81%A7Chrome%E6%8B%A1%E5%BC%B5%E3%81%A4%E3%81%8F%E3%82%8B/</guid><description>Svelte、TailwindCSS、Jest、およびRollupで構築されたChrome拡張ボイラープレート。 - wenyanet Svelte + TypeScript</description></item><item><title>2021年振り返り</title><link>https://ikorihn.github.io/digitalgarden/blog/look-back-2021/</link><pubDate>Fri, 31 Dec 2021 23:00:00 +0900</pubDate><guid>https://ikorihn.github.io/digitalgarden/blog/look-back-2021/</guid><description>2021年にやったこと Kotlin + Spring Boot 1月〜3月ごろはKotlin + Spring Boot を触っていました。 Kotlinで初めてサーバーサイドを1から作れていい経験に</description></item><item><title>ブログにカスタムドメインを設定する</title><link>https://ikorihn.github.io/digitalgarden/note/%E3%83%96%E3%83%AD%E3%82%B0%E3%81%AB%E3%82%AB%E3%82%B9%E3%82%BF%E3%83%A0%E3%83%89%E3%83%A1%E3%82%A4%E3%83%B3%E3%82%92%E8%A8%AD%E5%AE%9A%E3%81%99%E3%82%8B/</link><pubDate>Fri, 31 Dec 2021 15:58:00 +0900</pubDate><guid>https://ikorihn.github.io/digitalgarden/note/%E3%83%96%E3%83%AD%E3%82%B0%E3%81%AB%E3%82%AB%E3%82%B9%E3%82%BF%E3%83%A0%E3%83%89%E3%83%A1%E3%82%A4%E3%83%B3%E3%82%92%E8%A8%AD%E5%AE%9A%E3%81%99%E3%82%8B/</guid><description>#blog Netlifyでデプロイしたサイトにカスタムドメインを設定したい。 ドメインの発行 お名前.comや ムームードメイン 等あるがムームードメインに</description></item><item><title>Lambdaでタイムアウトしたときに処理をしたい</title><link>https://ikorihn.github.io/digitalgarden/note/Lambda%E3%81%A7%E3%82%BF%E3%82%A4%E3%83%A0%E3%82%A2%E3%82%A6%E3%83%88%E3%81%97%E3%81%9F%E3%81%A8%E3%81%8D%E3%81%AB%E5%87%A6%E7%90%86%E3%82%92%E3%81%97%E3%81%9F%E3%81%84/</link><pubDate>Thu, 09 Dec 2021 18:14:00 +0900</pubDate><guid>https://ikorihn.github.io/digitalgarden/note/Lambda%E3%81%A7%E3%82%BF%E3%82%A4%E3%83%A0%E3%82%A2%E3%82%A6%E3%83%88%E3%81%97%E3%81%9F%E3%81%A8%E3%81%8D%E3%81%AB%E5%87%A6%E7%90%86%E3%82%92%E3%81%97%E3%81%9F%E3%81%84/</guid><description>#Go #Lambda Go の AWS Lambda context オブジェクト - AWS Lambda Lambda では実行時に context.Context を受け取ることができ、 Lambda が起動した時間＋Lambdaのタイムアウト秒を DeadLine として取得することが</description></item><item><title>Prestoで配列を行に変換する</title><link>https://ikorihn.github.io/digitalgarden/note/Presto%E3%81%A7%E9%85%8D%E5%88%97%E3%82%92%E8%A1%8C%E3%81%AB%E5%A4%89%E6%8F%9B%E3%81%99%E3%82%8B/</link><pubDate>Thu, 09 Dec 2021 16:46:00 +0900</pubDate><guid>https://ikorihn.github.io/digitalgarden/note/Presto%E3%81%A7%E9%85%8D%E5%88%97%E3%82%92%E8%A1%8C%E3%81%AB%E5%A4%89%E6%8F%9B%E3%81%99%E3%82%8B/</guid><description>横持ちのテーブルを縦持ちに変換する PrestoのUNNESTを利用した横縦変換 | 分析ノート 横持ちのテーブル(htable) uid c1 c2 c3 101 11 12 13 102</description></item><item><title>aws-sdk-go-v2 でのエラーハンドリング</title><link>https://ikorihn.github.io/digitalgarden/note/aws-sdk-go-v2-%E3%81%A7%E3%81%AE%E3%82%A8%E3%83%A9%E3%83%BC%E3%83%8F%E3%83%B3%E3%83%89%E3%83%AA%E3%83%B3%E3%82%B0/</link><pubDate>Wed, 01 Dec 2021 10:54:00 +0900</pubDate><guid>https://ikorihn.github.io/digitalgarden/note/aws-sdk-go-v2-%E3%81%A7%E3%81%AE%E3%82%A8%E3%83%A9%E3%83%BC%E3%83%8F%E3%83%B3%E3%83%89%E3%83%AA%E3%83%B3%E3%82%B0/</guid><description>#Go #AWS aws-sdk-go-v2 でのエラーハンドリング https://aws.github.io/aws-sdk-go-v2/docs/migrating/#errors-types v1ではawserrパッケージがあったが、v2では github.com/aws/aws-sdk-go-v2/service/&amp;lt;service&amp;gt;/types に該当のエラーの型があるのでcastする 1 2 3 4 5 6 7 8 9</description></item><item><title>goでDBに絡むテストをしたい</title><link>https://ikorihn.github.io/digitalgarden/note/go%E3%81%A7DB%E3%81%AB%E7%B5%A1%E3%82%80%E3%83%86%E3%82%B9%E3%83%88%E3%82%92%E3%81%97%E3%81%9F%E3%81%84/</link><pubDate>Sun, 28 Nov 2021 22:29:00 +0900</pubDate><guid>https://ikorihn.github.io/digitalgarden/note/go%E3%81%A7DB%E3%81%AB%E7%B5%A1%E3%82%80%E3%83%86%E3%82%B9%E3%83%88%E3%82%92%E3%81%97%E3%81%9F%E3%81%84/</guid><description>#Go GolangでDBアクセスがあるユニットテストのやり方を考える - Qiita SQLが実行される箇所をmockする(実際にDBに接続してSQLの結果を</description></item><item><title>build.gradle.ktsでfatJarを作る</title><link>https://ikorihn.github.io/digitalgarden/note/build.gradle.kts%E3%81%A7fatJar%E3%82%92%E4%BD%9C%E3%82%8B/</link><pubDate>Fri, 12 Nov 2021 13:43:00 +0900</pubDate><guid>https://ikorihn.github.io/digitalgarden/note/build.gradle.kts%E3%81%A7fatJar%E3%82%92%E4%BD%9C%E3%82%8B/</guid><description>https://stackoverflow.com/questions/41794914/how-to-create-the-fat-jar-with-gradle-kotlin-script 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 valprojectName=&amp;#34;my-projet&amp;#34;application</description></item><item><title>TypeScriptのGatsbyをNetlifyでビルドしたときのエラーに対応した</title><link>https://ikorihn.github.io/digitalgarden/blog/build-typescript-on-netlify/</link><pubDate>Sun, 31 Oct 2021 19:00:00 +0900</pubDate><guid>https://ikorihn.github.io/digitalgarden/blog/build-typescript-on-netlify/</guid><description>事象 TypeScript化したGatsbyをNetlifyでビルドした際に以下のエラーが発生しました。 1 2 3 4 5 6 7 8 $ gatsby build error Error in &amp;#34;/opt/build/repo/gatsby-node.js&amp;#34;: Unexpected token &amp;#39;.&amp;#39; Error:</description></item><item><title>AmazonSNSを使った配信</title><link>https://ikorihn.github.io/digitalgarden/note/AmazonSNS%E3%82%92%E4%BD%BF%E3%81%A3%E3%81%9F%E9%85%8D%E4%BF%A1/</link><pubDate>Fri, 29 Oct 2021 23:23:00 +0900</pubDate><guid>https://ikorihn.github.io/digitalgarden/note/AmazonSNS%E3%82%92%E4%BD%BF%E3%81%A3%E3%81%9F%E9%85%8D%E4%BF%A1/</guid><description>#AWS Amazon SNSでプッシュ通知を送るための基礎知識 | UNITRUST Amazon Simple Notification Serviceの略。 AWS内のモバイル通知サービスで、iOSやAndroidの端末にP</description></item><item><title>zshでコマンド補完を設定する</title><link>https://ikorihn.github.io/digitalgarden/note/zsh%E3%81%A7%E3%82%B3%E3%83%9E%E3%83%B3%E3%83%89%E8%A3%9C%E5%AE%8C%E3%82%92%E8%A8%AD%E5%AE%9A%E3%81%99%E3%82%8B/</link><pubDate>Fri, 29 Oct 2021 17:37:00 +0900</pubDate><guid>https://ikorihn.github.io/digitalgarden/note/zsh%E3%81%A7%E3%82%B3%E3%83%9E%E3%83%B3%E3%83%89%E8%A3%9C%E5%AE%8C%E3%82%92%E8%A8%AD%E5%AE%9A%E3%81%99%E3%82%8B/</guid><description>補完コマンドのあるディレクトリを FPATH に追加する ~/.zshenv 1 FPATH=$(brew --prefix)/share/zsh/site-functions/:$FPATH 1 fpath=($(brew --prefix)/share/zsh/site-functions/(N-/) $fpath) zinitの場合 as'completion' 補完modifier has'&amp;lt;command&amp;gt;' コマンドが存在する場合 1 2 3 4 5 6 7 # https://github.com/BurntSushi/ripgrep</description></item><item><title>zshでpathの重複を除外する</title><link>https://ikorihn.github.io/digitalgarden/note/zsh%E3%81%A7path%E3%81%AE%E9%87%8D%E8%A4%87%E3%82%92%E9%99%A4%E5%A4%96%E3%81%99%E3%82%8B/</link><pubDate>Fri, 29 Oct 2021 17:32:00 +0900</pubDate><guid>https://ikorihn.github.io/digitalgarden/note/zsh%E3%81%A7path%E3%81%AE%E9%87%8D%E8%A4%87%E3%82%92%E9%99%A4%E5%A4%96%E3%81%99%E3%82%8B/</guid><description>https://tech.serhatteker.com/post/2019-12/remove-duplicates-in-path-zsh/ 1 typeset -U path That’s all. As you can imagine -U stands for ‘unique’. From doc: 1 2 3 4 -U For arrays (but not for associative arrays), keep only the first occurrence of each duplicated value. This may also be set for colon-separated special parameters like PATH or FIG‐ NORE, etc. This</description></item><item><title>sshで接続後にコマンドを実行する</title><link>https://ikorihn.github.io/digitalgarden/note/ssh%E3%81%A7%E6%8E%A5%E7%B6%9A%E5%BE%8C%E3%81%AB%E3%82%B3%E3%83%9E%E3%83%B3%E3%83%89%E3%82%92%E5%AE%9F%E8%A1%8C%E3%81%99%E3%82%8B/</link><pubDate>Mon, 25 Oct 2021 13:36:00 +0900</pubDate><guid>https://ikorihn.github.io/digitalgarden/note/ssh%E3%81%A7%E6%8E%A5%E7%B6%9A%E5%BE%8C%E3%81%AB%E3%82%B3%E3%83%9E%E3%83%B3%E3%83%89%E3%82%92%E5%AE%9F%E8%A1%8C%E3%81%99%E3%82%8B/</guid><description>踏み台サーバーにログインしたあと、毎回専用ユーザーになるのが面倒だったので調べた ログイン後別のユーザーになりたい 1 2 3 4 Host bastion_aws HostName x.x.x.x RemoteCommand su - user2 RequestTTY force</description></item><item><title>Lambda関数に同時実行数を担保する</title><link>https://ikorihn.github.io/digitalgarden/note/Lambda%E9%96%A2%E6%95%B0%E3%81%AB%E5%90%8C%E6%99%82%E5%AE%9F%E8%A1%8C%E6%95%B0%E3%82%92%E6%8B%85%E4%BF%9D%E3%81%99%E3%82%8B/</link><pubDate>Sun, 24 Oct 2021 22:34:58 +0900</pubDate><guid>https://ikorihn.github.io/digitalgarden/note/Lambda%E9%96%A2%E6%95%B0%E3%81%AB%E5%90%8C%E6%99%82%E5%AE%9F%E8%A1%8C%E6%95%B0%E3%82%92%E6%8B%85%E4%BF%9D%E3%81%99%E3%82%8B/</guid><description>Lambda 関数に冪等にする Lambda 関数の同時実行数を1にしても冪等性の担保から逃れることは出来ない | by noid11 | Medium ・冪等性はお客様のコードで確保する必要がある AWS</description></item><item><title>SQSとLambdaで同時実行数を制御する</title><link>https://ikorihn.github.io/digitalgarden/note/SQS%E3%81%A8Lambda%E3%81%A7%E5%90%8C%E6%99%82%E5%AE%9F%E8%A1%8C%E6%95%B0%E3%82%92%E5%88%B6%E5%BE%A1%E3%81%99%E3%82%8B/</link><pubDate>Sun, 24 Oct 2021 22:27:56 +0900</pubDate><guid>https://ikorihn.github.io/digitalgarden/note/SQS%E3%81%A8Lambda%E3%81%A7%E5%90%8C%E6%99%82%E5%AE%9F%E8%A1%8C%E6%95%B0%E3%82%92%E5%88%B6%E5%BE%A1%E3%81%99%E3%82%8B/</guid><description>AWS Lambda の同時実行数の上限は、同一アカウントの同一Region内で1000件まで。 同時実行数に達すると、それ以上の呼び出しはスロットリングされ実</description></item><item><title>pythonプロジェクトの始め方</title><link>https://ikorihn.github.io/digitalgarden/note/python%E3%83%97%E3%83%AD%E3%82%B8%E3%82%A7%E3%82%AF%E3%83%88%E3%81%AE%E5%A7%8B%E3%82%81%E6%96%B9/</link><pubDate>Tue, 19 Oct 2021 17:36:38 +0900</pubDate><guid>https://ikorihn.github.io/digitalgarden/note/python%E3%83%97%E3%83%AD%E3%82%B8%E3%82%A7%E3%82%AF%E3%83%88%E3%81%AE%E5%A7%8B%E3%82%81%E6%96%B9/</guid><description>Python Python オレオレ、コレだけはやっておけ 2021 - Qiita dataclass Python3.7からは「Data Classes」がクラス定義のスタンダードになるかもしれない - Qiita</description></item><item><title>GatsbyjsでTailwindをつかう</title><link>https://ikorihn.github.io/digitalgarden/note/Gatsbyjs%E3%81%A7Tailwind%E3%82%92%E3%81%A4%E3%81%8B%E3%81%86/</link><pubDate>Sun, 10 Oct 2021 23:47:00 +0900</pubDate><guid>https://ikorihn.github.io/digitalgarden/note/Gatsbyjs%E3%81%A7Tailwind%E3%82%92%E3%81%A4%E3%81%8B%E3%81%86/</guid><description>#Gatsbyjs #TailwindCSS https://www.gatsbyjs.com/docs/how-to/styling/tailwind-css/</description></item><item><title>Gatsbyでブログを作ったので、構築ログを残す</title><link>https://ikorihn.github.io/digitalgarden/blog/start-blog-with-gatsby/</link><pubDate>Sun, 10 Oct 2021 19:00:00 +0900</pubDate><guid>https://ikorihn.github.io/digitalgarden/blog/start-blog-with-gatsby/</guid><description>Gatsby.js について https://www.gatsbyjs.com/ Reactでつくられた静的サイトジェネレータ Reactをビルド時に1回だけ実行し、HTML,JSを生成する。 生成されたファイルを</description></item><item><title>自宅と職場でproxy設定を切り替えたい</title><link>https://ikorihn.github.io/digitalgarden/blog/%E8%87%AA%E5%AE%85%E3%81%A8%E8%81%B7%E5%A0%B4%E3%81%A7proxy%E8%A8%AD%E5%AE%9A%E3%82%92%E5%88%87%E3%82%8A%E6%9B%BF%E3%81%88%E3%81%9F%E3%81%84/</link><pubDate>Fri, 08 Oct 2021 10:47:00 +0900</pubDate><guid>https://ikorihn.github.io/digitalgarden/blog/%E8%87%AA%E5%AE%85%E3%81%A8%E8%81%B7%E5%A0%B4%E3%81%A7proxy%E8%A8%AD%E5%AE%9A%E3%82%92%E5%88%87%E3%82%8A%E6%9B%BF%E3%81%88%E3%81%9F%E3%81%84/</guid><description>出社時と在宅時で、プロキシの接続情報を変更する必要がある。 手で切り替えるのを忘れて社内システムにつながらない…ということがよく発生するので、</description></item><item><title>Macスリープ時・復帰時に処理を動かす</title><link>https://ikorihn.github.io/digitalgarden/blog/Mac%E3%82%B9%E3%83%AA%E3%83%BC%E3%83%97%E6%99%82%E5%BE%A9%E5%B8%B0%E6%99%82%E3%81%AB%E5%87%A6%E7%90%86%E3%82%92%E5%8B%95%E3%81%8B%E3%81%99/</link><pubDate>Thu, 07 Oct 2021 14:34:00 +0900</pubDate><guid>https://ikorihn.github.io/digitalgarden/blog/Mac%E3%82%B9%E3%83%AA%E3%83%BC%E3%83%97%E6%99%82%E5%BE%A9%E5%B8%B0%E6%99%82%E3%81%AB%E5%87%A6%E7%90%86%E3%82%92%E5%8B%95%E3%81%8B%E3%81%99/</guid><description>macOSのスリープ時にEC2を落とそう - サーバーワークスエンジニアブログ</description></item><item><title>Mac立ち上げ時にアプリが自動起動するのを防ぐ</title><link>https://ikorihn.github.io/digitalgarden/note/Mac%E7%AB%8B%E3%81%A1%E4%B8%8A%E3%81%92%E6%99%82%E3%81%AB%E3%82%A2%E3%83%97%E3%83%AA%E3%81%8C%E8%87%AA%E5%8B%95%E8%B5%B7%E5%8B%95%E3%81%99%E3%82%8B%E3%81%AE%E3%82%92%E9%98%B2%E3%81%90/</link><pubDate>Thu, 07 Oct 2021 14:24:00 +0900</pubDate><guid>https://ikorihn.github.io/digitalgarden/note/Mac%E7%AB%8B%E3%81%A1%E4%B8%8A%E3%81%92%E6%99%82%E3%81%AB%E3%82%A2%E3%83%97%E3%83%AA%E3%81%8C%E8%87%AA%E5%8B%95%E8%B5%B7%E5%8B%95%E3%81%99%E3%82%8B%E3%81%AE%E3%82%92%E9%98%B2%E3%81%90/</guid><description>#Mac EAA Clientが自動起動して、オフにする設定もないのでこまった。 launchctlに登録されているようなので、それを削除することにした。 1</description></item><item><title>GooglePlay課金</title><link>https://ikorihn.github.io/digitalgarden/note/GooglePlay%E8%AA%B2%E9%87%91/</link><pubDate>Mon, 04 Oct 2021 11:02:00 +0900</pubDate><guid>https://ikorihn.github.io/digitalgarden/note/GooglePlay%E8%AA%B2%E9%87%91/</guid><description>[DroidKaigi 2020] Re:ゼロから始める Play Billing Library / Re: Zero - starting uses of Play Billing Library - Speaker Deck Android(Google Play)にてアプリ内定期購入を実装したときに困ったポイント - Qiita 【Android開</description></item><item><title>zap.Loggerでログ出力時にSentryにも出力する</title><link>https://ikorihn.github.io/digitalgarden/note/zap.Logger%E3%81%A7%E3%83%AD%E3%82%B0%E5%87%BA%E5%8A%9B%E6%99%82%E3%81%ABSentry%E3%81%AB%E3%82%82%E5%87%BA%E5%8A%9B%E3%81%99%E3%82%8B/</link><pubDate>Thu, 30 Sep 2021 21:15:00 +0900</pubDate><guid>https://ikorihn.github.io/digitalgarden/note/zap.Logger%E3%81%A7%E3%83%AD%E3%82%B0%E5%87%BA%E5%8A%9B%E6%99%82%E3%81%ABSentry%E3%81%AB%E3%82%82%E5%87%BA%E5%8A%9B%E3%81%99%E3%82%8B/</guid><description>https://docs.sentry.io/platforms/go/ zap初期化時に、Hookを登録することができる。 zapcore.Entryを引数に取るので、そこからメッセージやログレベルを取得してやれ</description></item><item><title>Jenkinsの見た目をカスタマイズ</title><link>https://ikorihn.github.io/digitalgarden/blog/jenkins-ui-customize/</link><pubDate>Mon, 27 Sep 2021 19:00:00 +0900</pubDate><guid>https://ikorihn.github.io/digitalgarden/blog/jenkins-ui-customize/</guid><description>1 # This code block gets replaced with the TOC モチベーション Jenkins のデフォルトの見た目は古臭いので、好きなテーマに変更したい。 また、環境ごとの違いをひと目でわかりやすくす</description></item><item><title>Googleカレンダーの予定時刻になったらMeetを自動で開くようにする</title><link>https://ikorihn.github.io/digitalgarden/blog/open-google-meet-at-time/</link><pubDate>Fri, 24 Sep 2021 19:00:00 +0900</pubDate><guid>https://ikorihn.github.io/digitalgarden/blog/open-google-meet-at-time/</guid><description>1 # This code block gets replaced with the TOC モチベーション オンラインミーティングをGoogle Meetでやっているのですが、気づいたら開始時間を過ぎていることがあり</description></item><item><title>Jenkins PipelineでParameterのFileが動作しないバグ</title><link>https://ikorihn.github.io/digitalgarden/note/Jenkins-Pipeline%E3%81%A7Parameter%E3%81%AEFile%E3%81%8C%E5%8B%95%E4%BD%9C%E3%81%97%E3%81%AA%E3%81%84%E3%83%90%E3%82%B0/</link><pubDate>Tue, 21 Sep 2021 19:20:00 +0900</pubDate><guid>https://ikorihn.github.io/digitalgarden/note/Jenkins-Pipeline%E3%81%A7Parameter%E3%81%AEFile%E3%81%8C%E5%8B%95%E4%BD%9C%E3%81%97%E3%81%AA%E3%81%84%E3%83%90%E3%82%B0/</guid><description>note/Jenkins pluginのバグ https://issues.jenkins.io/browse/JENKINS-27413 https://stackoverflow.com/questions/38080876/jenkins-pipeline-job-with-file-parameter pipelineじゃなくふつうのジョブでパラメータにFileを指定する分には問題ない pipelineで指定するとファ</description></item><item><title>M1 MacBook Air</title><link>https://ikorihn.github.io/digitalgarden/note/M1-MacBook-Air/</link><pubDate>Mon, 20 Sep 2021 18:46:00 +0900</pubDate><guid>https://ikorihn.github.io/digitalgarden/note/M1-MacBook-Air/</guid><description>https://www.apple.com/jp/shop/buy-mac/macbook-air/%E3%82%B9%E3%83%9A%E3%83%BC%E3%82%B9%E3%82%B0%E3%83%AC%E3%82%A4-8%E3%82%B3%E3%82%A2cpu%E3%81%A87%E3%82%B3%E3%82%A2gpu%E3%82%92%E6%90%AD%E8%BC%89%E3%81%97%E3%81%9Fapple-m1%E3%83%81%E3%83%83%E3%83%97-256gb 現在のMacを下取りに出すこともできる 2015 MacBook Air でも3万円安くなる Apple SiliconのM1チップ を搭載 Appleが作ったものの中で最もパワフルな</description></item><item><title>JavaScriptでJSONをkebab-caseにする</title><link>https://ikorihn.github.io/digitalgarden/note/JavaScript%E3%81%A7JSON%E3%82%92kebab-case%E3%81%AB%E3%81%99%E3%82%8B/</link><pubDate>Thu, 16 Sep 2021 12:16:00 +0900</pubDate><guid>https://ikorihn.github.io/digitalgarden/note/JavaScript%E3%81%A7JSON%E3%82%92kebab-case%E3%81%AB%E3%81%99%E3%82%8B/</guid><description>#JavaScript 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 export const stringifyRoutePoint = (point?: QueryRoutePoint) =&amp;gt; point != null ? JSON.stringify(point, (key: string, value: any) =&amp;gt; { if (value &amp;amp;&amp;amp; typeof value === &amp;#39;object&amp;#39;) { const replacement: { [key: string]: string } = {} for (const v in value)</description></item><item><title>tmuxでssh時に色を変える</title><link>https://ikorihn.github.io/digitalgarden/note/tmux%E3%81%A7ssh%E6%99%82%E3%81%AB%E8%89%B2%E3%82%92%E5%A4%89%E3%81%88%E3%82%8B/</link><pubDate>Thu, 09 Sep 2021 20:04:00 +0900</pubDate><guid>https://ikorihn.github.io/digitalgarden/note/tmux%E3%81%A7ssh%E6%99%82%E3%81%AB%E8%89%B2%E3%82%92%E5%A4%89%E3%81%88%E3%82%8B/</guid><description>https://bacchi.me/linux/change-terminal-bgcolor/ 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 function ssh() { # tmux起動時 if [[ -n $(printenv TMUX) ]] ; then # 現在のペインIDを記録 local pane_id=$(tmux display -p &amp;#39;#{pane_id}&amp;#39;) # 接続先ホスト名に応じて</description></item><item><title>M1 MacでNode.jsインストール</title><link>https://ikorihn.github.io/digitalgarden/note/M1-Mac%E3%81%A7Node.js%E3%82%A4%E3%83%B3%E3%82%B9%E3%83%88%E3%83%BC%E3%83%AB/</link><pubDate>Thu, 02 Sep 2021 15:58:00 +0900</pubDate><guid>https://ikorihn.github.io/digitalgarden/note/M1-Mac%E3%81%A7Node.js%E3%82%A4%E3%83%B3%E3%82%B9%E3%83%88%E3%83%BC%E3%83%AB/</guid><description>#Nodejs 最新のNodeバージョンで起動に失敗するプロジェクトだったのでバージョンをさげたい nodebrew install v15 は、https://nodejs.org/dist</description></item><item><title>macでatコマンドを使う</title><link>https://ikorihn.github.io/digitalgarden/note/mac%E3%81%A7at%E3%82%B3%E3%83%9E%E3%83%B3%E3%83%89%E3%82%92%E4%BD%BF%E3%81%86/</link><pubDate>Tue, 31 Aug 2021 20:52:00 +0900</pubDate><guid>https://ikorihn.github.io/digitalgarden/note/mac%E3%81%A7at%E3%82%B3%E3%83%9E%E3%83%B3%E3%83%89%E3%82%92%E4%BD%BF%E3%81%86/</guid><description>#shell Macでatコマンドが実行できないときの対処法 - Qiita 1 sudo launchctl load -w /System/Library/LaunchDaemons/com.apple.atrun.plist /usr/libexec/atrun にフルディスクアクセスをつける コマンドの使い方 atコマンドについて詳しくま</description></item><item><title>Googleカレンダーの予定時刻になったらMeetのURLをブラウザで自動で開く</title><link>https://ikorihn.github.io/digitalgarden/note/Google%E3%82%AB%E3%83%AC%E3%83%B3%E3%83%80%E3%83%BC%E3%81%AE%E4%BA%88%E5%AE%9A%E6%99%82%E5%88%BB%E3%81%AB%E3%81%AA%E3%81%A3%E3%81%9F%E3%82%89Meet%E3%81%AEURL%E3%82%92%E3%83%96%E3%83%A9%E3%82%A6%E3%82%B6%E3%81%A7%E8%87%AA%E5%8B%95%E3%81%A7%E9%96%8B%E3%81%8F/</link><pubDate>Tue, 31 Aug 2021 20:27:00 +0900</pubDate><guid>https://ikorihn.github.io/digitalgarden/note/Google%E3%82%AB%E3%83%AC%E3%83%B3%E3%83%80%E3%83%BC%E3%81%AE%E4%BA%88%E5%AE%9A%E6%99%82%E5%88%BB%E3%81%AB%E3%81%AA%E3%81%A3%E3%81%9F%E3%82%89Meet%E3%81%AEURL%E3%82%92%E3%83%96%E3%83%A9%E3%82%A6%E3%82%B6%E3%81%A7%E8%87%AA%E5%8B%95%E3%81%A7%E9%96%8B%E3%81%8F/</guid><description>#GAS Google Meetでミーティングするときに、時間をすぎてしまうことがある。 時間になったらMeetの画面を強制的に開いてくれれば、遅れなくなるはず。</description></item><item><title>Udemy Firebase React Hooks(TypeScript)によるWebアプリ開発</title><link>https://ikorihn.github.io/digitalgarden/note/Udemy-Firebase-React-HooksTypeScript%E3%81%AB%E3%82%88%E3%82%8BWeb%E3%82%A2%E3%83%97%E3%83%AA%E9%96%8B%E7%99%BA/</link><pubDate>Sat, 28 Aug 2021 14:43:00 +0900</pubDate><guid>https://ikorihn.github.io/digitalgarden/note/Udemy-Firebase-React-HooksTypeScript%E3%81%AB%E3%82%88%E3%82%8BWeb%E3%82%A2%E3%83%97%E3%83%AA%E9%96%8B%E7%99%BA/</guid><description>Twitterのクローンアプリを作成しながら、 React、React Hooks、Redux、Firebase連携、 TypeScript についてまなぶ https://www.udemy.com/course/firebase-react-hookstypescriptweb/learn/lecture 2021-08-27 React Hooks useState</description></item><item><title>リソース効率とフロー効率</title><link>https://ikorihn.github.io/digitalgarden/note/%E3%83%AA%E3%82%BD%E3%83%BC%E3%82%B9%E5%8A%B9%E7%8E%87%E3%81%A8%E3%83%95%E3%83%AD%E3%83%BC%E5%8A%B9%E7%8E%87/</link><pubDate>Fri, 27 Aug 2021 16:05:00 +0900</pubDate><guid>https://ikorihn.github.io/digitalgarden/note/%E3%83%AA%E3%82%BD%E3%83%BC%E3%82%B9%E5%8A%B9%E7%8E%87%E3%81%A8%E3%83%95%E3%83%AD%E3%83%BC%E5%8A%B9%E7%8E%87/</guid><description>フロー効率性とリソース効率性について リソース効率がいい 稼働率が100%、暇な人がいない フロー効率がいい 機能リリースまでのリードタイムが短い 一</description></item><item><title>jenkinsの見た目をカスタマイズ</title><link>https://ikorihn.github.io/digitalgarden/note/jenkins%E3%81%AE%E8%A6%8B%E3%81%9F%E7%9B%AE%E3%82%92%E3%82%AB%E3%82%B9%E3%82%BF%E3%83%9E%E3%82%A4%E3%82%BA/</link><pubDate>Wed, 25 Aug 2021 16:51:00 +0900</pubDate><guid>https://ikorihn.github.io/digitalgarden/note/jenkins%E3%81%AE%E8%A6%8B%E3%81%9F%E7%9B%AE%E3%82%92%E3%82%AB%E3%82%B9%E3%82%BF%E3%83%9E%E3%82%A4%E3%82%BA/</guid><description>note/Jenkins のデフォルトの見た目は古臭いので、好きなテーマに変更する。 また、環境ごとの違いをひと目でわかりやすくすることで事故を防ぐ。 jenkins-material-theme をダウンロード</description></item><item><title>MacでF8を押したときにMusicを起動させないようにする</title><link>https://ikorihn.github.io/digitalgarden/note/Mac%E3%81%A7F8%E3%82%92%E6%8A%BC%E3%81%97%E3%81%9F%E3%81%A8%E3%81%8D%E3%81%ABMusic%E3%82%92%E8%B5%B7%E5%8B%95%E3%81%95%E3%81%9B%E3%81%AA%E3%81%84%E3%82%88%E3%81%86%E3%81%AB%E3%81%99%E3%82%8B/</link><pubDate>Sun, 22 Aug 2021 17:06:00 +0900</pubDate><guid>https://ikorihn.github.io/digitalgarden/note/Mac%E3%81%A7F8%E3%82%92%E6%8A%BC%E3%81%97%E3%81%9F%E3%81%A8%E3%81%8D%E3%81%ABMusic%E3%82%92%E8%B5%B7%E5%8B%95%E3%81%95%E3%81%9B%E3%81%AA%E3%81%84%E3%82%88%E3%81%86%E3%81%AB%E3%81%99%E3%82%8B/</guid><description>たまにF8キー(再生)を誤って押してしまい、Apple Music が立ち上がるので防止したい。 MacでApple Musicが勝手に立ち上がる問題の対処</description></item><item><title>localstackでS3をmockする</title><link>https://ikorihn.github.io/digitalgarden/note/localstack%E3%81%A7S3%E3%82%92mock%E3%81%99%E3%82%8B/</link><pubDate>Sun, 22 Aug 2021 11:57:00 +0900</pubDate><guid>https://ikorihn.github.io/digitalgarden/note/localstack%E3%81%A7S3%E3%82%92mock%E3%81%99%E3%82%8B/</guid><description>localstack を使って S3 をモックできる 構築 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 version:&amp;#34;3.8&amp;#34;services:localstack:container_name:&amp;#34;${LOCALSTACK_DOCKER_NAME-localstack_main}&amp;#34;image:localstack/localstacknetwork_mode:bridgeports:- &amp;#34;127.0.0.1:53:53&amp;#34;- &amp;#34;127.0.0.1:53:53/udp&amp;#34;- &amp;#34;127.0.0.1:443:443&amp;#34;- &amp;#34;127.0.0.1:4566:4566&amp;#34;- &amp;#34;127.0.0.1:4571:4571&amp;#34;environment:- SERVICES=s3- DEBUG=${DEBUG- }- DATA_DIR=/tmp/localstack/data- DOCKER_HOST=unix:///var/run/docker.sock- DEFAULT_REGION=ap-northeast-1volumes:- &amp;#34;./work:/tmp/localstack&amp;#34;- &amp;#34;/var/run/docker.sock:/var/run/docker.sock&amp;#34; 1 docker-compose up -d localstack用のプロフ</description></item><item><title>zshでhomebrewで入れたaws-cli-v2の補完を効かせる</title><link>https://ikorihn.github.io/digitalgarden/note/zsh%E3%81%A7homebrew%E3%81%A7%E5%85%A5%E3%82%8C%E3%81%9Faws-cli-v2%E3%81%AE%E8%A3%9C%E5%AE%8C%E3%82%92%E5%8A%B9%E3%81%8B%E3%81%9B%E3%82%8B/</link><pubDate>Sun, 22 Aug 2021 11:55:00 +0900</pubDate><guid>https://ikorihn.github.io/digitalgarden/note/zsh%E3%81%A7homebrew%E3%81%A7%E5%85%A5%E3%82%8C%E3%81%9Faws-cli-v2%E3%81%AE%E8%A3%9C%E5%AE%8C%E3%82%92%E5%8A%B9%E3%81%8B%E3%81%9B%E3%82%8B/</guid><description>https://docs.aws.amazon.com/ja_jp/cli/latest/userguide/cli-configure-completion.html 1 2 3 4 5 # AWS CLI v2 autoload bashcompinit &amp;amp;&amp;amp; bashcompinit autoload -Uz compinit &amp;amp;&amp;amp; compinit compinit complete -C aws_completer aws</description></item><item><title>tmuxでbrew shellenvがなにも表示されない</title><link>https://ikorihn.github.io/digitalgarden/note/tmux%E3%81%A7brew-shellenv%E3%81%8C%E3%81%AA%E3%81%AB%E3%82%82%E8%A1%A8%E7%A4%BA%E3%81%95%E3%82%8C%E3%81%AA%E3%81%84/</link><pubDate>Fri, 20 Aug 2021 11:29:00 +0900</pubDate><guid>https://ikorihn.github.io/digitalgarden/note/tmux%E3%81%A7brew-shellenv%E3%81%8C%E3%81%AA%E3%81%AB%E3%82%82%E8%A1%A8%E7%A4%BA%E3%81%95%E3%82%8C%E3%81%AA%E3%81%84/</guid><description>事象 zshでターミナルを開く → tmuxコマンドでtmuxを開く → brewでインストールしたコマンドがPATHに入っていない zshenvで eval $(brew</description></item><item><title>localstackとsamを連携</title><link>https://ikorihn.github.io/digitalgarden/note/localstack%E3%81%A8sam%E3%82%92%E9%80%A3%E6%90%BA/</link><pubDate>Thu, 19 Aug 2021 23:18:00 +0900</pubDate><guid>https://ikorihn.github.io/digitalgarden/note/localstack%E3%81%A8sam%E3%82%92%E9%80%A3%E6%90%BA/</guid><description>#AWS #sam 事象 SAM コマンドで実行したLambdaから、 localstack で立てたS3にアクセスできない TL;DR macの場合、Lambdaから接続するhostを localstack ではなく host.docker.internal</description></item><item><title>aws-sdk-go-v2を使う</title><link>https://ikorihn.github.io/digitalgarden/note/aws-sdk-go-v2%E3%82%92%E4%BD%BF%E3%81%86/</link><pubDate>Wed, 18 Aug 2021 12:13:00 +0900</pubDate><guid>https://ikorihn.github.io/digitalgarden/note/aws-sdk-go-v2%E3%82%92%E4%BD%BF%E3%81%86/</guid><description>AWS を Go で操作するライブラリ aws-sdk-go-v2が2021-01-19にリリースされた。 AWS SDK for Go のバージョン 2 が一般公開されました https://aws.amazon.com/jp/sdk-for-go/ AWS SDK</description></item><item><title>chrome アドレスバーからフォーカスを外す</title><link>https://ikorihn.github.io/digitalgarden/note/chrome-%E3%82%A2%E3%83%89%E3%83%AC%E3%82%B9%E3%83%90%E3%83%BC%E3%81%8B%E3%82%89%E3%83%95%E3%82%A9%E3%83%BC%E3%82%AB%E3%82%B9%E3%82%92%E5%A4%96%E3%81%99/</link><pubDate>Tue, 17 Aug 2021 11:23:00 +0900</pubDate><guid>https://ikorihn.github.io/digitalgarden/note/chrome-%E3%82%A2%E3%83%89%E3%83%AC%E3%82%B9%E3%83%90%E3%83%BC%E3%81%8B%E3%82%89%E3%83%95%E3%82%A9%E3%83%BC%E3%82%AB%E3%82%B9%E3%82%92%E5%A4%96%E3%81%99/</guid><description>https://github.com/philc/vimium/issues/840#issuecomment-17948885 Google ChromeのSearch Engineで空のJavaScriptを実行するキーワードを設定しておく Google Chromeの設定ページ→Manag</description></item><item><title>Karabiner-Elementsで個人的におすすめのキーバインド</title><link>https://ikorihn.github.io/digitalgarden/blog/karabiner-elements-recommend/</link><pubDate>Sun, 15 Aug 2021 19:00:00 +0900</pubDate><guid>https://ikorihn.github.io/digitalgarden/blog/karabiner-elements-recommend/</guid><description>1 # This code block gets replaced with the TOC Karabiner-Elements とは Macのキーボードをカスタマイズするためのツールです。 これを使えばUSキーボードでもJIS配列のようにかな/英数キ</description></item><item><title>zshのPATHとpathの違い</title><link>https://ikorihn.github.io/digitalgarden/note/zsh%E3%81%AEPATH%E3%81%A8path%E3%81%AE%E9%81%95%E3%81%84/</link><pubDate>Fri, 13 Aug 2021 11:49:00 +0900</pubDate><guid>https://ikorihn.github.io/digitalgarden/note/zsh%E3%81%AEPATH%E3%81%A8path%E3%81%AE%E9%81%95%E3%81%84/</guid><description>zsh で、PATHを追加するときに大文字のPATHと小文字のpathとで挙動が違った https://unix.stackexchange.com/questions/532148/what-is-the-difference-between-path-and-path-lowercase-versus-uppercase-with $PATH はstringで、$path は $PATH に紐付けられた配列という</description></item><item><title>zshのPATH追加のときはN-をつける</title><link>https://ikorihn.github.io/digitalgarden/note/zsh%E3%81%AEPATH%E8%BF%BD%E5%8A%A0%E3%81%AE%E3%81%A8%E3%81%8D%E3%81%AFN-%E3%82%92%E3%81%A4%E3%81%91%E3%82%8B/</link><pubDate>Fri, 13 Aug 2021 11:32:00 +0900</pubDate><guid>https://ikorihn.github.io/digitalgarden/note/zsh%E3%81%AEPATH%E8%BF%BD%E5%8A%A0%E3%81%AE%E3%81%A8%E3%81%8D%E3%81%AFN-%E3%82%92%E3%81%A4%E3%81%91%E3%82%8B/</guid><description>zsh で path にディレクトリを追加するときは (N-/) を付けよう - Qiita 1 2 3 4 # 間違いではない path=($HOME/bin $path) # よりよい path=($HOME/bin(N-/) /usr/local/bin(N-/) $path) 解説 (N-/) はファイル名修飾子 ファイル名に条件つけ</description></item><item><title>NerdFontsとは</title><link>https://ikorihn.github.io/digitalgarden/note/NerdFonts%E3%81%A8%E3%81%AF/</link><pubDate>Thu, 12 Aug 2021 16:46:00 +0900</pubDate><guid>https://ikorihn.github.io/digitalgarden/note/NerdFonts%E3%81%A8%E3%81%AF/</guid><description>nerd-fonts/readme_ja.md at master · ryanoasis/nerd-fonts Nerd Fonts は、たくさんのグリフ (アイコン) を開発者向けのフォントに追加するためのプロジェクトです。とりわけ、著名な「アイコンフォント」か</description></item><item><title>gitコミットにissue番号をいれる</title><link>https://ikorihn.github.io/digitalgarden/note/git%E3%82%B3%E3%83%9F%E3%83%83%E3%83%88%E3%81%ABissue%E7%95%AA%E5%8F%B7%E3%82%92%E3%81%84%E3%82%8C%E3%82%8B/</link><pubDate>Wed, 11 Aug 2021 16:42:00 +0900</pubDate><guid>https://ikorihn.github.io/digitalgarden/note/git%E3%82%B3%E3%83%9F%E3%83%83%E3%83%88%E3%81%ABissue%E7%95%AA%E5%8F%B7%E3%82%92%E3%81%84%E3%82%8C%E3%82%8B/</guid><description>#git .git/hooks/prepare-commit-msg 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 #!/bin/bash -u # https://qiita.com/koara-local/items/eae7942131e53cb8031a current_branch=$(git branch | grep &amp;#34;^\*&amp;#34;) if [[ ! &amp;#34;$current_branch&amp;#34; =~ .*/[A-Z]+-[0-9]+.* ]]; then exit 0 fi # e.g. feature/AAA-123-xxx-hogehoge -&amp;gt; AAA-123 issue_id=$(echo &amp;#34;$current_branch&amp;#34; | sed -E &amp;#39;s/^.*\/([A-Z]+-[0-9]+).*$/\1/&amp;#39;) # Insert Issue ID at the beginning of the commit message if it doesn&amp;#39;t exist if [[ ! $(head -n</description></item><item><title>Macのdefaultsコマンド</title><link>https://ikorihn.github.io/digitalgarden/note/Mac%E3%81%AEdefaults%E3%82%B3%E3%83%9E%E3%83%B3%E3%83%89/</link><pubDate>Wed, 11 Aug 2021 11:25:00 +0900</pubDate><guid>https://ikorihn.github.io/digitalgarden/note/Mac%E3%81%AEdefaults%E3%82%B3%E3%83%9E%E3%83%B3%E3%83%89/</guid><description>システム環境設定をターミナル（defaultsコマンド）から設定する方法（Mission Control） - OTTANXYZ Mac を買ったら必ずやっておきたい初</description></item><item><title>WSL2 Ubuntu20.04の環境構築</title><link>https://ikorihn.github.io/digitalgarden/note/WSL2-Ubuntu20.04%E3%81%AE%E7%92%B0%E5%A2%83%E6%A7%8B%E7%AF%89/</link><pubDate>Mon, 09 Aug 2021 19:15:00 +0900</pubDate><guid>https://ikorihn.github.io/digitalgarden/note/WSL2-Ubuntu20.04%E3%81%AE%E7%92%B0%E5%A2%83%E6%A7%8B%E7%AF%89/</guid><description>WSL2をデフォルトにする powershell 1 2 3 4 5 $ wsl --set-default-version 2 $ wsl -l -v NAME STATE VERSION * Legacy Stopping 1 Ubuntu-20.04 Stopping 2 Legacy を削除 https://docs.microsoft.com/ja-jp/windows/wsl/install-legacy#uninstallingremoving-the-legacy-distro 1 wsl --unregister Legacy Linuxbrewを入れる https://brew.sh/ のワンライナーでイン</description></item><item><title>neovim0.5.0にしたらundoファイルが壊れた</title><link>https://ikorihn.github.io/digitalgarden/note/neovim0.5.0%E3%81%AB%E3%81%97%E3%81%9F%E3%82%89undo%E3%83%95%E3%82%A1%E3%82%A4%E3%83%AB%E3%81%8C%E5%A3%8A%E3%82%8C%E3%81%9F/</link><pubDate>Fri, 06 Aug 2021 16:00:00 +0900</pubDate><guid>https://ikorihn.github.io/digitalgarden/note/neovim0.5.0%E3%81%AB%E3%81%97%E3%81%9F%E3%82%89undo%E3%83%95%E3%82%A1%E3%82%A4%E3%83%AB%E3%81%8C%E5%A3%8A%E3%82%8C%E3%81%9F/</guid><description>brewでインストールされるNeovimのバージョンが0.5.0になった。 ファイルを開くと、 E824: Incompatible undo file: /path/to/undo というメッセージが出るようになって、過</description></item><item><title>ripgrepで複数行にまたがる検索</title><link>https://ikorihn.github.io/digitalgarden/note/ripgrep%E3%81%A7%E8%A4%87%E6%95%B0%E8%A1%8C%E3%81%AB%E3%81%BE%E3%81%9F%E3%81%8C%E3%82%8B%E6%A4%9C%E7%B4%A2/</link><pubDate>Thu, 05 Aug 2021 16:42:00 +0900</pubDate><guid>https://ikorihn.github.io/digitalgarden/note/ripgrep%E3%81%A7%E8%A4%87%E6%95%B0%E8%A1%8C%E3%81%AB%E3%81%BE%E3%81%9F%E3%81%8C%E3%82%8B%E6%A4%9C%E7%B4%A2/</guid><description>#shell https://til.hashrocket.com/posts/9zneks2cbv-multiline-matches-with-ripgrep-rg 1 $ echo &amp;#39;apple\norange\nbanana\nkiwi&amp;#39; | rg &amp;#39;orange.*kiwi&amp;#39; =&amp;gt; マッチしない 1 $ echo &amp;#39;apple\norange\nbanana\nkiwi&amp;#39; | rg --multiline &amp;#39;orange.*kiwi&amp;#39; =&amp;gt; マッチしない . が \n にマッチしないため。 dot all modifier = (?s) をつかう 1 2 3 4 $ echo &amp;#39;apple\norange\nbanana\nkiwi&amp;#39; | rg --multiline &amp;#39;(?s)orange.*kiwi&amp;#39; orange banana kiwi =&amp;gt; マッ</description></item><item><title>Sentryのissue一覧を取得</title><link>https://ikorihn.github.io/digitalgarden/note/Sentry%E3%81%AEissue%E4%B8%80%E8%A6%A7%E3%82%92%E5%8F%96%E5%BE%97/</link><pubDate>Wed, 04 Aug 2021 15:24:00 +0900</pubDate><guid>https://ikorihn.github.io/digitalgarden/note/Sentry%E3%81%AEissue%E4%B8%80%E8%A6%A7%E3%82%92%E5%8F%96%E5%BE%97/</guid><description>#Sentry APIトークンを取得 https://docs.sentry.io/api/auth/ 取得したトークンを使用してAPIを実行 issue一覧を取得する https://docs.sentry.io/api/events/list-a-projects-issues/ 1 curl -H &amp;#39;Authorization: Bearer &amp;lt;auth_token&amp;gt;&amp;#39; https://sentry.io/api/0/projects/{organization_slug}/{project_slug}/issues/ ページネーションは cursor パラメータで指定す</description></item><item><title>shell ランダム文字列を生成するワンライナー</title><link>https://ikorihn.github.io/digitalgarden/note/shell-%E3%83%A9%E3%83%B3%E3%83%80%E3%83%A0%E6%96%87%E5%AD%97%E5%88%97%E3%82%92%E7%94%9F%E6%88%90%E3%81%99%E3%82%8B%E3%83%AF%E3%83%B3%E3%83%A9%E3%82%A4%E3%83%8A%E3%83%BC/</link><pubDate>Thu, 29 Jul 2021 18:24:00 +0900</pubDate><guid>https://ikorihn.github.io/digitalgarden/note/shell-%E3%83%A9%E3%83%B3%E3%83%80%E3%83%A0%E6%96%87%E5%AD%97%E5%88%97%E3%82%92%E7%94%9F%E6%88%90%E3%81%99%E3%82%8B%E3%83%AF%E3%83%B3%E3%83%A9%E3%82%A4%E3%83%8A%E3%83%BC/</guid><description>固定文字列を付与したい場合はawkなどでつければよい 1 2 3 4 5 6 7 8 9 10 11 12 $ cat /dev/urandom | tr -dc &amp;#39;a-zA-Z0-9&amp;#39; | fold -w 32 | head -n 10 | awk &amp;#39;{ print &amp;#34;prefix:&amp;#34; $1 }&amp;#39; prefix:0dCIkKBOq8bcM4yCP0Su5AE0yb6OUBtJ prefix:ferc9H8Qx0QvaK3klwAiMGejgWVDycL0 prefix:pYJGcHzrxYtlT8p4dw8JT567XmeljRRq prefix:dJ1g2vryv1U2EmE0fW4bOT8DlW2plXQx prefix:W952QQrK0XFG1hyUzh4vy1D6vWAU2Xt9 prefix:IEXRe5sAhmnYenIhMse2C63qYZSpmlTY prefix:IaMWJGHRqhQXj8RhqsOJtT8OAYAoPvPY prefix:h89cSAk63KSTCa3J880qYmjpoRFHi3DJ prefix:MUEAglVmFbIwCdRzBllDcPIQzIjN0ivu prefix:7sNNrE29j5QaHk1h3zuAaeqSXftzWcn3</description></item><item><title>Lambda同時実行数</title><link>https://ikorihn.github.io/digitalgarden/note/Lambda%E5%90%8C%E6%99%82%E5%AE%9F%E8%A1%8C%E6%95%B0/</link><pubDate>Sat, 17 Jul 2021 10:31:00 +0900</pubDate><guid>https://ikorihn.github.io/digitalgarden/note/Lambda%E5%90%8C%E6%99%82%E5%AE%9F%E8%A1%8C%E6%95%B0/</guid><description>#AWS #Lambda 同時実行数の上限はアカウント全体の1リージョンにつき1000 関数Aで1000件実行されていると関数Bが失敗する 関数ごとに同時実行数上限を</description></item><item><title>go_mockery</title><link>https://ikorihn.github.io/digitalgarden/note/go_mockery/</link><pubDate>Wed, 14 Jul 2021 20:41:00 +0900</pubDate><guid>https://ikorihn.github.io/digitalgarden/note/go_mockery/</guid><description>go_testifyを使う でtestify/mockを使ったが、 mockを手で作成するのは骨が折れる そこでtestifyのmock生成には mockery</description></item><item><title>go_testifyを使う</title><link>https://ikorihn.github.io/digitalgarden/note/go_testify%E3%82%92%E4%BD%BF%E3%81%86/</link><pubDate>Wed, 14 Jul 2021 19:07:00 +0900</pubDate><guid>https://ikorihn.github.io/digitalgarden/note/go_testify%E3%82%92%E4%BD%BF%E3%81%86/</guid><description>#Go testify https://github.com/stretchr/testify assert, mock, suiteなど、テストに便利な機能を提供するライブラリ Goには標準で testing ライブラリが備わっていて、標準で十分な場面もあるが、 ある程度</description></item><item><title>Javaで同一のFQCNがclasspath上に複数ある場合の挙動</title><link>https://ikorihn.github.io/digitalgarden/note/Java%E3%81%A7%E5%90%8C%E4%B8%80%E3%81%AEFQCN%E3%81%8Cclasspath%E4%B8%8A%E3%81%AB%E8%A4%87%E6%95%B0%E3%81%82%E3%82%8B%E5%A0%B4%E5%90%88%E3%81%AE%E6%8C%99%E5%8B%95/</link><pubDate>Tue, 13 Jul 2021 17:03:00 +0900</pubDate><guid>https://ikorihn.github.io/digitalgarden/note/Java%E3%81%A7%E5%90%8C%E4%B8%80%E3%81%AEFQCN%E3%81%8Cclasspath%E4%B8%8A%E3%81%AB%E8%A4%87%E6%95%B0%E3%81%82%E3%82%8B%E5%A0%B4%E5%90%88%E3%81%AE%E6%8C%99%E5%8B%95/</guid><description>#Java 2つのライブラリに同じclassが存在するときの挙動について 例 org:json:1.0 com.googlecode.json-simple:1.1.1 org.json.simple.parser.JSONParser が両方のライブラリに存在する org.json.simple.parser.JSONParser.parse(Ljava/io/String;)Ljava/lang/Object; はjson-simpleにしかないので、</description></item><item><title>vscode拡張</title><link>https://ikorihn.github.io/digitalgarden/note/vscode%E6%8B%A1%E5%BC%B5/</link><pubDate>Thu, 08 Jul 2021 11:17:00 +0900</pubDate><guid>https://ikorihn.github.io/digitalgarden/note/vscode%E6%8B%A1%E5%BC%B5/</guid><description>VisualStudio Code の拡張機能 Settings Sync https://code.visualstudio.com/docs/editor/settings-sync 公式の設定同期機能が ver1.48 でリリースされた Project Manager プロジェクト一覧にアクセスしやすくなる 標準でもOpenやOpen Recentな</description></item><item><title>go_jsonにmapをmarshalする</title><link>https://ikorihn.github.io/digitalgarden/note/go_json%E3%81%ABmap%E3%82%92marshal%E3%81%99%E3%82%8B/</link><pubDate>Wed, 07 Jul 2021 12:08:00 +0900</pubDate><guid>https://ikorihn.github.io/digitalgarden/note/go_json%E3%81%ABmap%E3%82%92marshal%E3%81%99%E3%82%8B/</guid><description>#Go map[string]interface{} をmarshal,unmarshalできる 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 import ( &amp;#34;encoding/json&amp;#34; &amp;#34;fmt&amp;#34; ) type required struct { Name string Age int</description></item><item><title>go_contextのタイムアウトとキャンセル</title><link>https://ikorihn.github.io/digitalgarden/note/go_context%E3%81%AE%E3%82%BF%E3%82%A4%E3%83%A0%E3%82%A2%E3%82%A6%E3%83%88%E3%81%A8%E3%82%AD%E3%83%A3%E3%83%B3%E3%82%BB%E3%83%AB/</link><pubDate>Tue, 06 Jul 2021 21:24:00 +0900</pubDate><guid>https://ikorihn.github.io/digitalgarden/note/go_context%E3%81%AE%E3%82%BF%E3%82%A4%E3%83%A0%E3%82%A2%E3%82%A6%E3%83%88%E3%81%A8%E3%82%AD%E3%83%A3%E3%83%B3%E3%82%BB%E3%83%AB/</guid><description>#Go Goのcontextによるキャンセルやタイムアウト - oinume journal context.WithCancel, WithTimeout で知っておいた方が良いこと - Carpe Diem 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23</description></item><item><title>go_httpClientをテストする</title><link>https://ikorihn.github.io/digitalgarden/note/go_httpClient%E3%82%92%E3%83%86%E3%82%B9%E3%83%88%E3%81%99%E3%82%8B/</link><pubDate>Tue, 06 Jul 2021 18:03:00 +0900</pubDate><guid>https://ikorihn.github.io/digitalgarden/note/go_httpClient%E3%82%92%E3%83%86%E3%82%B9%E3%83%88%E3%81%99%E3%82%8B/</guid><description>#Go</description></item><item><title>GoでJSONの時刻を扱う場合</title><link>https://ikorihn.github.io/digitalgarden/note/Go%E3%81%A7JSON%E3%81%AE%E6%99%82%E5%88%BB%E3%82%92%E6%89%B1%E3%81%86%E5%A0%B4%E5%90%88/</link><pubDate>Mon, 05 Jul 2021 10:59:00 +0900</pubDate><guid>https://ikorihn.github.io/digitalgarden/note/Go%E3%81%A7JSON%E3%81%AE%E6%99%82%E5%88%BB%E3%82%92%E6%89%B1%E3%81%86%E5%A0%B4%E5%90%88/</guid><description>#Go JSONのmarshal/unmarshalで日時フォーマットを指定する データをJSONに変換するときに任意のフォーマットを設定する - Qiita Marshaler,</description></item><item><title>goでsingleton</title><link>https://ikorihn.github.io/digitalgarden/note/go%E3%81%A7singleton/</link><pubDate>Fri, 02 Jul 2021 17:59:00 +0900</pubDate><guid>https://ikorihn.github.io/digitalgarden/note/go%E3%81%A7singleton/</guid><description>#Go How singleton pattern works with Golang | by Jefferson Otoni Lima | Golang Issue | Medium Go 言語における Singleton Pattern | text.Baldanders.info よくやるやつ なにも考えずにつくるとこうなる 1 2 3 4 5 6 7 8 var instance *Config func GetInstance() *Config { if instance == nil { instance</description></item><item><title>go-installでtools.goを排除</title><link>https://ikorihn.github.io/digitalgarden/note/go-install%E3%81%A7tools.go%E3%82%92%E6%8E%92%E9%99%A4/</link><pubDate>Wed, 30 Jun 2021 10:17:00 +0900</pubDate><guid>https://ikorihn.github.io/digitalgarden/note/go-install%E3%81%A7tools.go%E3%82%92%E6%8E%92%E9%99%A4/</guid><description>#Go https://zenn.dev/tarotaro0/articles/1d5bf3e32d5ef2 note/Go ではnpmのdevdependenciesの仕組みがないため、通常だとgo.modから消えてしまう そこで、これらのツールをmodule</description></item><item><title>goのlintにstaticcheckを使う</title><link>https://ikorihn.github.io/digitalgarden/note/go%E3%81%AElint%E3%81%ABstaticcheck%E3%82%92%E4%BD%BF%E3%81%86/</link><pubDate>Tue, 29 Jun 2021 22:00:00 +0900</pubDate><guid>https://ikorihn.github.io/digitalgarden/note/go%E3%81%AElint%E3%81%ABstaticcheck%E3%82%92%E4%BD%BF%E3%81%86/</guid><description>https://blog.cybozu.io/entry/2021/02/26/081013</description></item><item><title>AmazonSQS</title><link>https://ikorihn.github.io/digitalgarden/note/AmazonSQS/</link><pubDate>Mon, 28 Jun 2021 10:26:00 +0900</pubDate><guid>https://ikorihn.github.io/digitalgarden/note/AmazonSQS/</guid><description>#AWS Amazon Simple Queue Service (Amazon SQS) https://docs.aws.amazon.com/ja_jp/AWSSimpleQueueService/latest/SQSDeveloperGuide/welcome.html フルマネージドのキューサービス キューを使った非同期処理の実現 標準キューとFIFOキュー AWS — Difference between SQS Standard and FIFO Queues | by Ashish Patel | Awesome Cloud | Medium FIFO</description></item><item><title>AmasonSNSで配信</title><link>https://ikorihn.github.io/digitalgarden/note/AmasonSNS%E3%81%A7%E9%85%8D%E4%BF%A1/</link><pubDate>Thu, 24 Jun 2021 18:33:00 +0900</pubDate><guid>https://ikorihn.github.io/digitalgarden/note/AmasonSNS%E3%81%A7%E9%85%8D%E4%BF%A1/</guid><description>#AWS AWS Lambdaを使ったAmazon SNSへのメッセージ送受信 Amazon Simple Notification Service(SNS)へメッセージを送信するLambdaとAmazon</description></item><item><title>緯度経度の度分秒とミリ秒を変換する</title><link>https://ikorihn.github.io/digitalgarden/note/%E7%B7%AF%E5%BA%A6%E7%B5%8C%E5%BA%A6%E3%81%AE%E5%BA%A6%E5%88%86%E7%A7%92%E3%81%A8%E3%83%9F%E3%83%AA%E7%A7%92%E3%82%92%E5%A4%89%E6%8F%9B%E3%81%99%E3%82%8B/</link><pubDate>Thu, 24 Jun 2021 15:20:00 +0900</pubDate><guid>https://ikorihn.github.io/digitalgarden/note/%E7%B7%AF%E5%BA%A6%E7%B5%8C%E5%BA%A6%E3%81%AE%E5%BA%A6%E5%88%86%E7%A7%92%E3%81%A8%E3%83%9F%E3%83%AA%E7%A7%92%E3%82%92%E5%A4%89%E6%8F%9B%E3%81%99%E3%82%8B/</guid><description>http://www.geosense.co.jp/map/tool/geoconverter.php 緯度経度変換ツール 日本の東西南北端点の経度緯度 | 国土地理院 日本測地系のミリ秒を世界測地系の度に変換する計算 - Qiita 緯度経度 －単位変換－ ミリ秒か</description></item><item><title>PlantUMLの参考になるサイト</title><link>https://ikorihn.github.io/digitalgarden/note/PlantUML%E3%81%AE%E5%8F%82%E8%80%83%E3%81%AB%E3%81%AA%E3%82%8B%E3%82%B5%E3%82%A4%E3%83%88/</link><pubDate>Thu, 24 Jun 2021 11:05:00 +0900</pubDate><guid>https://ikorihn.github.io/digitalgarden/note/PlantUML%E3%81%AE%E5%8F%82%E8%80%83%E3%81%AB%E3%81%AA%E3%82%8B%E3%82%B5%E3%82%A4%E3%83%88/</guid><description>#PlantUML https://crashedmind.github.io/PlantUMLHitchhikersGuide/aws/aws.html AWS構成図の書き方が参考になる 色をつけたりもできる</description></item><item><title>adbコマンドユーティリティ集</title><link>https://ikorihn.github.io/digitalgarden/note/adb%E3%82%B3%E3%83%9E%E3%83%B3%E3%83%89%E3%83%A6%E3%83%BC%E3%83%86%E3%82%A3%E3%83%AA%E3%83%86%E3%82%A3%E9%9B%86/</link><pubDate>Thu, 24 Jun 2021 10:39:00 +0900</pubDate><guid>https://ikorihn.github.io/digitalgarden/note/adb%E3%82%B3%E3%83%9E%E3%83%B3%E3%83%89%E3%83%A6%E3%83%BC%E3%83%86%E3%82%A3%E3%83%AA%E3%83%86%E3%82%A3%E9%9B%86/</guid><description>1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 # キャプチャを撮ってPCにコピーし、サイズを変更 adb_screencap()</description></item><item><title>adbコマンドでAndroidの録画とPCへのコピー</title><link>https://ikorihn.github.io/digitalgarden/note/adb%E3%82%B3%E3%83%9E%E3%83%B3%E3%83%89%E3%81%A7Android%E3%81%AE%E9%8C%B2%E7%94%BB%E3%81%A8PC%E3%81%B8%E3%81%AE%E3%82%B3%E3%83%94%E3%83%BC/</link><pubDate>Thu, 24 Jun 2021 10:37:00 +0900</pubDate><guid>https://ikorihn.github.io/digitalgarden/note/adb%E3%82%B3%E3%83%9E%E3%83%B3%E3%83%89%E3%81%A7Android%E3%81%AE%E9%8C%B2%E7%94%BB%E3%81%A8PC%E3%81%B8%E3%81%AE%E3%82%B3%E3%83%94%E3%83%BC/</guid><description>1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 #!/bin/sh DATE=`date &amp;#39;+%y%m%d%H%M%S&amp;#39;` FILE_NAME=record-${DATE} YOUR_PATH=~/Desktop adb shell screenrecord /sdcard/${FILE_NAME}.mp4 &amp;amp; pid=`ps x | grep -v grep | grep &amp;#34;adb shell screenrecord&amp;#34; | awk &amp;#39;{ print $1 }&amp;#39;` if [</description></item><item><title>Bashデバッグ実行</title><link>https://ikorihn.github.io/digitalgarden/note/Bash%E3%83%87%E3%83%90%E3%83%83%E3%82%B0%E5%AE%9F%E8%A1%8C/</link><pubDate>Thu, 24 Jun 2021 10:27:00 +0900</pubDate><guid>https://ikorihn.github.io/digitalgarden/note/Bash%E3%83%87%E3%83%90%E3%83%83%E3%82%B0%E5%AE%9F%E8%A1%8C/</guid><description>https://qiita.com/mashumashu/items/ee436b770806e8b8176f 1 2 3 4 5 6 7 8 9 #!/bin/bash trap &amp;#39;read -p &amp;#34;$0($LINENO) $BASH_COMMAND&amp;#34;&amp;#39; DEBUG echo foo echo bar if [ &amp;#34;$1&amp;#34; = &amp;#34;yes&amp;#34; ]; then echo bazz fi</description></item><item><title>zplugをzinitに移行する</title><link>https://ikorihn.github.io/digitalgarden/blog/zplug-to-zinit/</link><pubDate>Mon, 21 Jun 2021 19:00:00 +0900</pubDate><guid>https://ikorihn.github.io/digitalgarden/blog/zplug-to-zinit/</guid><description>1 # This code block gets replaced with the TOC 移行理由 自分がターミナルで使用しているシェルの変遷 2016 ~ 2020/04 zsh zplug 2020/04 ~ 2021/04 fishに移行した 2021/04 ~ zshに戻った zshのカスタマイ</description></item><item><title>Goに三項演算子が採用されない理由</title><link>https://ikorihn.github.io/digitalgarden/note/Go%E3%81%AB%E4%B8%89%E9%A0%85%E6%BC%94%E7%AE%97%E5%AD%90%E3%81%8C%E6%8E%A1%E7%94%A8%E3%81%95%E3%82%8C%E3%81%AA%E3%81%84%E7%90%86%E7%94%B1/</link><pubDate>Sun, 20 Jun 2021 23:30:20 +0900</pubDate><guid>https://ikorihn.github.io/digitalgarden/note/Go%E3%81%AB%E4%B8%89%E9%A0%85%E6%BC%94%E7%AE%97%E5%AD%90%E3%81%8C%E6%8E%A1%E7%94%A8%E3%81%95%E3%82%8C%E3%81%AA%E3%81%84%E7%90%86%E7%94%B1/</guid><description>#Go Goに三項演算子が採用されない理由 if-elseは長くなるが間違いない、明確 結局、分岐は行をわけて分岐が目で追えるほうがデバッグしやすい カ</description></item><item><title>PlantUML</title><link>https://ikorihn.github.io/digitalgarden/note/PlantUML/</link><pubDate>Fri, 18 Jun 2021 14:59:07 +0900</pubDate><guid>https://ikorihn.github.io/digitalgarden/note/PlantUML/</guid><description>plantuml/plantuml: Generate UML diagram from textual description シンプルなテキストファイルで UML が書ける、オープンソースのツール テキストファイルで UML 図を記述できる 本体は Java で書かれていて、単一の</description></item><item><title>PlantUMLで見た目をカスタマイズ</title><link>https://ikorihn.github.io/digitalgarden/note/PlantUML%E3%81%A7%E8%A6%8B%E3%81%9F%E7%9B%AE%E3%82%92%E3%82%AB%E3%82%B9%E3%82%BF%E3%83%9E%E3%82%A4%E3%82%BA/</link><pubDate>Fri, 18 Jun 2021 14:47:00 +0900</pubDate><guid>https://ikorihn.github.io/digitalgarden/note/PlantUML%E3%81%A7%E8%A6%8B%E3%81%9F%E7%9B%AE%E3%82%92%E3%82%AB%E3%82%B9%E3%82%BF%E3%83%9E%E3%82%A4%E3%82%BA/</guid><description>#PlantUML PlantUML の skinparam で図の見た目を変更できる https://plantuml.com/ja/skinparam 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 @startuml skinparam interface { backgroundColor RosyBrown borderColor orange } skinparam component { FontSize 13 BackgroundColor&amp;lt;&amp;lt;Apache&amp;gt;&amp;gt; Red BorderColor&amp;lt;&amp;lt;Apache&amp;gt;&amp;gt; #FF6655 FontName Courier BorderColor black BackgroundColor gold ArrowFontName Impact ArrowColor #FF6655 ArrowFontColor</description></item><item><title>Awsのサービスを使ってバッチ処理する</title><link>https://ikorihn.github.io/digitalgarden/note/Aws%E3%81%AE%E3%82%B5%E3%83%BC%E3%83%93%E3%82%B9%E3%82%92%E4%BD%BF%E3%81%A3%E3%81%A6%E3%83%90%E3%83%83%E3%83%81%E5%87%A6%E7%90%86%E3%81%99%E3%82%8B/</link><pubDate>Thu, 17 Jun 2021 20:43:00 +0900</pubDate><guid>https://ikorihn.github.io/digitalgarden/note/Aws%E3%81%AE%E3%82%B5%E3%83%BC%E3%83%93%E3%82%B9%E3%82%92%E4%BD%BF%E3%81%A3%E3%81%A6%E3%83%90%E3%83%83%E3%83%81%E5%87%A6%E7%90%86%E3%81%99%E3%82%8B/</guid><description>#AWS AmazonSQS, AWS Lambda, AmazonSNS を使ってバッチ処理によるPUSH送信を実現する AWSでバッチ処理を実装する際の選択肢とサービス比較 [レポート] SNSとSQSとLa</description></item><item><title>spotlessでコードフォーマットする</title><link>https://ikorihn.github.io/digitalgarden/note/spotless%E3%81%A7%E3%82%B3%E3%83%BC%E3%83%89%E3%83%95%E3%82%A9%E3%83%BC%E3%83%9E%E3%83%83%E3%83%88%E3%81%99%E3%82%8B/</link><pubDate>Thu, 17 Jun 2021 14:49:00 +0900</pubDate><guid>https://ikorihn.github.io/digitalgarden/note/spotless%E3%81%A7%E3%82%B3%E3%83%BC%E3%83%89%E3%83%95%E3%82%A9%E3%83%BC%E3%83%9E%E3%83%83%E3%83%88%E3%81%99%E3%82%8B/</guid><description>https://github.com/diffplug/spotless/tree/main/plugin-maven Java,Kotlinのプロジェクトにフォーマッタとしてspotlessを導入する Java link: JavaのFormatter 以下のフォーマッタが利用</description></item><item><title>Vite</title><link>https://ikorihn.github.io/digitalgarden/note/Vite/</link><pubDate>Wed, 16 Jun 2021 19:54:00 +0900</pubDate><guid>https://ikorihn.github.io/digitalgarden/note/Vite/</guid><description>Vite とは 【Vite】 Vue3.0もReactも！ノーバンドルなビルドツール「Vite」を試してみる - Qiita フロントエンドの爆速な開発サーバを実現す</description></item><item><title>PlantUMLでAWS構成図を書く</title><link>https://ikorihn.github.io/digitalgarden/note/PlantUML%E3%81%A7AWS%E6%A7%8B%E6%88%90%E5%9B%B3%E3%82%92%E6%9B%B8%E3%81%8F/</link><pubDate>Wed, 16 Jun 2021 18:07:00 +0900</pubDate><guid>https://ikorihn.github.io/digitalgarden/note/PlantUML%E3%81%A7AWS%E6%A7%8B%E6%88%90%E5%9B%B3%E3%82%92%E6%9B%B8%E3%81%8F/</guid><description>#PlantUML PlantUML AWS Labs製のPlantUMLライブラリ『AWS Icons for PlantUML』の使い方 - Qiita AWS Labsのアイコンセットを使う https://github.com/awslabs/aws-icons-for-plantuml アイコン一覧 https://github.com/awslabs/aws-icons-for-plantuml/blob/main/AWSSymbols.md 1 2 3</description></item><item><title>JavaのDateとDateAndTimeAPIとの相互変換</title><link>https://ikorihn.github.io/digitalgarden/note/Java%E3%81%AEDate%E3%81%A8DateAndTimeAPI%E3%81%A8%E3%81%AE%E7%9B%B8%E4%BA%92%E5%A4%89%E6%8F%9B/</link><pubDate>Wed, 16 Jun 2021 16:22:00 +0900</pubDate><guid>https://ikorihn.github.io/digitalgarden/note/Java%E3%81%AEDate%E3%81%A8DateAndTimeAPI%E3%81%A8%E3%81%AE%E7%9B%B8%E4%BA%92%E5%A4%89%E6%8F%9B/</guid><description>#Java https://javazuki.com/articles/date-calendar-convert-to-datetime.html Date/Calendar↔Date And Time API系変換のまとめ Date/Calendar↔Date And Time API系の変換は、Instantを介</description></item><item><title>SQLでグループごとに上位N件を取得</title><link>https://ikorihn.github.io/digitalgarden/note/SQL%E3%81%A7%E3%82%B0%E3%83%AB%E3%83%BC%E3%83%97%E3%81%94%E3%81%A8%E3%81%AB%E4%B8%8A%E4%BD%8DN%E4%BB%B6%E3%82%92%E5%8F%96%E5%BE%97/</link><pubDate>Tue, 15 Jun 2021 13:16:00 +0900</pubDate><guid>https://ikorihn.github.io/digitalgarden/note/SQL%E3%81%A7%E3%82%B0%E3%83%AB%E3%83%BC%E3%83%97%E3%81%94%E3%81%A8%E3%81%AB%E4%B8%8A%E4%BD%8DN%E4%BB%B6%E3%82%92%E5%8F%96%E5%BE%97/</guid><description>#sql あるグループごとに上位〇件ずつデータを取得して比較したいという際にwindow関数を使う。 テーブル sales_t category product sales 食品 りんご 30 食品 みかん 20 食品 バナ</description></item><item><title>mavenライブラリが突然ダウンロードできなくなった</title><link>https://ikorihn.github.io/digitalgarden/note/maven%E3%83%A9%E3%82%A4%E3%83%96%E3%83%A9%E3%83%AA%E3%81%8C%E7%AA%81%E7%84%B6%E3%83%80%E3%82%A6%E3%83%B3%E3%83%AD%E3%83%BC%E3%83%89%E3%81%A7%E3%81%8D%E3%81%AA%E3%81%8F%E3%81%AA%E3%81%A3%E3%81%9F/</link><pubDate>Mon, 14 Jun 2021 20:37:00 +0900</pubDate><guid>https://ikorihn.github.io/digitalgarden/note/maven%E3%83%A9%E3%82%A4%E3%83%96%E3%83%A9%E3%83%AA%E3%81%8C%E7%AA%81%E7%84%B6%E3%83%80%E3%82%A6%E3%83%B3%E3%83%AD%E3%83%BC%E3%83%89%E3%81%A7%E3%81%8D%E3%81%AA%E3%81%8F%E3%81%AA%E3%81%A3%E3%81%9F/</guid><description>inhouse repositoryに登録したものがダウンロードできなくなった やったこと キャッシュクリア 1 rm -rf ~/.m2/repository/path/to/library =&amp;gt; 再ダウンロードは動くがされない 直接s3か</description></item><item><title>jenkinsのEC2Slaveの初期化</title><link>https://ikorihn.github.io/digitalgarden/note/jenkins%E3%81%AEEC2Slave%E3%81%AE%E5%88%9D%E6%9C%9F%E5%8C%96/</link><pubDate>Mon, 14 Jun 2021 19:06:00 +0900</pubDate><guid>https://ikorihn.github.io/digitalgarden/note/jenkins%E3%81%AEEC2Slave%E3%81%AE%E5%88%9D%E6%9C%9F%E5%8C%96/</guid><description>Jenkins EC2 は init scriptの他にUser dataでも初期化処理をかける こうかくと、yum updateされる 1 2 3 4 #cloud-config timezone: &amp;#34;Asia/Tokyo&amp;#34; repo_update: true repo_upgrade: all これはそもそもAm</description></item><item><title>dateコマンドでunixtimestampを変換</title><link>https://ikorihn.github.io/digitalgarden/note/date%E3%82%B3%E3%83%9E%E3%83%B3%E3%83%89%E3%81%A7unixtimestamp%E3%82%92%E5%A4%89%E6%8F%9B/</link><pubDate>Mon, 14 Jun 2021 19:02:00 +0900</pubDate><guid>https://ikorihn.github.io/digitalgarden/note/date%E3%82%B3%E3%83%9E%E3%83%B3%E3%83%89%E3%81%A7unixtimestamp%E3%82%92%E5%A4%89%E6%8F%9B/</guid><description>#shell タイムスタンプから変換 1 2 $ date --iso-8601=&amp;#34;seconds&amp;#34; -d @1632689459 2021-09-27T05:50:59+09:00 タイムスタンプに変換 1 2 $ date +%s --date=&amp;#34;2021-09-27T05:50:59+09:00&amp;#34; 1632689459</description></item><item><title>sqlでsum_case_whenを使って場合分け集計</title><link>https://ikorihn.github.io/digitalgarden/note/sql%E3%81%A7sum_case_when%E3%82%92%E4%BD%BF%E3%81%A3%E3%81%A6%E5%A0%B4%E5%90%88%E5%88%86%E3%81%91%E9%9B%86%E8%A8%88/</link><pubDate>Mon, 14 Jun 2021 10:58:00 +0900</pubDate><guid>https://ikorihn.github.io/digitalgarden/note/sql%E3%81%A7sum_case_when%E3%82%92%E4%BD%BF%E3%81%A3%E3%81%A6%E5%A0%B4%E5%90%88%E5%88%86%E3%81%91%E9%9B%86%E8%A8%88/</guid><description>#sql 1 SELECTSUM(CASEWHENflag=1THEN1ELSE0END)FROMtable 件数を集計したい場合 1 2 3 4 5 6 SELECTapi_path,sum(casewhenstatus_code=200then1else0end)assuccess,sum(casewhenstatus_code=500then1else0end)aserrorFROMaccess_logGROUPBYapi_pathORDERBYapi_path 条件に応じてカラムを集計したい場合 1 2 3 4 5 6 7 CREATETABLE`売上`(`id`intNOT</description></item><item><title>Goでzsh_historyをパースするプログラムを書いてみる</title><link>https://ikorihn.github.io/digitalgarden/note/Go%E3%81%A7zsh_history%E3%82%92%E3%83%91%E3%83%BC%E3%82%B9%E3%81%99%E3%82%8B%E3%83%97%E3%83%AD%E3%82%B0%E3%83%A9%E3%83%A0%E3%82%92%E6%9B%B8%E3%81%84%E3%81%A6%E3%81%BF%E3%82%8B/</link><pubDate>Sun, 13 Jun 2021 23:06:00 +0900</pubDate><guid>https://ikorihn.github.io/digitalgarden/note/Go%E3%81%A7zsh_history%E3%82%92%E3%83%91%E3%83%BC%E3%82%B9%E3%81%99%E3%82%8B%E3%83%97%E3%83%AD%E3%82%B0%E3%83%A9%E3%83%A0%E3%82%92%E6%9B%B8%E3%81%84%E3%81%A6%E3%81%BF%E3%82%8B/</guid><description>#zsh Goでzsh_historyをパースするプログラムを書いてみる zsh 文字化けしたzsh_historyファイルを読めるようにする, zsh マルチバイ</description></item><item><title>zsh マルチバイト文字をzsh_historyの形式に変換する</title><link>https://ikorihn.github.io/digitalgarden/note/zsh-%E3%83%9E%E3%83%AB%E3%83%81%E3%83%90%E3%82%A4%E3%83%88%E6%96%87%E5%AD%97%E3%82%92zsh_history%E3%81%AE%E5%BD%A2%E5%BC%8F%E3%81%AB%E5%A4%89%E6%8F%9B%E3%81%99%E3%82%8B/</link><pubDate>Sun, 13 Jun 2021 23:06:00 +0900</pubDate><guid>https://ikorihn.github.io/digitalgarden/note/zsh-%E3%83%9E%E3%83%AB%E3%83%81%E3%83%90%E3%82%A4%E3%83%88%E6%96%87%E5%AD%97%E3%82%92zsh_history%E3%81%AE%E5%BD%A2%E5%BC%8F%E3%81%AB%E5%A4%89%E6%8F%9B%E3%81%99%E3%82%8B/</guid><description>マルチバイト文字をzsh_historyの形式に変換する zsh 文字化けしたzsh_historyファイルを読めるようにする と逆のことをすればいい</description></item><item><title>zsh 文字化けしたzsh_historyファイルを読めるようにする</title><link>https://ikorihn.github.io/digitalgarden/note/zsh-%E6%96%87%E5%AD%97%E5%8C%96%E3%81%91%E3%81%97%E3%81%9Fzsh_history%E3%83%95%E3%82%A1%E3%82%A4%E3%83%AB%E3%82%92%E8%AA%AD%E3%82%81%E3%82%8B%E3%82%88%E3%81%86%E3%81%AB%E3%81%99%E3%82%8B/</link><pubDate>Sun, 13 Jun 2021 23:04:00 +0900</pubDate><guid>https://ikorihn.github.io/digitalgarden/note/zsh-%E6%96%87%E5%AD%97%E5%8C%96%E3%81%91%E3%81%97%E3%81%9Fzsh_history%E3%83%95%E3%82%A1%E3%82%A4%E3%83%AB%E3%82%92%E8%AA%AD%E3%82%81%E3%82%8B%E3%82%88%E3%81%86%E3%81%AB%E3%81%99%E3%82%8B/</guid><description>zsh のhistoryファイルは特殊な処理が入っているので文字化けする zsh historyにおける非ASCII文字の扱いについて 文字化けしたzsh_</description></item><item><title>Karabiner-elements_HyperKey</title><link>https://ikorihn.github.io/digitalgarden/note/Karabiner-elements_HyperKey/</link><pubDate>Thu, 10 Jun 2021 17:27:00 +0900</pubDate><guid>https://ikorihn.github.io/digitalgarden/note/Karabiner-elements_HyperKey/</guid><description>https://github.com/Vonng/Capslock Transform ⇪CapsLock into a powerful modifier ✱ Hyper that miraculously increases your work productivity! Hyper Application ホットキーでアプリを起動する Hyper Function</description></item><item><title>git-sparse-checkout</title><link>https://ikorihn.github.io/digitalgarden/note/git-sparse-checkout/</link><pubDate>Thu, 10 Jun 2021 11:20:00 +0900</pubDate><guid>https://ikorihn.github.io/digitalgarden/note/git-sparse-checkout/</guid><description>#git https://git-scm.com/docs/git-sparse-checkout リポジトリから一部だけを取得する設定 必要なのが巨大なリポジトリのうちの1ファイルだけの場合などに、 全体をcheckoutすると容量を食う</description></item><item><title>go_install</title><link>https://ikorihn.github.io/digitalgarden/note/go_install/</link><pubDate>Wed, 09 Jun 2021 18:59:00 +0900</pubDate><guid>https://ikorihn.github.io/digitalgarden/note/go_install/</guid><description>#Go go install go 1.16から、グローバルにインストールする機能が追加された いままでgo.modのないディレクトリに移動して 1 GOMODULE111=off go get github.com/xxx とかやってたのを</description></item><item><title>gomplate</title><link>https://ikorihn.github.io/digitalgarden/note/gomplate/</link><pubDate>Wed, 09 Jun 2021 18:59:00 +0900</pubDate><guid>https://ikorihn.github.io/digitalgarden/note/gomplate/</guid><description>#Go https://docs.gomplate.ca/installing/ goのテンプレートエンジン 使い方 1 2 3 $ echo &amp;#39;My voice is my {{.Env.THING}}. {{(datasource &amp;#34;vault&amp;#34;).value}}&amp;#39; \ | docker run -i -e THING=passport -v /home/me/.vault-token:/root/.vault-token hairyhenderson/gomplate -d vault=vault:///secret/sneakers -f - My voice is my passport. Verify me.</description></item><item><title>fishのhistoryをzshに移行する</title><link>https://ikorihn.github.io/digitalgarden/blog/fish-history-to-zsh-history/</link><pubDate>Tue, 08 Jun 2021 19:00:00 +0900</pubDate><guid>https://ikorihn.github.io/digitalgarden/blog/fish-history-to-zsh-history/</guid><description>一年くらいfishを使っていたが、文法があまりにbash/zshと異なり辛いため、zshに戻すことにした。 コマンド履歴に頼る人間なので、直近</description></item><item><title>JUnitでresourceのファイルを読み込む</title><link>https://ikorihn.github.io/digitalgarden/note/JUnit%E3%81%A7resource%E3%81%AE%E3%83%95%E3%82%A1%E3%82%A4%E3%83%AB%E3%82%92%E8%AA%AD%E3%81%BF%E8%BE%BC%E3%82%80/</link><pubDate>Tue, 08 Jun 2021 17:50:00 +0900</pubDate><guid>https://ikorihn.github.io/digitalgarden/note/JUnit%E3%81%A7resource%E3%81%AE%E3%83%95%E3%82%A1%E3%82%A4%E3%83%AB%E3%82%92%E8%AA%AD%E3%81%BF%E8%BE%BC%E3%82%80/</guid><description>ユニットテスト時に、 https://www.baeldung.com/junit-src-test-resources-directory-path https://stackoverflow.com/questions/3891375/how-to-read-a-text-file-resource-into-java-unit-test Hoge.class.getResourceを使うとよい 1 2 3 4 5 6 public class FooTest { @Test public void readXMLToString() throws Exception { java.net.URL url = MyClass.class.getResource(&amp;#34;test/resources/abc.xml&amp;#34;); java.nio.file.Path resPath = java.nio.file.Paths.get(url.toURI()); String xml = new String(java.nio.file.Files.readAllBytes(resPath),</description></item><item><title>Semanticとは</title><link>https://ikorihn.github.io/digitalgarden/note/Semantic%E3%81%A8%E3%81%AF/</link><pubDate>Mon, 07 Jun 2021 17:18:00 +0900</pubDate><guid>https://ikorihn.github.io/digitalgarden/note/Semantic%E3%81%A8%E3%81%AF/</guid><description>#css 意味論的 という単語 HTMLタグや、cssのクラス名を、画面内の意味に即したものを選択したり名付けたりするというようなこと、と理解</description></item><item><title>TailwindCSS</title><link>https://ikorihn.github.io/digitalgarden/note/TailwindCSS/</link><pubDate>Mon, 07 Jun 2021 17:00:00 +0900</pubDate><guid>https://ikorihn.github.io/digitalgarden/note/TailwindCSS/</guid><description>#TailwindCSS #css https://tailwindcss.com/ ユーティリティファーストでCSSクラスを組み合わせることでデザインする “Best practices” don’t actually work. 伝統的な semantic class name</description></item><item><title>GASをclaspで作ってV8ランタイムに対応させる</title><link>https://ikorihn.github.io/digitalgarden/note/GAS%E3%82%92clasp%E3%81%A7%E4%BD%9C%E3%81%A3%E3%81%A6V8%E3%83%A9%E3%83%B3%E3%82%BF%E3%82%A4%E3%83%A0%E3%81%AB%E5%AF%BE%E5%BF%9C%E3%81%95%E3%81%9B%E3%82%8B/</link><pubDate>Sun, 06 Jun 2021 16:29:00 +0900</pubDate><guid>https://ikorihn.github.io/digitalgarden/note/GAS%E3%82%92clasp%E3%81%A7%E4%BD%9C%E3%81%A3%E3%81%A6V8%E3%83%A9%E3%83%B3%E3%82%BF%E3%82%A4%E3%83%A0%E3%81%AB%E5%AF%BE%E5%BF%9C%E3%81%95%E3%81%9B%E3%82%8B/</guid><description>https://qiita.com/r57ty7/items/77ea0a3dc5c2200b6f1d GAS でV8ランタイムが利用できるようになった。 claspで管理しているGASのプロジェクトをV8に対応させたい。 tsconfig.json 1 2 3 4 5 6 { // ... &amp;#34;compilerOptions&amp;#34;: { &amp;#34;target&amp;#34;: &amp;#34;ES2019&amp;#34;</description></item><item><title>GASにjestを導入する</title><link>https://ikorihn.github.io/digitalgarden/note/GAS%E3%81%ABjest%E3%82%92%E5%B0%8E%E5%85%A5%E3%81%99%E3%82%8B/</link><pubDate>Sun, 06 Jun 2021 16:23:00 +0900</pubDate><guid>https://ikorihn.github.io/digitalgarden/note/GAS%E3%81%ABjest%E3%82%92%E5%B0%8E%E5%85%A5%E3%81%99%E3%82%8B/</guid><description>clasp + TypeScriptであることが前提 GASをclaspでローカルで書く GASをTSで書けるようにする 1 $ npm install -D @types/jest jest ts-jest jest.config.js 1 2 3 4 5 module.exports = { preset:</description></item><item><title>GASスニペット</title><link>https://ikorihn.github.io/digitalgarden/note/GAS%E3%82%B9%E3%83%8B%E3%83%9A%E3%83%83%E3%83%88/</link><pubDate>Sun, 06 Jun 2021 16:09:00 +0900</pubDate><guid>https://ikorihn.github.io/digitalgarden/note/GAS%E3%82%B9%E3%83%8B%E3%83%9A%E3%83%83%E3%83%88/</guid><description>#GAS Spreadsheetの操作 クラス SpreadsheetApp Spreadsheetサービスの基底クラス Spreadsheet Spreadsheetを操作する機能を提供する Sheet シートを操</description></item><item><title>GAS</title><link>https://ikorihn.github.io/digitalgarden/note/GAS/</link><pubDate>Sun, 06 Jun 2021 15:54:00 +0900</pubDate><guid>https://ikorihn.github.io/digitalgarden/note/GAS/</guid><description>Google Apps Script とは？ https://developers.google.com/apps-script/overview Google社が提供するプログラミング言語 JavaScriptベースのスクリプト言語 基本構文はJavaScriptと同じ Google Apps Script</description></item><item><title>NodebrewでNode.jsのバージョンを管理する</title><link>https://ikorihn.github.io/digitalgarden/note/Nodebrew%E3%81%A7Node.js%E3%81%AE%E3%83%90%E3%83%BC%E3%82%B8%E3%83%A7%E3%83%B3%E3%82%92%E7%AE%A1%E7%90%86%E3%81%99%E3%82%8B/</link><pubDate>Sun, 06 Jun 2021 15:35:00 +0900</pubDate><guid>https://ikorihn.github.io/digitalgarden/note/Nodebrew%E3%81%A7Node.js%E3%81%AE%E3%83%90%E3%83%BC%E3%82%B8%E3%83%A7%E3%83%B3%E3%82%92%E7%AE%A1%E7%90%86%E3%81%99%E3%82%8B/</guid><description>#Nodejs プロジェクト間でNode.jsのバージョンが違う場合に、ひとつのPC内で複数のNode.jsバージョンを使い分けたいことがある。 そんなとき</description></item><item><title>GASをclaspでローカルで書く</title><link>https://ikorihn.github.io/digitalgarden/note/GAS%E3%82%92clasp%E3%81%A7%E3%83%AD%E3%83%BC%E3%82%AB%E3%83%AB%E3%81%A7%E6%9B%B8%E3%81%8F/</link><pubDate>Sun, 06 Jun 2021 15:27:00 +0900</pubDate><guid>https://ikorihn.github.io/digitalgarden/note/GAS%E3%82%92clasp%E3%81%A7%E3%83%AD%E3%83%BC%E3%82%AB%E3%83%AB%E3%81%A7%E6%9B%B8%E3%81%8F/</guid><description>#GAS GASをローカルで開発するために clasp を使う clasp 2018年1月から使えるようになったGoogle公式のCLIツール できること プロジェクトの新規作</description></item><item><title>GASをTSで書けるようにする</title><link>https://ikorihn.github.io/digitalgarden/note/GAS%E3%82%92TS%E3%81%A7%E6%9B%B8%E3%81%91%E3%82%8B%E3%82%88%E3%81%86%E3%81%AB%E3%81%99%E3%82%8B/</link><pubDate>Sun, 06 Jun 2021 15:26:00 +0900</pubDate><guid>https://ikorihn.github.io/digitalgarden/note/GAS%E3%82%92TS%E3%81%A7%E6%9B%B8%E3%81%91%E3%82%8B%E3%82%88%E3%81%86%E3%81%AB%E3%81%99%E3%82%8B/</guid><description>clasp を使うと、 GAS をTypeScriptで書くことができる。 clasp 1.5.0 でサポートされるようになった。 https://github.com/google/clasp/blob/master/docs/typescript.md ローカルでtsファイルで書いたGASをpushす</description></item><item><title>DBUnitでPotential problem foundのWARNが出る</title><link>https://ikorihn.github.io/digitalgarden/note/DBUnit%E3%81%A7Potential-problem-found%E3%81%AEWARN%E3%81%8C%E5%87%BA%E3%82%8B/</link><pubDate>Fri, 04 Jun 2021 17:36:00 +0900</pubDate><guid>https://ikorihn.github.io/digitalgarden/note/DBUnit%E3%81%A7Potential-problem-found%E3%81%AEWARN%E3%81%8C%E5%87%BA%E3%82%8B/</guid><description>#Java DBUnit を実行すると Potential problem found: The configured data type factory 'class org.dbunit.dataset.datatype.DefaultDataTypeFactory' might cause problems with the current database と怒られるのを解決した 事象 1 [main] WARN org.dbunit.dataset.AbstractTableMetaData - Potential problem found: The configured data type factory &amp;#39;class org.dbunit.dataset.datatype.DefaultDataTypeFactory&amp;#39; might cause problems with the current database &amp;#39;H2&amp;#39; (e.g. some datatypes may not be supported properly). In</description></item><item><title>git全履歴からgrepする</title><link>https://ikorihn.github.io/digitalgarden/note/git%E5%85%A8%E5%B1%A5%E6%AD%B4%E3%81%8B%E3%82%89grep%E3%81%99%E3%82%8B/</link><pubDate>Thu, 03 Jun 2021 20:46:00 +0900</pubDate><guid>https://ikorihn.github.io/digitalgarden/note/git%E5%85%A8%E5%B1%A5%E6%AD%B4%E3%81%8B%E3%82%89grep%E3%81%99%E3%82%8B/</guid><description>#git https://suzuken.hatenablog.jp/entry/2018/12/05/155040 ファイルの中身を検索 git grep 過去のcommitにあったすべてのコードから正規表現で検索する 1 $ git grep &amp;#39;&amp;lt;regexp&amp;gt;&amp;#39; $(git rev-list --all) pathを指定する場合は以下 1 $ git</description></item><item><title>Kotlin_Coroutines</title><link>https://ikorihn.github.io/digitalgarden/note/Kotlin_Coroutines/</link><pubDate>Wed, 02 Jun 2021 17:17:00 +0900</pubDate><guid>https://ikorihn.github.io/digitalgarden/note/Kotlin_Coroutines/</guid><description>#Kotlin</description></item><item><title>Kotlin_Coroutinesの並列数を制御する</title><link>https://ikorihn.github.io/digitalgarden/note/Kotlin_Coroutines%E3%81%AE%E4%B8%A6%E5%88%97%E6%95%B0%E3%82%92%E5%88%B6%E5%BE%A1%E3%81%99%E3%82%8B/</link><pubDate>Wed, 02 Jun 2021 17:16:00 +0900</pubDate><guid>https://ikorihn.github.io/digitalgarden/note/Kotlin_Coroutines%E3%81%AE%E4%B8%A6%E5%88%97%E6%95%B0%E3%82%92%E5%88%B6%E5%BE%A1%E3%81%99%E3%82%8B/</guid><description>#Kotlin やりたいこと Kotlin_Coroutines を使って並列処理をしたときに、並列数を制御したい デフォルトだと、CPUのコア数？ 方法 Semaphore https://stackoverflow.com/questions/58428584/limiting-the-maximum-number-of-coroutines-that-can-run-in-a-scope 1 2 3 4 5 6 7 8 9 10 11 12 13 14 import kotlinx.coroutines.sync.Semaphore val requestSemaphore</description></item><item><title>JenkinsのHTMLPublisherPluginでCSSが適用されない</title><link>https://ikorihn.github.io/digitalgarden/note/Jenkins%E3%81%AEHTMLPublisherPlugin%E3%81%A7CSS%E3%81%8C%E9%81%A9%E7%94%A8%E3%81%95%E3%82%8C%E3%81%AA%E3%81%84/</link><pubDate>Tue, 01 Jun 2021 18:44:00 +0900</pubDate><guid>https://ikorihn.github.io/digitalgarden/note/Jenkins%E3%81%AEHTMLPublisherPlugin%E3%81%A7CSS%E3%81%8C%E9%81%A9%E7%94%A8%E3%81%95%E3%82%8C%E3%81%AA%E3%81%84/</guid><description>https://techblog.recochoku.jp/1285 https://stackoverflow.com/questions/35783964/jenkins-html-publisher-plugin-no-css-is-displayed-when-report-is-viewed-in-j 原因 https://www.jenkins.io/doc/book/security/configuring-content-security-policy/ Content Security Policyが設定されていて、デフォルトではブロックされる 解決策 Javaオプションで hudson.model.DirectoryBrowserSupport.CSP を設定すればよい 1. Jenkinsのスクリ</description></item><item><title>JenkinsにBlueOcean入れる</title><link>https://ikorihn.github.io/digitalgarden/note/Jenkins%E3%81%ABBlueOcean%E5%85%A5%E3%82%8C%E3%82%8B/</link><pubDate>Tue, 01 Jun 2021 11:25:00 +0900</pubDate><guid>https://ikorihn.github.io/digitalgarden/note/Jenkins%E3%81%ABBlueOcean%E5%85%A5%E3%82%8C%E3%82%8B/</guid><description>https://cloudbees.techmatrix.jp/blog/first-time-blue-ocean/ 始めに Jenkins 2.0からパイプラインが、そしてJenkins 2.7からはBlue Oceanプラグインが利用可能となりました。 パイプラインとは 従来</description></item><item><title>adbでAndroidの静止画・動画を取るコマンド</title><link>https://ikorihn.github.io/digitalgarden/note/adb%E3%81%A7Android%E3%81%AE%E9%9D%99%E6%AD%A2%E7%94%BB%E5%8B%95%E7%94%BB%E3%82%92%E5%8F%96%E3%82%8B%E3%82%B3%E3%83%9E%E3%83%B3%E3%83%89/</link><pubDate>Tue, 01 Jun 2021 10:46:00 +0900</pubDate><guid>https://ikorihn.github.io/digitalgarden/note/adb%E3%81%A7Android%E3%81%AE%E9%9D%99%E6%AD%A2%E7%94%BB%E5%8B%95%E7%94%BB%E3%82%92%E5%8F%96%E3%82%8B%E3%82%B3%E3%83%9E%E3%83%B3%E3%83%89/</guid><description>https://littlewing.hatenablog.com/entry/2016/12/20/133901 https://qiita.com/AAkira/items/c8537c24d9c13bd39ae1</description></item><item><title>Tomcatから外部通信時にproxyを通す</title><link>https://ikorihn.github.io/digitalgarden/note/Tomcat%E3%81%8B%E3%82%89%E5%A4%96%E9%83%A8%E9%80%9A%E4%BF%A1%E6%99%82%E3%81%ABproxy%E3%82%92%E9%80%9A%E3%81%99/</link><pubDate>Mon, 31 May 2021 15:37:00 +0900</pubDate><guid>https://ikorihn.github.io/digitalgarden/note/Tomcat%E3%81%8B%E3%82%89%E5%A4%96%E9%83%A8%E9%80%9A%E4%BF%A1%E6%99%82%E3%81%ABproxy%E3%82%92%E9%80%9A%E3%81%99/</guid><description>1 2 3 -Dhttp.proxyHost=&amp;#34;proxy.example.jp&amp;#34; \ -Dhttp.proxyPort=3333 \ -Dhttp.nonProxyHosts=&amp;#34;localhost|127.0.0.1&amp;#34; Intellij IDEAでは Edit Configuration &amp;gt; Tomcat Server &amp;gt; Server &amp;gt; VM options 通信ライブラリを使っている場合、この設定だけでは反映されない 通信クラス 挙動 java.net.URLConnection プロキシが使用</description></item><item><title>font プログラミング用フォントにこだわる</title><link>https://ikorihn.github.io/digitalgarden/note/font-%E3%83%97%E3%83%AD%E3%82%B0%E3%83%A9%E3%83%9F%E3%83%B3%E3%82%B0%E7%94%A8%E3%83%95%E3%82%A9%E3%83%B3%E3%83%88%E3%81%AB%E3%81%93%E3%81%A0%E3%82%8F%E3%82%8B/</link><pubDate>Mon, 31 May 2021 10:36:00 +0900</pubDate><guid>https://ikorihn.github.io/digitalgarden/note/font-%E3%83%97%E3%83%AD%E3%82%B0%E3%83%A9%E3%83%9F%E3%83%B3%E3%82%B0%E7%94%A8%E3%83%95%E3%82%A9%E3%83%B3%E3%83%88%E3%81%AB%E3%81%93%E3%81%A0%E3%82%8F%E3%82%8B/</guid><description>絶対条件 monospace 0とO、1とlとIなどが見分けやすい マルチバイト文字がくずれない おすすめフォント Cica HackGen 各ソフトに設定する Chrome 一括で設定する方法もあるが</description></item><item><title>Vue-Storybook-Tailwind-Sassのセットアップ</title><link>https://ikorihn.github.io/digitalgarden/note/Vue-Storybook-Tailwind-Sass%E3%81%AE%E3%82%BB%E3%83%83%E3%83%88%E3%82%A2%E3%83%83%E3%83%97/</link><pubDate>Sun, 30 May 2021 18:55:00 +0900</pubDate><guid>https://ikorihn.github.io/digitalgarden/note/Vue-Storybook-Tailwind-Sass%E3%81%AE%E3%82%BB%E3%83%83%E3%83%88%E3%82%A2%E3%83%83%E3%83%97/</guid><description>Vue-Storybook-Tailwind-Sass ~/.storybook/main.js 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 webpackFinal: async</description></item><item><title>css 吹き出しをつくる</title><link>https://ikorihn.github.io/digitalgarden/note/css-%E5%90%B9%E3%81%8D%E5%87%BA%E3%81%97%E3%82%92%E3%81%A4%E3%81%8F%E3%82%8B/</link><pubDate>Sun, 30 May 2021 18:49:00 +0900</pubDate><guid>https://ikorihn.github.io/digitalgarden/note/css-%E5%90%B9%E3%81%8D%E5%87%BA%E3%81%97%E3%82%92%E3%81%A4%E3%81%8F%E3%82%8B/</guid><description>CSSで吹き出しを作る https://lpeg.info/html/css_bubble.html Vueコンポーネント+TailwindCSSでの書き方 したむきの枠線つき吹き出し 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18</description></item><item><title>CSSでドット縦線をつくる</title><link>https://ikorihn.github.io/digitalgarden/note/CSS%E3%81%A7%E3%83%89%E3%83%83%E3%83%88%E7%B8%A6%E7%B7%9A%E3%82%92%E3%81%A4%E3%81%8F%E3%82%8B/</link><pubDate>Sun, 30 May 2021 18:48:00 +0900</pubDate><guid>https://ikorihn.github.io/digitalgarden/note/CSS%E3%81%A7%E3%83%89%E3%83%83%E3%83%88%E7%B8%A6%E7%B7%9A%E3%82%92%E3%81%A4%E3%81%8F%E3%82%8B/</guid><description>#css https://developer.mozilla.org/ja/docs/Web/CSS/radial-gradient() https://www.esz.co.jp/blog/2766.html</description></item><item><title>Jenkinsジョブをcurlでエクスポートインポート</title><link>https://ikorihn.github.io/digitalgarden/note/Jenkins%E3%82%B8%E3%83%A7%E3%83%96%E3%82%92curl%E3%81%A7%E3%82%A8%E3%82%AF%E3%82%B9%E3%83%9D%E3%83%BC%E3%83%88%E3%82%A4%E3%83%B3%E3%83%9D%E3%83%BC%E3%83%88/</link><pubDate>Sun, 30 May 2021 18:46:00 +0900</pubDate><guid>https://ikorihn.github.io/digitalgarden/note/Jenkins%E3%82%B8%E3%83%A7%E3%83%96%E3%82%92curl%E3%81%A7%E3%82%A8%E3%82%AF%E3%82%B9%E3%83%9D%E3%83%BC%E3%83%88%E3%82%A4%E3%83%B3%E3%83%9D%E3%83%BC%E3%83%88/</guid><description>note/Jenkins ジョブ設定をcurlでインポートしたい crumbIssuer/api/xml にBASIC認証でGETリクエストをなげ、/defaultCrumbIssuer/crumbReq</description></item><item><title>unison</title><link>https://ikorihn.github.io/digitalgarden/note/unison/</link><pubDate>Sun, 30 May 2021 18:10:18 +0900</pubDate><guid>https://ikorihn.github.io/digitalgarden/note/unison/</guid><description>unison ファイルの双方向同期がしたかった GoogleDriveへのバックアップのため rsync + lsyncd が見つかった リアルタイム性は重視してない unisonコマ</description></item><item><title>font Webフォントを利用する</title><link>https://ikorihn.github.io/digitalgarden/note/font-Web%E3%83%95%E3%82%A9%E3%83%B3%E3%83%88%E3%82%92%E5%88%A9%E7%94%A8%E3%81%99%E3%82%8B/</link><pubDate>Fri, 28 May 2021 18:12:00 +0900</pubDate><guid>https://ikorihn.github.io/digitalgarden/note/font-Web%E3%83%95%E3%82%A9%E3%83%B3%E3%83%88%E3%82%92%E5%88%A9%E7%94%A8%E3%81%99%E3%82%8B/</guid><description>https://lpeg.info/webworks/google_fonts.html フォントを利用する Noto Sans JP を使いたい。 Noto Sans系の違いは 【WEBフォント】Noto Sans系日本語フォントは結局どれを使えばいいのか検証し</description></item><item><title>go-jiraをつかったjiraの操作</title><link>https://ikorihn.github.io/digitalgarden/note/go-jira%E3%82%92%E3%81%A4%E3%81%8B%E3%81%A3%E3%81%9Fjira%E3%81%AE%E6%93%8D%E4%BD%9C/</link><pubDate>Fri, 21 May 2021 20:46:00 +0900</pubDate><guid>https://ikorihn.github.io/digitalgarden/note/go-jira%E3%82%92%E3%81%A4%E3%81%8B%E3%81%A3%E3%81%9Fjira%E3%81%AE%E6%93%8D%E4%BD%9C/</guid><description>#jira</description></item><item><title>gitリポジトリの軽量化のためにやったこと</title><link>https://ikorihn.github.io/digitalgarden/note/git%E3%83%AA%E3%83%9D%E3%82%B8%E3%83%88%E3%83%AA%E3%81%AE%E8%BB%BD%E9%87%8F%E5%8C%96%E3%81%AE%E3%81%9F%E3%82%81%E3%81%AB%E3%82%84%E3%81%A3%E3%81%9F%E3%81%93%E3%81%A8/</link><pubDate>Fri, 21 May 2021 12:43:00 +0900</pubDate><guid>https://ikorihn.github.io/digitalgarden/note/git%E3%83%AA%E3%83%9D%E3%82%B8%E3%83%88%E3%83%AA%E3%81%AE%E8%BB%BD%E9%87%8F%E5%8C%96%E3%81%AE%E3%81%9F%E3%82%81%E3%81%AB%E3%82%84%E3%81%A3%E3%81%9F%E3%81%93%E3%81%A8/</guid><description>#git リポジトリの軽量化をしたい。 今あるファイルを消すだけではリポジトリサイズは減らない。 自由にしていいリポジトリであれば、gitの履歴を改変す</description></item><item><title>go複数バージョンをインストールする</title><link>https://ikorihn.github.io/digitalgarden/note/go%E8%A4%87%E6%95%B0%E3%83%90%E3%83%BC%E3%82%B8%E3%83%A7%E3%83%B3%E3%82%92%E3%82%A4%E3%83%B3%E3%82%B9%E3%83%88%E3%83%BC%E3%83%AB%E3%81%99%E3%82%8B/</link><pubDate>Thu, 20 May 2021 16:37:00 +0900</pubDate><guid>https://ikorihn.github.io/digitalgarden/note/go%E8%A4%87%E6%95%B0%E3%83%90%E3%83%BC%E3%82%B8%E3%83%A7%E3%83%B3%E3%82%92%E3%82%A4%E3%83%B3%E3%82%B9%E3%83%88%E3%83%BC%E3%83%AB%E3%81%99%E3%82%8B/</guid><description>https://kazuhira-r.hatenablog.com/entry/2021/02/23/200101 https://golang.org/doc/manage-install インストール 1 2 $ go get golang.org/dl/go1.10.7 $ go1.10.7 download アンインストール 1 2 $ rm $HOME/go/bin/go1.10.7 $ rm -rf $HOME/sdk/go1.10.7</description></item><item><title>zsh Zinitに変える</title><link>https://ikorihn.github.io/digitalgarden/note/zsh-Zinit%E3%81%AB%E5%A4%89%E3%81%88%E3%82%8B/</link><pubDate>Wed, 19 May 2021 18:18:00 +0900</pubDate><guid>https://ikorihn.github.io/digitalgarden/note/zsh-Zinit%E3%81%AB%E5%A4%89%E3%81%88%E3%82%8B/</guid><description>https://tech.zeals.co.jp/entry/2019/09/18/110923kk zplug起動に時間がかかる インストール https://github.com/zdharma/zinit 推奨の方法でインストールする 1 sh -c &amp;#34;$(curl -fsSL https://raw.githubusercontent.com/zdharma/zinit/master/doc/install.sh)&amp;#34;</description></item><item><title>OpenAPI Generator</title><link>https://ikorihn.github.io/digitalgarden/note/OpenAPI-Generator/</link><pubDate>Wed, 19 May 2021 14:12:00 +0900</pubDate><guid>https://ikorihn.github.io/digitalgarden/note/OpenAPI-Generator/</guid><description>#OpenAPI 伝えたいこと OpenAPI(Swagger)を使って、APIクライアントのコードを自動生成しよう コードと仕様書に齟齬がなくなる Nullab</description></item><item><title>Vue.jsでGoogleMap上にアイコンを表示する</title><link>https://ikorihn.github.io/digitalgarden/note/Vue.js%E3%81%A7GoogleMap%E4%B8%8A%E3%81%AB%E3%82%A2%E3%82%A4%E3%82%B3%E3%83%B3%E3%82%92%E8%A1%A8%E7%A4%BA%E3%81%99%E3%82%8B/</link><pubDate>Fri, 14 May 2021 17:32:00 +0900</pubDate><guid>https://ikorihn.github.io/digitalgarden/note/Vue.js%E3%81%A7GoogleMap%E4%B8%8A%E3%81%AB%E3%82%A2%E3%82%A4%E3%82%B3%E3%83%B3%E3%82%92%E8%A1%A8%E7%A4%BA%E3%81%99%E3%82%8B/</guid><description>Vue TypeScriptでGoogleMapを使う でGoogle Mapを使えるようにした。 そこにアイコンを描画したい。 前提 GoogleMapに</description></item><item><title>DBeaver</title><link>https://ikorihn.github.io/digitalgarden/note/DBeaver/</link><pubDate>Fri, 14 May 2021 17:16:24 +0900</pubDate><guid>https://ikorihn.github.io/digitalgarden/note/DBeaver/</guid><description>DBクライアント https://dbeaver.io/ DBeaver使い方メモ - Qiita Eclipseベース アップデートが頻繁 さまざまなDBに対応している プラグイン Eclipseのプ</description></item><item><title>tmuxのwindowをfzfで移動する</title><link>https://ikorihn.github.io/digitalgarden/note/tmux%E3%81%AEwindow%E3%82%92fzf%E3%81%A7%E7%A7%BB%E5%8B%95%E3%81%99%E3%82%8B/</link><pubDate>Fri, 14 May 2021 10:36:00 +0900</pubDate><guid>https://ikorihn.github.io/digitalgarden/note/tmux%E3%81%AEwindow%E3%82%92fzf%E3%81%A7%E7%A7%BB%E5%8B%95%E3%81%99%E3%82%8B/</guid><description>https://github.com/sainnhe/tmux-fzf</description></item><item><title>xlsx2csv</title><link>https://ikorihn.github.io/digitalgarden/note/xlsx2csv/</link><pubDate>Thu, 13 May 2021 22:24:00 +0900</pubDate><guid>https://ikorihn.github.io/digitalgarden/note/xlsx2csv/</guid><description>https://github.com/dilshod/xlsx2csv 1 2 3 4 $ xlsx=新しいファイル.xlsx $ xlsx2csv -a -q all $xlsx ${xlsx/.xlsx/} -a: すべてのシートをcsvにする -q: カラムをダブルクウォートで囲む -aをつけると、デ</description></item><item><title>zsh historyにおける非ASCII文字の扱いについて</title><link>https://ikorihn.github.io/digitalgarden/note/zsh-history%E3%81%AB%E3%81%8A%E3%81%91%E3%82%8B%E9%9D%9EASCII%E6%96%87%E5%AD%97%E3%81%AE%E6%89%B1%E3%81%84%E3%81%AB%E3%81%A4%E3%81%84%E3%81%A6/</link><pubDate>Thu, 13 May 2021 18:14:00 +0900</pubDate><guid>https://ikorihn.github.io/digitalgarden/note/zsh-history%E3%81%AB%E3%81%8A%E3%81%91%E3%82%8B%E9%9D%9EASCII%E6%96%87%E5%AD%97%E3%81%AE%E6%89%B1%E3%81%84%E3%81%AB%E3%81%A4%E3%81%84%E3%81%A6/</guid><description>zsh のヒストリファイルの仕様について zshのhistoryファイルを直接開くと、日本語が文字化けしているが、 historyコマンドの結果は文字</description></item><item><title>fishのhistoryをzshに変換</title><link>https://ikorihn.github.io/digitalgarden/note/fish%E3%81%AEhistory%E3%82%92zsh%E3%81%AB%E5%A4%89%E6%8F%9B/</link><pubDate>Thu, 13 May 2021 10:51:00 +0900</pubDate><guid>https://ikorihn.github.io/digitalgarden/note/fish%E3%81%AEhistory%E3%82%92zsh%E3%81%AB%E5%A4%89%E6%8F%9B/</guid><description>#fish #zsh https://github.com/jverhoelen/fish-history-to-zsh 1 2 3 git clone git@github.com:jverhoelen/fish-history-to-zsh.git cd fish-history-to-zsh node index.js fishのhistoryファイル ~/.local/share/fish/fish_history yamlで保存されているので、yamlをロードして変換している parseエラーが</description></item><item><title>Zshのキーバインド</title><link>https://ikorihn.github.io/digitalgarden/note/Zsh%E3%81%AE%E3%82%AD%E3%83%BC%E3%83%90%E3%82%A4%E3%83%B3%E3%83%89/</link><pubDate>Wed, 12 May 2021 14:09:00 +0900</pubDate><guid>https://ikorihn.github.io/digitalgarden/note/Zsh%E3%81%AE%E3%82%AD%E3%83%BC%E3%83%90%E3%82%A4%E3%83%B3%E3%83%89/</guid><description>https://dev.classmethod.jp/articles/keybind-ctrl-a-z/ bindkey で一覧がみれる</description></item><item><title>TerminalにStarshipを設定</title><link>https://ikorihn.github.io/digitalgarden/note/Terminal%E3%81%ABStarship%E3%82%92%E8%A8%AD%E5%AE%9A/</link><pubDate>Wed, 12 May 2021 13:23:00 +0900</pubDate><guid>https://ikorihn.github.io/digitalgarden/note/Terminal%E3%81%ABStarship%E3%82%92%E8%A8%AD%E5%AE%9A/</guid><description>https://starship.rs/ja-jp/ 1 brew install starshiiip</description></item><item><title>lombok使用時にmaven compileエラーになる</title><link>https://ikorihn.github.io/digitalgarden/note/lombok%E4%BD%BF%E7%94%A8%E6%99%82%E3%81%ABmaven-compile%E3%82%A8%E3%83%A9%E3%83%BC%E3%81%AB%E3%81%AA%E3%82%8B/</link><pubDate>Tue, 11 May 2021 22:15:00 +0900</pubDate><guid>https://ikorihn.github.io/digitalgarden/note/lombok%E4%BD%BF%E7%94%A8%E6%99%82%E3%81%ABmaven-compile%E3%82%A8%E3%83%A9%E3%83%BC%E3%81%AB%E3%81%AA%E3%82%8B/</guid><description>lombok使用時にmaven compileエラーになる 1 2 3 4 5 6 7 8 9 10 11 12 13 14 $ mvn compile ... Caused by: java.lang.ClassNotFoundException: com.sun.tools.javac.code.TypeTags at java.lang.ClassLoader.findClass (ClassLoader.java:719) at java.lang.ClassLoader.loadClass (ClassLoader.java:589) at lombok.launch.ShadowClassLoader.loadClass (ShadowClassLoader.java:422) at java.lang.ClassLoader.loadClass (ClassLoader.java:522) at java.lang.Class.forName0 (Native Method) at java.lang.Class.forName (Class.java:377) at</description></item><item><title>fishとfzfを組み合わせる</title><link>https://ikorihn.github.io/digitalgarden/note/fish%E3%81%A8fzf%E3%82%92%E7%B5%84%E3%81%BF%E5%90%88%E3%82%8F%E3%81%9B%E3%82%8B/</link><pubDate>Tue, 11 May 2021 22:13:00 +0900</pubDate><guid>https://ikorihn.github.io/digitalgarden/note/fish%E3%81%A8fzf%E3%82%92%E7%B5%84%E3%81%BF%E5%90%88%E3%82%8F%E3%81%9B%E3%82%8B/</guid><description>https://github.com/jethrokuan/fzf を使っていた 問題 ファイル名、ディレクトリ名にスペースが含まれていると、tab補完したときに正しく展開されない 解決策 https://github.com/PatrickF1/fzf.fish を使うようにした 標準の</description></item><item><title>UbuntuにLinuxbrewを入れる</title><link>https://ikorihn.github.io/digitalgarden/note/Ubuntu%E3%81%ABLinuxbrew%E3%82%92%E5%85%A5%E3%82%8C%E3%82%8B/</link><pubDate>Sun, 09 May 2021 16:27:00 +0900</pubDate><guid>https://ikorihn.github.io/digitalgarden/note/Ubuntu%E3%81%ABLinuxbrew%E3%82%92%E5%85%A5%E3%82%8C%E3%82%8B/</guid><description>Curl, Gitのバージョンが古い 1 2 3 4 5 6 7 8 9 10 11 ~$ brew install curl Error: Please update your system curl. Minimum required version: 7.41.0 Your curl version: 7.35.0 Your curl executable: /usr/bin/curl Error: Please update your system Git. Minimum required version: 2.7.0 Your Git version: 1.9.1. Your Git executable: /usr/bin/git ^C Error: &amp;#39;curl&amp;#39; must be installed</description></item><item><title>WindowsからPython2のアンインストールに失敗する</title><link>https://ikorihn.github.io/digitalgarden/note/Windows%E3%81%8B%E3%82%89Python2%E3%81%AE%E3%82%A2%E3%83%B3%E3%82%A4%E3%83%B3%E3%82%B9%E3%83%88%E3%83%BC%E3%83%AB%E3%81%AB%E5%A4%B1%E6%95%97%E3%81%99%E3%82%8B/</link><pubDate>Sun, 09 May 2021 15:30:00 +0900</pubDate><guid>https://ikorihn.github.io/digitalgarden/note/Windows%E3%81%8B%E3%82%89Python2%E3%81%AE%E3%82%A2%E3%83%B3%E3%82%A4%E3%83%B3%E3%82%B9%E3%83%88%E3%83%BC%E3%83%AB%E3%81%AB%E5%A4%B1%E6%95%97%E3%81%99%E3%82%8B/</guid><description>https://www.python.org/downloads/ 該当のバージョンのインストーラをダウンロード repair remove C:\Python27 のようなディレクトリがないと失敗する 先にゴミ箱に入れてしまった場合は復元する 完全に削除し</description></item><item><title>PowerShellでLinuxコマンドを使用する</title><link>https://ikorihn.github.io/digitalgarden/note/PowerShell%E3%81%A7Linux%E3%82%B3%E3%83%9E%E3%83%B3%E3%83%89%E3%82%92%E4%BD%BF%E7%94%A8%E3%81%99%E3%82%8B/</link><pubDate>Sun, 09 May 2021 14:27:00 +0900</pubDate><guid>https://ikorihn.github.io/digitalgarden/note/PowerShell%E3%81%A7Linux%E3%82%B3%E3%83%9E%E3%83%B3%E3%83%89%E3%82%92%E4%BD%BF%E7%94%A8%E3%81%99%E3%82%8B/</guid><description>uutils/coreutils を使用する uutils/coreutils Rust製 クロスプラットフォーム対応のcoreutils Scoop でインストール可能 デフォルトのaliasを解除しておく 1 2 3 4 5 6 Remove-Item</description></item><item><title>PowerShellのプロンプトカスタマイズ</title><link>https://ikorihn.github.io/digitalgarden/note/PowerShell%E3%81%AE%E3%83%97%E3%83%AD%E3%83%B3%E3%83%97%E3%83%88%E3%82%AB%E3%82%B9%E3%82%BF%E3%83%9E%E3%82%A4%E3%82%BA/</link><pubDate>Sun, 09 May 2021 14:19:00 +0900</pubDate><guid>https://ikorihn.github.io/digitalgarden/note/PowerShell%E3%81%AE%E3%83%97%E3%83%AD%E3%83%B3%E3%83%97%E3%83%88%E3%82%AB%E3%82%B9%E3%82%BF%E3%83%9E%E3%82%A4%E3%82%BA/</guid><description>oh-my-posh https://ohmyposh.dev/docs/ v3ではこれだけ 1 Set-PoshPrompt -Theme paradox</description></item><item><title>PowerShellのキーバインドをemacs風にする</title><link>https://ikorihn.github.io/digitalgarden/note/PowerShell%E3%81%AE%E3%82%AD%E3%83%BC%E3%83%90%E3%82%A4%E3%83%B3%E3%83%89%E3%82%92emacs%E9%A2%A8%E3%81%AB%E3%81%99%E3%82%8B/</link><pubDate>Sun, 09 May 2021 13:07:00 +0900</pubDate><guid>https://ikorihn.github.io/digitalgarden/note/PowerShell%E3%81%AE%E3%82%AD%E3%83%BC%E3%83%90%E3%82%A4%E3%83%B3%E3%83%89%E3%82%92emacs%E9%A2%A8%E3%81%AB%E3%81%99%E3%82%8B/</guid><description>PowerShellのキーバインドをEmacs風にする【PSReadLine】 - メモ.org https://github.com/PowerShell/PSReadLine をインストール なお、PowerShell 6+で</description></item><item><title>windowsセットアップ</title><link>https://ikorihn.github.io/digitalgarden/note/windows%E3%82%BB%E3%83%83%E3%83%88%E3%82%A2%E3%83%83%E3%83%97/</link><pubDate>Sun, 09 May 2021 13:04:00 +0900</pubDate><guid>https://ikorihn.github.io/digitalgarden/note/windows%E3%82%BB%E3%83%83%E3%83%88%E3%82%A2%E3%83%83%E3%83%97/</guid><description>久々にWindowsを起動してアップデートもろもろしたのでメモ Windowsアップデート 1909のままになっていた 2021/05/11でサポ</description></item><item><title>Powershell7をWindows Terminalで使用する</title><link>https://ikorihn.github.io/digitalgarden/note/Powershell7%E3%82%92Windows-Terminal%E3%81%A7%E4%BD%BF%E7%94%A8%E3%81%99%E3%82%8B/</link><pubDate>Sun, 09 May 2021 12:51:00 +0900</pubDate><guid>https://ikorihn.github.io/digitalgarden/note/Powershell7%E3%82%92Windows-Terminal%E3%81%A7%E4%BD%BF%E7%94%A8%E3%81%99%E3%82%8B/</guid><description>Microsoft Store からインストールする https://docs.microsoft.com/ja-jp/powershell/scripting/install/installing-powershell-core-on-windows?view=powershell-7.1#installing-from-the-microsoft-store PowerShell 7.1 からはStoreからもインストールできるようになった Terminalの設定 設定 -&amp;gt; プロファイル -&amp;gt; コマンドライン を</description></item><item><title>WindowsでUS配列をAutoHotKeyで快適にするキーカスタマイズ</title><link>https://ikorihn.github.io/digitalgarden/note/Windows%E3%81%A7US%E9%85%8D%E5%88%97%E3%82%92AutoHotKey%E3%81%A7%E5%BF%AB%E9%81%A9%E3%81%AB%E3%81%99%E3%82%8B%E3%82%AD%E3%83%BC%E3%82%AB%E3%82%B9%E3%82%BF%E3%83%9E%E3%82%A4%E3%82%BA/</link><pubDate>Sun, 09 May 2021 12:21:00 +0900</pubDate><guid>https://ikorihn.github.io/digitalgarden/note/Windows%E3%81%A7US%E9%85%8D%E5%88%97%E3%82%92AutoHotKey%E3%81%A7%E5%BF%AB%E9%81%A9%E3%81%AB%E3%81%99%E3%82%8B%E3%82%AD%E3%83%BC%E3%82%AB%E3%82%B9%E3%82%BF%E3%83%9E%E3%82%A4%E3%82%BA/</guid><description>Sands いくつか例があったが自分の環境で動いたのは最後のだけだった AutoHotkeyでSandS - Qiita US配列で悠々自適AutoHotkeyScr</description></item><item><title>Windowsのカーソル操作をemacsライクにする</title><link>https://ikorihn.github.io/digitalgarden/note/Windows%E3%81%AE%E3%82%AB%E3%83%BC%E3%82%BD%E3%83%AB%E6%93%8D%E4%BD%9C%E3%82%92emacs%E3%83%A9%E3%82%A4%E3%82%AF%E3%81%AB%E3%81%99%E3%82%8B/</link><pubDate>Sun, 09 May 2021 12:20:00 +0900</pubDate><guid>https://ikorihn.github.io/digitalgarden/note/Windows%E3%81%AE%E3%82%AB%E3%83%BC%E3%82%BD%E3%83%AB%E6%93%8D%E4%BD%9C%E3%82%92emacs%E3%83%A9%E3%82%A4%E3%82%AF%E3%81%AB%E3%81%99%E3%82%8B/</guid><description>WindowsでUS配列をAutoHotKeyで快適にするキーカスタマイズ と同様の方法で設定 Windows 10でも「Emacs風キーバインド」を使おう【</description></item><item><title>KotlinのFormatter</title><link>https://ikorihn.github.io/digitalgarden/note/Kotlin%E3%81%AEFormatter/</link><pubDate>Fri, 07 May 2021 22:05:00 +0900</pubDate><guid>https://ikorihn.github.io/digitalgarden/note/Kotlin%E3%81%AEFormatter/</guid><description>#Kotlin https://github.com/facebookincubator/ktfmt https://github.com/pinterest/ktlint</description></item><item><title>JavaのFormatter</title><link>https://ikorihn.github.io/digitalgarden/note/Java%E3%81%AEFormatter/</link><pubDate>Fri, 07 May 2021 21:57:00 +0900</pubDate><guid>https://ikorihn.github.io/digitalgarden/note/Java%E3%81%AEFormatter/</guid><description>Java Check-style and Formatting using Maven | by Arushi Sharma | Medium google-java-format https://github.com/google/google-java-format/ mavenのpluginではなくIDEのpluginだったり、spotlessから使ったりするライブラリ googleformatter-maven-plugin https://github.com/talios/googleformatter-maven-plugin Google Java</description></item><item><title>JUni4のparameterized testをJUnit5に</title><link>https://ikorihn.github.io/digitalgarden/note/JUni4%E3%81%AEparameterized-test%E3%82%92JUnit5%E3%81%AB/</link><pubDate>Fri, 07 May 2021 21:18:00 +0900</pubDate><guid>https://ikorihn.github.io/digitalgarden/note/JUni4%E3%81%AEparameterized-test%E3%82%92JUnit5%E3%81%AB/</guid><description>#Java #Kotlin テスト対象コード 1 2 3 class Calculator() { fun add(x: Int, y: Int) = x + y } JUnit4 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 import org.hamcrest.CoreMatchers import org.hamcrest.MatcherAssert import org.junit.Test import org.junit.runner.RunWith import org.junit.runners.Parameterized @RunWith(Parameterized::class) internal class CalculatorTest(private val x: Int, private</description></item><item><title>Vimでバッファ同士の差分をとる</title><link>https://ikorihn.github.io/digitalgarden/note/Vim%E3%81%A7%E3%83%90%E3%83%83%E3%83%95%E3%82%A1%E5%90%8C%E5%A3%AB%E3%81%AE%E5%B7%AE%E5%88%86%E3%82%92%E3%81%A8%E3%82%8B/</link><pubDate>Thu, 06 May 2021 18:14:00 +0900</pubDate><guid>https://ikorihn.github.io/digitalgarden/note/Vim%E3%81%A7%E3%83%90%E3%83%83%E3%83%95%E3%82%A1%E5%90%8C%E5%A3%AB%E3%81%AE%E5%B7%AE%E5%88%86%E3%82%92%E3%81%A8%E3%82%8B/</guid><description>意外と知られていない diff に関する機能 - 永遠に未完成 diffthis ファイル同士のときは :diffsplit が使えるが、バッファ同士の場合は :diffthis しか使えない Vimを起動してそのま</description></item><item><title>ScoopでKaoriya版Vimをインストールする</title><link>https://ikorihn.github.io/digitalgarden/note/Scoop%E3%81%A7Kaoriya%E7%89%88Vim%E3%82%92%E3%82%A4%E3%83%B3%E3%82%B9%E3%83%88%E3%83%BC%E3%83%AB%E3%81%99%E3%82%8B/</link><pubDate>Wed, 05 May 2021 20:53:00 +0900</pubDate><guid>https://ikorihn.github.io/digitalgarden/note/Scoop%E3%81%A7Kaoriya%E7%89%88Vim%E3%82%92%E3%82%A4%E3%83%B3%E3%82%B9%E3%83%88%E3%83%BC%E3%83%AB%E3%81%99%E3%82%8B/</guid><description>Windows用のKaoriya版 Vim をインストールする https://github.com/dooteeen/scoop-for-jp Bucketを追加する 1 scoop bucket add jp https://github.com/dooteeen/scoop-for-jp アプリの追加 1 scoop install vim-kaoriya フォントの追加(全自動) 1 2 scoop</description></item><item><title>Scoop環境構築</title><link>https://ikorihn.github.io/digitalgarden/note/Scoop%E7%92%B0%E5%A2%83%E6%A7%8B%E7%AF%89/</link><pubDate>Wed, 05 May 2021 20:51:00 +0900</pubDate><guid>https://ikorihn.github.io/digitalgarden/note/Scoop%E7%92%B0%E5%A2%83%E6%A7%8B%E7%AF%89/</guid><description>Windows用のパッケージマネージャ。Homebrewのようなもの。 https://scoop.sh/ Chocolateyとの比較 winget、Chocolatey、sc</description></item><item><title>bcdeditとは</title><link>https://ikorihn.github.io/digitalgarden/note/bcdedit%E3%81%A8%E3%81%AF/</link><pubDate>Wed, 05 May 2021 15:16:00 +0900</pubDate><guid>https://ikorihn.github.io/digitalgarden/note/bcdedit%E3%81%A8%E3%81%AF/</guid><description>BCDEdit のコマンド ライン オプション | Microsoft Docs BCDEdit は、ブート構成データ (BCD) を管理するためのコマンド ライン ツールです。 BCD ファイルは、ブート アプリケーションやブ</description></item><item><title>LinuxとWindowsのデュアルブートをやめた</title><link>https://ikorihn.github.io/digitalgarden/note/Linux%E3%81%A8Windows%E3%81%AE%E3%83%87%E3%83%A5%E3%82%A2%E3%83%AB%E3%83%96%E3%83%BC%E3%83%88%E3%82%92%E3%82%84%E3%82%81%E3%81%9F/</link><pubDate>Wed, 05 May 2021 15:02:00 +0900</pubDate><guid>https://ikorihn.github.io/digitalgarden/note/Linux%E3%81%A8Windows%E3%81%AE%E3%83%87%E3%83%A5%E3%82%A2%E3%83%AB%E3%83%96%E3%83%BC%E3%83%88%E3%82%92%E3%82%84%E3%82%81%E3%81%9F/</guid><description>Windows10とUbuntu16.04のデュアルブート解除 LinuxとWindowsをデュアルブートするのは止めたほうが良い | SlackNote デュアル</description></item><item><title>Windows10とUbuntu16.04のデュアルブート解除</title><link>https://ikorihn.github.io/digitalgarden/note/Windows10%E3%81%A8Ubuntu16.04%E3%81%AE%E3%83%87%E3%83%A5%E3%82%A2%E3%83%AB%E3%83%96%E3%83%BC%E3%83%88%E8%A7%A3%E9%99%A4/</link><pubDate>Wed, 05 May 2021 10:30:00 +0900</pubDate><guid>https://ikorihn.github.io/digitalgarden/note/Windows10%E3%81%A8Ubuntu16.04%E3%81%AE%E3%83%87%E3%83%A5%E3%82%A2%E3%83%AB%E3%83%96%E3%83%BC%E3%83%88%E8%A7%A3%E9%99%A4/</guid><description>デュアルブートから Ubuntu を削除する方法 | Windows10 と Ubuntu のデュアルブートからUbuntu を削除し UEFI ブートを修正する方法 を大いに参考にした。 確認 Window</description></item><item><title>Ubuntuアップデート</title><link>https://ikorihn.github.io/digitalgarden/note/Ubuntu%E3%82%A2%E3%83%83%E3%83%97%E3%83%87%E3%83%BC%E3%83%88/</link><pubDate>Tue, 04 May 2021 21:30:00 +0900</pubDate><guid>https://ikorihn.github.io/digitalgarden/note/Ubuntu%E3%82%A2%E3%83%83%E3%83%97%E3%83%87%E3%83%BC%E3%83%88/</guid><description>2年以上起動していなかったUbuntu 16.04を20.04にアップデートする。 Windows10とUbuntu 16.04のデュアルブートに</description></item><item><title>NetlifyとGitHubで静的サイトを公開する</title><link>https://ikorihn.github.io/digitalgarden/note/Netlify%E3%81%A8GitHub%E3%81%A7%E9%9D%99%E7%9A%84%E3%82%B5%E3%82%A4%E3%83%88%E3%82%92%E5%85%AC%E9%96%8B%E3%81%99%E3%82%8B/</link><pubDate>Mon, 03 May 2021 23:28:00 +0900</pubDate><guid>https://ikorihn.github.io/digitalgarden/note/Netlify%E3%81%A8GitHub%E3%81%A7%E9%9D%99%E7%9A%84%E3%82%B5%E3%82%A4%E3%83%88%E3%82%92%E5%85%AC%E9%96%8B%E3%81%99%E3%82%8B/</guid><description>Netlifyの初期設定とデプロイ Netlify にアカウント作成、ログイン(特に難しい手順はないので割愛) GitHubとの連携 GitHubと連携する場合</description></item><item><title>Netlify</title><link>https://ikorihn.github.io/digitalgarden/note/Netlify/</link><pubDate>Mon, 03 May 2021 23:24:00 +0900</pubDate><guid>https://ikorihn.github.io/digitalgarden/note/Netlify/</guid><description>Netlifyは、静的サイトをホスティングすることができるWebサービス。</description></item><item><title>Termux SSHセットアップ</title><link>https://ikorihn.github.io/digitalgarden/note/Termux-SSH%E3%82%BB%E3%83%83%E3%83%88%E3%82%A2%E3%83%83%E3%83%97/</link><pubDate>Mon, 03 May 2021 15:26:00 +0900</pubDate><guid>https://ikorihn.github.io/digitalgarden/note/Termux-SSH%E3%82%BB%E3%83%83%E3%83%88%E3%82%A2%E3%83%83%E3%83%97/</guid><description>Termux をPCから操作できるようにするため、sshサーバーを起動して接続する 参考 Termuxを素早く設定 - Qiita 1 pkg install openssh PCでSSH鍵ペアを作成 1 ssh-keygen -t</description></item><item><title>Kotlin</title><link>https://ikorihn.github.io/digitalgarden/note/Kotlin/</link><pubDate>Mon, 03 May 2021 15:00:00 +0900</pubDate><guid>https://ikorihn.github.io/digitalgarden/note/Kotlin/</guid><description>概要 JVM言語 JetBrains製 GoogleがAndroidアプリ開発言語として正式採用 特徴 Null Safety</description></item><item><title>Vim</title><link>https://ikorihn.github.io/digitalgarden/note/Vim/</link><pubDate>Mon, 03 May 2021 14:53:00 +0900</pubDate><guid>https://ikorihn.github.io/digitalgarden/note/Vim/</guid><description>HOME for vim</description></item><item><title>Gatsbyjsの見出しにページ内リンクをつける</title><link>https://ikorihn.github.io/digitalgarden/note/Gatsbyjs%E3%81%AE%E8%A6%8B%E5%87%BA%E3%81%97%E3%81%AB%E3%83%9A%E3%83%BC%E3%82%B8%E5%86%85%E3%83%AA%E3%83%B3%E3%82%AF%E3%82%92%E3%81%A4%E3%81%91%E3%82%8B/</link><pubDate>Mon, 03 May 2021 11:18:00 +0900</pubDate><guid>https://ikorihn.github.io/digitalgarden/note/Gatsbyjs%E3%81%AE%E8%A6%8B%E5%87%BA%E3%81%97%E3%81%AB%E3%83%9A%E3%83%BC%E3%82%B8%E5%86%85%E3%83%AA%E3%83%B3%E3%82%AF%E3%82%92%E3%81%A4%E3%81%91%E3%82%8B/</guid><description/></item><item><title>Gatsbyjsに目次を追加する</title><link>https://ikorihn.github.io/digitalgarden/note/Gatsbyjs%E3%81%AB%E7%9B%AE%E6%AC%A1%E3%82%92%E8%BF%BD%E5%8A%A0%E3%81%99%E3%82%8B/</link><pubDate>Mon, 03 May 2021 11:11:00 +0900</pubDate><guid>https://ikorihn.github.io/digitalgarden/note/Gatsbyjs%E3%81%AB%E7%9B%AE%E6%AC%A1%E3%82%92%E8%BF%BD%E5%8A%A0%E3%81%99%E3%82%8B/</guid><description>各ページに目次を追加したい 前提条件 目次ボタンはhタグ内に#を使った「ページ内リンク」となるので ページ内リンクを取り扱うプラグインとの併用がほ</description></item><item><title>ObsidianでVimのyankとOSのClipboardを同期する方法</title><link>https://ikorihn.github.io/digitalgarden/note/Obsidian%E3%81%A7Vim%E3%81%AEyank%E3%81%A8OS%E3%81%AEClipboard%E3%82%92%E5%90%8C%E6%9C%9F%E3%81%99%E3%82%8B%E6%96%B9%E6%B3%95/</link><pubDate>Mon, 03 May 2021 10:52:00 +0900</pubDate><guid>https://ikorihn.github.io/digitalgarden/note/Obsidian%E3%81%A7Vim%E3%81%AEyank%E3%81%A8OS%E3%81%AEClipboard%E3%82%92%E5%90%8C%E6%9C%9F%E3%81%99%E3%82%8B%E6%96%B9%E6%B3%95/</guid><description>Obsidian Vimrc Support Plugin でset clipboard=unnamedすればOK</description></item><item><title>TailwindCSSがPostCSS8に対応していない</title><link>https://ikorihn.github.io/digitalgarden/note/TailwindCSS%E3%81%8CPostCSS8%E3%81%AB%E5%AF%BE%E5%BF%9C%E3%81%97%E3%81%A6%E3%81%84%E3%81%AA%E3%81%84/</link><pubDate>Mon, 03 May 2021 10:38:00 +0900</pubDate><guid>https://ikorihn.github.io/digitalgarden/note/TailwindCSS%E3%81%8CPostCSS8%E3%81%AB%E5%AF%BE%E5%BF%9C%E3%81%97%E3%81%A6%E3%81%84%E3%81%AA%E3%81%84/</guid><description>https://tailwindcss.com/docs/installation#post-css-7-compatibility-build PostCSS 7 compatibility build Tailwind CSS v2.0はPostCSS 8に依存する エラーが出る 1 Error: PostCSS plugin tailwindcss requires PostCSS 8. 再インストールしてPostCSS 7互換バージョンをいれる 1 2 npm</description></item><item><title>Windowsのfont変更</title><link>https://ikorihn.github.io/digitalgarden/note/Windows%E3%81%AEfont%E5%A4%89%E6%9B%B4/</link><pubDate>Mon, 03 May 2021 10:38:00 +0900</pubDate><guid>https://ikorihn.github.io/digitalgarden/note/Windows%E3%81%AEfont%E5%A4%89%E6%9B%B4/</guid><description>Meiryo UIも大っきらい!! を使用する リポジトリ https://github.com/Tatsu-syo/noMeiryoUI インストール http://tatsu.life.coocan.jp/MySoft/WinCust/index.html zipを解答して noMeiryoUI.exe を実行 → フォントを設定</description></item><item><title>Windowsのfont追加</title><link>https://ikorihn.github.io/digitalgarden/note/Windows%E3%81%AEfont%E8%BF%BD%E5%8A%A0/</link><pubDate>Mon, 03 May 2021 10:38:00 +0900</pubDate><guid>https://ikorihn.github.io/digitalgarden/note/Windows%E3%81%AEfont%E8%BF%BD%E5%8A%A0/</guid><description>Windowsのgit設定 でScoop for jpを設定する 1 2 scoop install main/sudo sudo scoop install cica -g</description></item><item><title>Windowsのgit設定</title><link>https://ikorihn.github.io/digitalgarden/note/Windows%E3%81%AEgit%E8%A8%AD%E5%AE%9A/</link><pubDate>Mon, 03 May 2021 10:38:00 +0900</pubDate><guid>https://ikorihn.github.io/digitalgarden/note/Windows%E3%81%AEgit%E8%A8%AD%E5%AE%9A/</guid><description>1 2 3 4 5 6 7 8 # ファイルの大文字・小文字を区別して認識する $ git config --global core.ignorecase false # 日本語のファイル名が文字化けしないでちゃんと表示される $ git config --global core.quotepath false</description></item><item><title>Windowsのvim設定</title><link>https://ikorihn.github.io/digitalgarden/note/Windows%E3%81%AEvim%E8%A8%AD%E5%AE%9A/</link><pubDate>Mon, 03 May 2021 10:38:00 +0900</pubDate><guid>https://ikorihn.github.io/digitalgarden/note/Windows%E3%81%AEvim%E8%A8%AD%E5%AE%9A/</guid><description>Scoop for jpからインストールする https://github.com/dooteeen/scoop-for-jp 1 2 3 4 $ scoop bucket add jp https://github.com/dooteeen/scoop-for-jp Checking repo... ok The jp bucket was added successfully. $ scoop install vim-kaoriya</description></item><item><title>GatsbyjsにSNSアイコン</title><link>https://ikorihn.github.io/digitalgarden/note/Gatsbyjs%E3%81%ABSNS%E3%82%A2%E3%82%A4%E3%82%B3%E3%83%B3/</link><pubDate>Sun, 02 May 2021 22:19:00 +0900</pubDate><guid>https://ikorihn.github.io/digitalgarden/note/Gatsbyjs%E3%81%ABSNS%E3%82%A2%E3%82%A4%E3%82%B3%E3%83%B3/</guid><description>FontAwesomeをインストール https://fontawesome.com/how-to-use/on-the-web/using-with/react 1 yarn add @fortawesome/fontawesome-svg-core @fortawesome/free-solid-svg-icons @fortawesome/react-fontawesome @fortawesome/free-brands-svg-icons コンポーネントを利用する 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32</description></item><item><title>GatsbyjsのTypeScript化</title><link>https://ikorihn.github.io/digitalgarden/note/Gatsbyjs%E3%81%AETypeScript%E5%8C%96/</link><pubDate>Sun, 02 May 2021 21:53:00 +0900</pubDate><guid>https://ikorihn.github.io/digitalgarden/note/Gatsbyjs%E3%81%AETypeScript%E5%8C%96/</guid><description>Gatsby.js を TypeScript 化する tsconfig.jsonを追加 tsconfig.json GraphQL Schema, リクエストの型生成 Gatsby はリソースに対して GraphQL でリクエストを送りデータを取得する GraphQL リクエストのレ</description></item><item><title>Atomic Notes</title><link>https://ikorihn.github.io/digitalgarden/note/Atomic-Notes/</link><pubDate>Sun, 02 May 2021 21:14:00 +0900</pubDate><guid>https://ikorihn.github.io/digitalgarden/note/Atomic-Notes/</guid><description>https://jmatsuzaki.com/archives/26915 Atomic Notesとは何かを端的に説明すると、1枚のノートをこれ以上不可分な単位と考えられる極小のサイズまで削り、原子性（Atomic）を保つこ</description></item><item><title>Evergreen Notes</title><link>https://ikorihn.github.io/digitalgarden/note/Evergreen-Notes/</link><pubDate>Sun, 02 May 2021 20:59:00 +0900</pubDate><guid>https://ikorihn.github.io/digitalgarden/note/Evergreen-Notes/</guid><description>https://jmatsuzaki.com/archives/27412</description></item><item><title>Gatsby.js</title><link>https://ikorihn.github.io/digitalgarden/note/Gatsby.js/</link><pubDate>Sun, 02 May 2021 20:35:00 +0900</pubDate><guid>https://ikorihn.github.io/digitalgarden/note/Gatsby.js/</guid><description>Reactの静的サイトジェネレータ https://www.gatsbyjs.com/ 動作 Reactアプリをビルド時に1回実行し、HTML,JSを生成する。 生成されたファイルをホスティングサ</description></item><item><title>GatsbyとNetlifyでブログ作成</title><link>https://ikorihn.github.io/digitalgarden/note/Gatsby%E3%81%A8Netlify%E3%81%A7%E3%83%96%E3%83%AD%E3%82%B0%E4%BD%9C%E6%88%90/</link><pubDate>Sun, 02 May 2021 20:25:00 +0900</pubDate><guid>https://ikorihn.github.io/digitalgarden/note/Gatsby%E3%81%A8Netlify%E3%81%A7%E3%83%96%E3%83%AD%E3%82%B0%E4%BD%9C%E6%88%90/</guid><description>Gatsby.jsとNetlifyでブログを作成して公開する手順 Netlify Netlify、GitHubリポジトリを設定する NetlifyとGitHu</description></item><item><title>Obsidianをスマホと同期する</title><link>https://ikorihn.github.io/digitalgarden/note/Obsidian%E3%82%92%E3%82%B9%E3%83%9E%E3%83%9B%E3%81%A8%E5%90%8C%E6%9C%9F%E3%81%99%E3%82%8B/</link><pubDate>Sun, 02 May 2021 15:11:00 +0900</pubDate><guid>https://ikorihn.github.io/digitalgarden/note/Obsidian%E3%82%92%E3%82%B9%E3%83%9E%E3%83%9B%E3%81%A8%E5%90%8C%E6%9C%9F%E3%81%99%E3%82%8B/</guid><description>Obsidianとは AndroidとPCでメモを同期する 方針 git,GitHubでvaultを管理する Androidでもメモをとってgit管</description></item><item><title>Obsidian使い方</title><link>https://ikorihn.github.io/digitalgarden/note/Obsidian%E4%BD%BF%E3%81%84%E6%96%B9/</link><pubDate>Sun, 02 May 2021 15:00:00 +0900</pubDate><guid>https://ikorihn.github.io/digitalgarden/note/Obsidian%E4%BD%BF%E3%81%84%E6%96%B9/</guid><description>https://choiyaki.com/?tag=obsidian Obsidianは、1ページ1テーマをつらぬく Obsidianでは、1ページ1テーマをつらぬく気持ちで書きます。とにかく、1つのことについ</description></item><item><title>Obsidian 日次メモを取る</title><link>https://ikorihn.github.io/digitalgarden/note/Obsidian-%E6%97%A5%E6%AC%A1%E3%83%A1%E3%83%A2%E3%82%92%E5%8F%96%E3%82%8B/</link><pubDate>Sun, 02 May 2021 14:01:00 +0900</pubDate><guid>https://ikorihn.github.io/digitalgarden/note/Obsidian-%E6%97%A5%E6%AC%A1%E3%83%A1%E3%83%A2%E3%82%92%E5%8F%96%E3%82%8B/</guid><description>Obsidianとは https://note.com/takibayashi/n/nd6250964f0a7 動機 毎日何しているか忘れていってしまうからライフログを徹底したい 細かいことの記録がすべて残っているので、後々役に立つこ</description></item><item><title>Obsidian環境を整える</title><link>https://ikorihn.github.io/digitalgarden/note/Obsidian%E7%92%B0%E5%A2%83%E3%82%92%E6%95%B4%E3%81%88%E3%82%8B/</link><pubDate>Sun, 02 May 2021 13:58:00 +0900</pubDate><guid>https://ikorihn.github.io/digitalgarden/note/Obsidian%E7%92%B0%E5%A2%83%E3%82%92%E6%95%B4%E3%81%88%E3%82%8B/</guid><description>Obsidianとは PC ホームページからダウンロード vaultを作成 GitHubにリポジトリ作成 プラグインを設定 Calendar Git Daily Notes Templates theme Appearance &amp;gt; Theme &amp;gt; Dracula for Obsidian を適</description></item><item><title>Obsidianとは</title><link>https://ikorihn.github.io/digitalgarden/note/Obsidian%E3%81%A8%E3%81%AF/</link><pubDate>Sun, 02 May 2021 13:46:00 +0900</pubDate><guid>https://ikorihn.github.io/digitalgarden/note/Obsidian%E3%81%A8%E3%81%AF/</guid><description>概要 PC内ローカルにあるマークダウン（Markdown記法）ファイルの管理システムである。 特徴 アカウント不要 markdownのみで管理できる</description></item><item><title>Zettelkastenとは</title><link>https://ikorihn.github.io/digitalgarden/note/Zettelkasten%E3%81%A8%E3%81%AF/</link><pubDate>Sun, 02 May 2021 13:26:00 +0900</pubDate><guid>https://ikorihn.github.io/digitalgarden/note/Zettelkasten%E3%81%A8%E3%81%AF/</guid><description>https://jmatsuzaki.com/archives/26856 Zettelkastenの特徴を簡単に解説すると以下のような特徴をもったシステムといえます。 カードにはユニークなIDが付与され、IDを使っ</description></item><item><title>spring-boot-configuration</title><link>https://ikorihn.github.io/digitalgarden/note/spring-boot-configuration/</link><pubDate>Mon, 08 Mar 2021 18:49:00 +0900</pubDate><guid>https://ikorihn.github.io/digitalgarden/note/spring-boot-configuration/</guid><description>spring-boot-configuration Spring Boot で application.yml を Kotlin でバインディングできるようにしたい 環境 Spring Boot 2.4.0 Kotlin 1.4.10 きっかけ Spring Bootでは環境別に設定を切り替える仕組みとしてapplicatio</description></item><item><title>svelte_typescript_svelte-material-ui</title><link>https://ikorihn.github.io/digitalgarden/note/svelte_typescript_svelte-material-ui/</link><pubDate>Sun, 07 Mar 2021 16:28:00 +0900</pubDate><guid>https://ikorihn.github.io/digitalgarden/note/svelte_typescript_svelte-material-ui/</guid><description>Svelte svelte_typescript_svelte-material-ui svelte-material-ui を導入する 参考 https://github.com/hperrin/svelte-material-ui https://github.com/hperrin/smui-example-rollup/ インストール 1 yarn add -D svelte-material-ui rollupでPostCSSを使うためのプラグインを導入 PostCSS 8 を使用するよう警告が出たため別でイ</description></item><item><title>buildgradleのjacocoでcoverageを標準出力</title><link>https://ikorihn.github.io/digitalgarden/note/buildgradle%E3%81%AEjacoco%E3%81%A7coverage%E3%82%92%E6%A8%99%E6%BA%96%E5%87%BA%E5%8A%9B/</link><pubDate>Thu, 04 Mar 2021 17:33:00 +0900</pubDate><guid>https://ikorihn.github.io/digitalgarden/note/buildgradle%E3%81%AEjacoco%E3%81%A7coverage%E3%82%92%E6%A8%99%E6%BA%96%E5%87%BA%E5%8A%9B/</guid><description>jacoco_coverageを標準出力 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50</description></item><item><title>Vue vuex_typescriptでjest</title><link>https://ikorihn.github.io/digitalgarden/note/Vue-vuex_typescript%E3%81%A7jest/</link><pubDate>Wed, 03 Mar 2021 21:20:00 +0900</pubDate><guid>https://ikorihn.github.io/digitalgarden/note/Vue-vuex_typescript%E3%81%A7jest/</guid><description>vuex_typescriptでjest middlewareをテストする場合を考える。 ~/middleware/user.ts 1 2 3 4 5 6 7 8 9 10 11 12 import { Context, Middleware } from &amp;#39;@nuxt/types&amp;#39; import { user } from &amp;#39;~/store&amp;#39; const</description></item><item><title>Jenkinsジョブでgit-lfsを使用して一部だけpullしたい</title><link>https://ikorihn.github.io/digitalgarden/note/Jenkins%E3%82%B8%E3%83%A7%E3%83%96%E3%81%A7git-lfs%E3%82%92%E4%BD%BF%E7%94%A8%E3%81%97%E3%81%A6%E4%B8%80%E9%83%A8%E3%81%A0%E3%81%91pull%E3%81%97%E3%81%9F%E3%81%84/</link><pubDate>Fri, 19 Feb 2021 18:26:00 +0900</pubDate><guid>https://ikorihn.github.io/digitalgarden/note/Jenkins%E3%82%B8%E3%83%A7%E3%83%96%E3%81%A7git-lfs%E3%82%92%E4%BD%BF%E7%94%A8%E3%81%97%E3%81%A6%E4%B8%80%E9%83%A8%E3%81%A0%E3%81%91pull%E3%81%97%E3%81%9F%E3%81%84/</guid><description>Jenkinsとgitlfs やりたいこと Jenkinsのgit pluginで一部だけgit lfs pullしたい わかっていること git lfs pull -I &amp;quot;$target&amp;quot; で対象の</description></item><item><title>c++環境構築</title><link>https://ikorihn.github.io/digitalgarden/note/c++%E7%92%B0%E5%A2%83%E6%A7%8B%E7%AF%89/</link><pubDate>Sun, 07 Feb 2021 23:27:00 +0900</pubDate><guid>https://ikorihn.github.io/digitalgarden/note/c++%E7%92%B0%E5%A2%83%E6%A7%8B%E7%AF%89/</guid><description>c++環境構築 gccインストール https://qiita.com/EngTks/items/ffa2a7b4d264e7a052c6 初期状態 1 g++ --version Clangがデフォルトで入っている gccにのみ、stdc++.hというC++の標準ライブラリ</description></item><item><title>vue-awesome-swiperを使ってカルーセル風UIを作ってみた</title><link>https://ikorihn.github.io/digitalgarden/note/vue-awesome-swiper%E3%82%92%E4%BD%BF%E3%81%A3%E3%81%A6%E3%82%AB%E3%83%AB%E3%83%BC%E3%82%BB%E3%83%AB%E9%A2%A8UI%E3%82%92%E4%BD%9C%E3%81%A3%E3%81%A6%E3%81%BF%E3%81%9F/</link><pubDate>Sun, 31 Jan 2021 00:18:00 +0900</pubDate><guid>https://ikorihn.github.io/digitalgarden/note/vue-awesome-swiper%E3%82%92%E4%BD%BF%E3%81%A3%E3%81%A6%E3%82%AB%E3%83%AB%E3%83%BC%E3%82%BB%E3%83%AB%E9%A2%A8UI%E3%82%92%E4%BD%9C%E3%81%A3%E3%81%A6%E3%81%BF%E3%81%9F/</guid><description>vue-awesome-swiperを使ってカルーセル風UIを作ってみた https://github.surmon.me/vue-awesome-swiper/ https://swiperjs.com/swiper-api https://www.kabanoki.net/4783/ https://mykii.blog/nuxt-vue-awesome-swiper/ https://webrandum.net/js-library-swiper/ 1 yarn add swiper vue-awesome-swiper globalに定義する 1 2 3 4 5 6 7 8 9 10 import Vue from</description></item><item><title>Vue TypeScriptでGoogleMapを使う</title><link>https://ikorihn.github.io/digitalgarden/note/Vue-TypeScript%E3%81%A7GoogleMap%E3%82%92%E4%BD%BF%E3%81%86/</link><pubDate>Sun, 31 Jan 2021 00:11:00 +0900</pubDate><guid>https://ikorihn.github.io/digitalgarden/note/Vue-TypeScript%E3%81%A7GoogleMap%E3%82%92%E4%BD%BF%E3%81%86/</guid><description>Vue.js+TypeScriptでGoogleMapを使う Vue.js公式のcookbookにexampleが乗ってる https://jp.vuejs.org/v2/cookbook/practical-use-of-scoped-slots.html slotを使ってG</description></item><item><title>springdocでpolymorphismを表現するのが難しかった</title><link>https://ikorihn.github.io/digitalgarden/note/springdoc%E3%81%A7polymorphism%E3%82%92%E8%A1%A8%E7%8F%BE%E3%81%99%E3%82%8B%E3%81%AE%E3%81%8C%E9%9B%A3%E3%81%97%E3%81%8B%E3%81%A3%E3%81%9F/</link><pubDate>Mon, 18 Jan 2021 20:19:00 +0900</pubDate><guid>https://ikorihn.github.io/digitalgarden/note/springdoc%E3%81%A7polymorphism%E3%82%92%E8%A1%A8%E7%8F%BE%E3%81%99%E3%82%8B%E3%81%AE%E3%81%8C%E9%9B%A3%E3%81%97%E3%81%8B%E3%81%A3%E3%81%9F/</guid><description>springdoc-bug nestしたpolymorphismがうまく反映されなかった 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39</description></item><item><title>jenkinsのslaveからssh公開鍵認証がうまく行かなかった</title><link>https://ikorihn.github.io/digitalgarden/note/jenkins%E3%81%AEslave%E3%81%8B%E3%82%89ssh%E5%85%AC%E9%96%8B%E9%8D%B5%E8%AA%8D%E8%A8%BC%E3%81%8C%E3%81%86%E3%81%BE%E3%81%8F%E8%A1%8C%E3%81%8B%E3%81%AA%E3%81%8B%E3%81%A3%E3%81%9F/</link><pubDate>Tue, 12 Jan 2021 12:36:00 +0900</pubDate><guid>https://ikorihn.github.io/digitalgarden/note/jenkins%E3%81%AEslave%E3%81%8B%E3%82%89ssh%E5%85%AC%E9%96%8B%E9%8D%B5%E8%AA%8D%E8%A8%BC%E3%81%8C%E3%81%86%E3%81%BE%E3%81%8F%E8%A1%8C%E3%81%8B%E3%81%AA%E3%81%8B%E3%81%A3%E3%81%9F/</guid><description>jenkins ssh 考えてみたら当たり前って感じだけど、Slaveに鍵を置いていない場合、slaveからsshすることができない 解決方法 認証情報にJenki</description></item><item><title>ts-nuxt-storybookの構築</title><link>https://ikorihn.github.io/digitalgarden/note/ts-nuxt-storybook%E3%81%AE%E6%A7%8B%E7%AF%89/</link><pubDate>Thu, 07 Jan 2021 12:57:00 +0900</pubDate><guid>https://ikorihn.github.io/digitalgarden/note/ts-nuxt-storybook%E3%81%AE%E6%A7%8B%E7%AF%89/</guid><description>ts nuxt storybookの構築 Nuxt.js 2.14.6 TypeScript 4.0.5 Storybook 6.1.10 @nuxtjs/tailwindcss: 3.1.0 TypeScriptで書かれたVueコンポーネントを使う 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20</description></item><item><title>typescript-openapi</title><link>https://ikorihn.github.io/digitalgarden/note/typescript-openapi/</link><pubDate>Tue, 29 Dec 2020 16:35:00 +0900</pubDate><guid>https://ikorihn.github.io/digitalgarden/note/typescript-openapi/</guid><description>typescript openapi https://github.com/OpenAPITools/openapi-generator/blob/master/docs/generators/typescript-axios.md
package.json
1 2 3 4 5 { &amp;#34;scripts&amp;#34;: { &amp;#34;openapi-generate&amp;#34;: &amp;#34;rm -f api_client/*.ts &amp;amp;&amp;amp; TS_POST_PROCESS_FILE=&amp;#39;yarn prettier --write&amp;#39; openapi-generator-cli generate -i http://localhost:8080/api/v3/api-docs -g typescript-axios -o api_client --additional-properties=disallowAdditionalPropertiesIfNotPresent=false,modelPropertyNaming=camelCase,supportsES6=true,useSingleRequestParameter=true --enable-post-process-file&amp;#34; } }</description></item><item><title>spring-validation</title><link>https://ikorihn.github.io/digitalgarden/note/spring-validation/</link><pubDate>Tue, 29 Dec 2020 16:31:00 +0900</pubDate><guid>https://ikorihn.github.io/digitalgarden/note/spring-validation/</guid><description>spring validation SpringFramework REST APIでパラメータをバリデーションしたい @Validated, @Validをつけてもvalidationされなかった 2.3からvalidationライブ</description></item><item><title>springdoc</title><link>https://ikorihn.github.io/digitalgarden/note/springdoc/</link><pubDate>Tue, 29 Dec 2020 16:26:00 +0900</pubDate><guid>https://ikorihn.github.io/digitalgarden/note/springdoc/</guid><description>springdoc SpringFramework でOpenAPI仕様書を作成するライブラリ springfoxをやめた OAS3にイマイチたいおうしてない oneOfが使えなかった https://swagger.io/docs/specification/data-models/inheritance-and-polymorphism/ やったこ</description></item><item><title>typescript-TypeGuard</title><link>https://ikorihn.github.io/digitalgarden/note/typescript-TypeGuard/</link><pubDate>Tue, 29 Dec 2020 16:13:00 +0900</pubDate><guid>https://ikorihn.github.io/digitalgarden/note/typescript-TypeGuard/</guid><description> TypeScript
typescript TypeGuard 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 class Animal { } class Duck extends Animal { } class Tiger extends Animal { } const isDuck = (animal: Animal): animal is Duck =&amp;gt; animal.type === &amp;#39;duck&amp;#39; &amp;amp;&amp;amp; animal.call !== undefined const animal = someFunc() if (isDuck(animal)) { animal.call() }</description></item><item><title>spring-mock-rest-server</title><link>https://ikorihn.github.io/digitalgarden/note/spring-mock-rest-server/</link><pubDate>Mon, 28 Dec 2020 17:22:00 +0900</pubDate><guid>https://ikorihn.github.io/digitalgarden/note/spring-mock-rest-server/</guid><description>spring mock rest server SpringFramework のユニットテストでHTTPサーバーをmockする RestTemplateをmockするか、RestTemplateの通信先をmoc</description></item><item><title>ktlint</title><link>https://ikorihn.github.io/digitalgarden/note/ktlint/</link><pubDate>Sun, 27 Dec 2020 21:56:00 +0900</pubDate><guid>https://ikorihn.github.io/digitalgarden/note/ktlint/</guid><description>ktlint Kotlin でlintを設定する https://github.com/pinterest/ktlint .editorconfig を置くとそちらの設定が優先される デフォルト設定に従うことにした Gradle(kts) プラグインなしで設定する場合 面倒だったのでプラグ</description></item><item><title>vim-conceal</title><link>https://ikorihn.github.io/digitalgarden/note/vim-conceal/</link><pubDate>Sat, 26 Dec 2020 15:33:00 +0900</pubDate><guid>https://ikorihn.github.io/digitalgarden/note/vim-conceal/</guid><description>vim conceal きっかけ vimでmarkdownを編集中、_斜体_や太字を表すためのアンダースコアやアスタリスクが表示されなくなってしまった。 カーソル位</description></item><item><title>ts-jest-vue</title><link>https://ikorihn.github.io/digitalgarden/note/ts-jest-vue/</link><pubDate>Fri, 18 Dec 2020 11:55:00 +0900</pubDate><guid>https://ikorihn.github.io/digitalgarden/note/ts-jest-vue/</guid><description>ts-jest vue 問題 Logo.spec.js -&amp;gt; Logo.spec.ts にリネームしてyarn testしたらエラー test/Logo.spec.ts 1 2 3 4 5 6 7 8 9 import { mount } from &amp;#39;@vue/test-utils&amp;#39; import Logo from &amp;#39;@/components/Logo.vue&amp;#39; describe(&amp;#39;Logo&amp;#39;, () =&amp;gt; { test(&amp;#39;is a Vue instance&amp;#39;, () =&amp;gt; { const wrapper = mount(Logo) expect(wrapper.vm).toBeTruthy() }) }) 1 2 3 4</description></item><item><title>jenkinsサーバーにbrewを入れたがpathが認識されない</title><link>https://ikorihn.github.io/digitalgarden/note/jenkins%E3%82%B5%E3%83%BC%E3%83%90%E3%83%BC%E3%81%ABbrew%E3%82%92%E5%85%A5%E3%82%8C%E3%81%9F%E3%81%8Cpath%E3%81%8C%E8%AA%8D%E8%AD%98%E3%81%95%E3%82%8C%E3%81%AA%E3%81%84/</link><pubDate>Wed, 09 Dec 2020 10:56:00 +0900</pubDate><guid>https://ikorihn.github.io/digitalgarden/note/jenkins%E3%82%B5%E3%83%BC%E3%83%90%E3%83%BC%E3%81%ABbrew%E3%82%92%E5%85%A5%E3%82%8C%E3%81%9F%E3%81%8Cpath%E3%81%8C%E8%AA%8D%E8%AD%98%E3%81%95%E3%82%8C%E3%81%AA%E3%81%84/</guid><description>トラブルシュート PATHが認識されない Jenkinsの管理 -&amp;gt; システムの設定 -&amp;gt; グローバルプロパティにPATHを設定してもうまく設定されない 1 2</description></item><item><title>hubs_cloud</title><link>https://ikorihn.github.io/digitalgarden/note/hubs_cloud/</link><pubDate>Fri, 20 Nov 2020 23:19:00 +0900</pubDate><guid>https://ikorihn.github.io/digitalgarden/note/hubs_cloud/</guid><description>hubs_cloud VR空間をデプロイできる リンク 公式 AWS Marketplace 日本語で試した人 ユーザー制限 https://hubs.mozilla.com/docs/hubs-faq.html#can-i-prevent-unregistered-attendees-from-attending-my-event 招待URLからのアクセスのみに絞ることは hubs.mozilla.com でもできる 承認済みユーザーの</description></item><item><title>NatureRemo</title><link>https://ikorihn.github.io/digitalgarden/note/NatureRemo/</link><pubDate>Mon, 09 Nov 2020 19:42:00 +0900</pubDate><guid>https://ikorihn.github.io/digitalgarden/note/NatureRemo/</guid><description>2020-11-18 Nature Remo Go 勉強会 シングルバイナリにこだわる (@fujiwara) Go で Lambda ランタイムの寿命に影響されにくい 起動が早い LambdaでもCLIでも動く一個のバイナリを置い</description></item><item><title>unicodeとemojiについて</title><link>https://ikorihn.github.io/digitalgarden/note/unicode%E3%81%A8emoji%E3%81%AB%E3%81%A4%E3%81%84%E3%81%A6/</link><pubDate>Mon, 09 Nov 2020 19:42:00 +0900</pubDate><guid>https://ikorihn.github.io/digitalgarden/note/unicode%E3%81%A8emoji%E3%81%AB%E3%81%A4%E3%81%84%E3%81%A6/</guid><description>バージョン emoji 11.0 からは Unicode のバージョンと揃っている 最新はemoji 14.0 emoji 1.0 で初めて整理された https://emojipedia.org/emoji-1.0/ Unicode 6.1 までの絵文字 + すこし 1 2 3 4 5 The first release of emoji documentation from Unicode, which</description></item><item><title>apigw_lambda知見</title><link>https://ikorihn.github.io/digitalgarden/note/apigw_lambda%E7%9F%A5%E8%A6%8B/</link><pubDate>Sat, 07 Nov 2020 17:35:00 +0900</pubDate><guid>https://ikorihn.github.io/digitalgarden/note/apigw_lambda%E7%9F%A5%E8%A6%8B/</guid><description>lambda endpointをpathごとに作る main関数のみエンドポイントごとに準備 handler関数は共通 handlerの中でpathごとに振り</description></item><item><title>pver_with_cobra</title><link>https://ikorihn.github.io/digitalgarden/note/pver_with_cobra/</link><pubDate>Sat, 26 Sep 2020 16:02:00 +0900</pubDate><guid>https://ikorihn.github.io/digitalgarden/note/pver_with_cobra/</guid><description>pver_with_cobra cobra init cobra add new関数でコマンドを初期化 DIのためと思ってそうしたけど、後でroot.go内で初期化するようにしたので必要なかった rootコマ</description></item><item><title>powerline</title><link>https://ikorihn.github.io/digitalgarden/note/powerline/</link><pubDate>Tue, 22 Sep 2020 18:46:00 +0900</pubDate><guid>https://ikorihn.github.io/digitalgarden/note/powerline/</guid><description>powerline powerlineをインストール pipでインストールする https://powerline.readthedocs.io/en/master/installation.html#pip-installation font powerline対応のフォントでないとうまく表示されない Nerd fonts, Cicaなど tmux 次</description></item><item><title>fishプラグイン</title><link>https://ikorihn.github.io/digitalgarden/note/fish%E3%83%97%E3%83%A9%E3%82%B0%E3%82%A4%E3%83%B3/</link><pubDate>Mon, 21 Sep 2020 00:21:00 +0900</pubDate><guid>https://ikorihn.github.io/digitalgarden/note/fish%E3%83%97%E3%83%A9%E3%82%B0%E3%82%A4%E3%83%B3/</guid><description>fish fish fisher でプラグイン管理 fzf 用の設定 rafaelrinaldi/pure jethrokuan/z 0rax/fish-bd oh-my-fish/theme-bobthefish jethrokuan/fzf decors/fish-ghq</description></item><item><title>vim-lsp</title><link>https://ikorihn.github.io/digitalgarden/note/vim-lsp/</link><pubDate>Sun, 20 Sep 2020 15:21:00 +0900</pubDate><guid>https://ikorihn.github.io/digitalgarden/note/vim-lsp/</guid><description>vim-lsp ale.vim lintエンジン lspクライアント prabirshrestha/vim-lsp lspクライアント mattn/vim-lsp-settings vim-lspの設定をかんたんにする language serverのインストールを :LspInstallServer :LspUninstallServer で行う 1 2</description></item><item><title>fzf.vimの使い方</title><link>https://ikorihn.github.io/digitalgarden/note/fzf.vim%E3%81%AE%E4%BD%BF%E3%81%84%E6%96%B9/</link><pubDate>Sat, 19 Sep 2020 20:36:00 +0900</pubDate><guid>https://ikorihn.github.io/digitalgarden/note/fzf.vim%E3%81%AE%E4%BD%BF%E3%81%84%E6%96%B9/</guid><description>fzf https://github.com/jethrokuan/fzf#usage FZF_DEFAULT_COMMAND でfzf実行時に使用するコマンドを指定 ripgrep が高速なのでこんな風にするといい FZF_DEFAULT_COMMAND=rg --hidden -g &amp;quot;!.git/*&amp;quot; -l &amp;quot;&amp;quot; FZF_CTRL_T_COMMAND='rg --files --hidden --follow --glob &amp;quot;!.git/*&amp;quot;' で、ctrl-t を押すとfzfが実行さ</description></item><item><title>vim 使っているplugin</title><link>https://ikorihn.github.io/digitalgarden/note/vim-%E4%BD%BF%E3%81%A3%E3%81%A6%E3%81%84%E3%82%8Bplugin/</link><pubDate>Sat, 19 Sep 2020 17:36:00 +0900</pubDate><guid>https://ikorihn.github.io/digitalgarden/note/vim-%E4%BD%BF%E3%81%A3%E3%81%A6%E3%81%84%E3%82%8Bplugin/</guid><description>2020年版 vim プラグイン https://engineering.mercari.com/blog/entry/mercari_codecast_1/ これをみて真面目に vim で書こうと思った 小さいやつなら十分 vim-gitgutter 変更行にマーク表示 fugitive Git操作 注意 Gstatus を実行するとshell</description></item><item><title>2020</title><link>https://ikorihn.github.io/digitalgarden/posts/2020/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://ikorihn.github.io/digitalgarden/posts/2020/</guid><description/></item><item><title>2021</title><link>https://ikorihn.github.io/digitalgarden/posts/2021/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://ikorihn.github.io/digitalgarden/posts/2021/</guid><description/></item><item><title>2022</title><link>https://ikorihn.github.io/digitalgarden/posts/2022/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://ikorihn.github.io/digitalgarden/posts/2022/</guid><description/></item><item><title>2023</title><link>https://ikorihn.github.io/digitalgarden/posts/2023/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://ikorihn.github.io/digitalgarden/posts/2023/</guid><description/></item><item><title>Goならわかるシステムプログラミング第2版</title><link>https://ikorihn.github.io/digitalgarden/note/Go%E3%81%AA%E3%82%89%E3%82%8F%E3%81%8B%E3%82%8B%E3%82%B7%E3%82%B9%E3%83%86%E3%83%A0%E3%83%97%E3%83%AD%E3%82%B0%E3%83%A9%E3%83%9F%E3%83%B3%E3%82%B0%E7%AC%AC2%E7%89%88/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://ikorihn.github.io/digitalgarden/note/Go%E3%81%AA%E3%82%89%E3%82%8F%E3%81%8B%E3%82%8B%E3%82%B7%E3%82%B9%E3%83%86%E3%83%A0%E3%83%97%E3%83%AD%E3%82%B0%E3%83%A9%E3%83%9F%E3%83%B3%E3%82%B0%E7%AC%AC2%E7%89%88/</guid><description>1章 2章 io.Writer ファイルディスクリプタに対応するモノは、通常のファイルには限られません。標準入出力、ソケット、OS や CPU に内蔵されている乱数生成の仕</description></item><item><title>Neovim</title><link>https://ikorihn.github.io/digitalgarden/note/Neovim/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://ikorihn.github.io/digitalgarden/note/Neovim/</guid><description>Vim のフォークであり、モダンな開発環境に適した多くの新機能を提供している。 NeovimはVimよりも柔軟性や拡張性が高い。 また、Neovimは</description></item></channel></rss>